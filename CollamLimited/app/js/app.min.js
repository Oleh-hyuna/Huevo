function moveToSection(t){t.preventDefault();var e=$(t.target).attr("href"),n=$(e).offset().top;$(".button_hamburger").is(":visible")&&($(".button_hamburger + .menu, #overlay").removeClass("is-visible"),$("body").removeClass("hidden"),$(".button_hamburger").removeClass("is-active")),$("html, body").animate({scrollTop:n},500)}!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(k,t){var e=[],j=k.document,c=e.slice,m=e.concat,a=e.push,o=e.indexOf,n={},i=n.toString,p=n.hasOwnProperty,g={},s="2.2.4",C=function(t,e){return new C.fn.init(t,e)},r=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,l=/^-ms-/,u=/-([\da-z])/gi,f=function(t,e){return e.toUpperCase()};function d(t){var e=!!t&&"length"in t&&t.length,n=C.type(t);return"function"!==n&&!C.isWindow(t)&&("array"===n||0===e||"number"==typeof e&&0<e&&e-1 in t)}C.fn=C.prototype={jquery:s,constructor:C,selector:"",length:0,toArray:function(){return c.call(this)},get:function(t){return null!=t?t<0?this[t+this.length]:this[t]:c.call(this)},pushStack:function(t){var e=C.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return C.each(this,t)},map:function(n){return this.pushStack(C.map(this,function(t,e){return n.call(t,e,t)}))},slice:function(){return this.pushStack(c.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(0<=n&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:a,sort:e.sort,splice:e.splice},C.extend=C.fn.extend=function(){var t,e,n,i,o,s,r=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof r&&(u=r,r=arguments[a]||{},a++),"object"==typeof r||C.isFunction(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)n=r[e],r!==(i=t[e])&&(u&&i&&(C.isPlainObject(i)||(o=C.isArray(i)))?(s=o?(o=!1,n&&C.isArray(n)?n:[]):n&&C.isPlainObject(n)?n:{},r[e]=C.extend(u,s,i)):void 0!==i&&(r[e]=i));return r},C.extend({expando:"jQuery"+(s+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===C.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=t&&t.toString();return!C.isArray(t)&&0<=e-parseFloat(e)+1},isPlainObject:function(t){var e;if("object"!==C.type(t)||t.nodeType||C.isWindow(t))return!1;if(t.constructor&&!p.call(t,"constructor")&&!p.call(t.constructor.prototype||{},"isPrototypeOf"))return!1;for(e in t);return void 0===e||p.call(t,e)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?n[i.call(t)]||"object":typeof t},globalEval:function(t){var e,n=eval;(t=C.trim(t))&&(1===t.indexOf("use strict")?((e=j.createElement("script")).text=t,j.head.appendChild(e).parentNode.removeChild(e)):n(t))},camelCase:function(t){return t.replace(l,"ms-").replace(u,f)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var n,i=0;if(d(t))for(n=t.length;i<n&&!1!==e.call(t[i],i,t[i]);i++);else for(i in t)if(!1===e.call(t[i],i,t[i]))break;return t},trim:function(t){return null==t?"":(t+"").replace(r,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(d(Object(t))?C.merge(n,"string"==typeof t?[t]:t):a.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:o.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,o=t.length;i<n;i++)t[o++]=e[i];return t.length=o,t},grep:function(t,e,n){for(var i=[],o=0,s=t.length,r=!n;o<s;o++)!e(t[o],o)!==r&&i.push(t[o]);return i},map:function(t,e,n){var i,o,s=0,r=[];if(d(t))for(i=t.length;s<i;s++)null!=(o=e(t[s],s,n))&&r.push(o);else for(s in t)null!=(o=e(t[s],s,n))&&r.push(o);return m.apply([],r)},guid:1,proxy:function(t,e){var n,i,o;if("string"==typeof e&&(n=t[e],e=t,t=n),C.isFunction(t))return i=c.call(arguments,2),(o=function(){return t.apply(e||this,i.concat(c.call(arguments)))}).guid=t.guid=t.guid||C.guid++,o},now:Date.now,support:g}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=e[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){n["[object "+e+"]"]=e.toLowerCase()});var h=function(n){var t,p,w,s,o,m,f,g,$,l,u,_,k,r,j,v,a,c,y,C="sizzle"+1*new Date,b=n.document,x=0,i=0,d=ot(),h=ot(),O=ot(),T=function(t,e){return t===e&&(u=!0),0},S={}.hasOwnProperty,e=[],z=e.pop,E=e.push,A=e.push,P=e.slice,D=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",q="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",M="\\["+R+"*("+q+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+q+"))|)"+R+"*\\]",H=":("+q+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+M+")*)|.*)\\)|)",N=new RegExp(R+"+","g"),F=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),I=new RegExp("^"+R+"*,"+R+"*"),B=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),W=new RegExp("="+R+"*([^\\]'\"]*?)"+R+"*\\]","g"),G=new RegExp(H),Y=new RegExp("^"+q+"$"),Q={ID:new RegExp("^#("+q+")"),CLASS:new RegExp("^\\.("+q+")"),TAG:new RegExp("^("+q+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+H),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},K=/^(?:input|select|textarea|button)$/i,U=/^h\d$/i,X=/^[^{]+\{\s*\[native \w/,V=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Z=/[+~]/,J=/'|\\/g,tt=new RegExp("\\\\([\\da-f]{1,6}"+R+"?|("+R+")|.)","ig"),et=function(t,e,n){var i="0x"+e-65536;return i!=i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},nt=function(){_()};try{A.apply(e=P.call(b.childNodes),b.childNodes),e[b.childNodes.length].nodeType}catch(t){A={apply:e.length?function(t,e){E.apply(t,P.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}function it(t,e,n,i){var o,s,r,a,l,u,c,f,d=e&&e.ownerDocument,h=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==h&&9!==h&&11!==h)return n;if(!i&&((e?e.ownerDocument||e:b)!==k&&_(e),e=e||k,j)){if(11!==h&&(u=V.exec(t)))if(o=u[1]){if(9===h){if(!(r=e.getElementById(o)))return n;if(r.id===o)return n.push(r),n}else if(d&&(r=d.getElementById(o))&&y(e,r)&&r.id===o)return n.push(r),n}else{if(u[2])return A.apply(n,e.getElementsByTagName(t)),n;if((o=u[3])&&p.getElementsByClassName&&e.getElementsByClassName)return A.apply(n,e.getElementsByClassName(o)),n}if(p.qsa&&!O[t+" "]&&(!v||!v.test(t))){if(1!==h)d=e,f=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(J,"\\$&"):e.setAttribute("id",a=C),s=(c=m(t)).length,l=Y.test(a)?"#"+a:"[id='"+a+"']";s--;)c[s]=l+" "+pt(c[s]);f=c.join(","),d=Z.test(t)&&dt(e.parentNode)||e}if(f)try{return A.apply(n,d.querySelectorAll(f)),n}catch(t){}finally{a===C&&e.removeAttribute("id")}}}return g(t.replace(F,"$1"),e,n,i)}function ot(){var i=[];return function t(e,n){return i.push(e+" ")>w.cacheLength&&delete t[i.shift()],t[e+" "]=n}}function st(t){return t[C]=!0,t}function rt(t){var e=k.createElement("div");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function at(t,e){for(var n=t.split("|"),i=n.length;i--;)w.attrHandle[n[i]]=e}function lt(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||1<<31)-(~t.sourceIndex||1<<31);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function ut(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function ct(n){return function(t){var e=t.nodeName.toLowerCase();return("input"===e||"button"===e)&&t.type===n}}function ft(r){return st(function(s){return s=+s,st(function(t,e){for(var n,i=r([],t.length,s),o=i.length;o--;)t[n=i[o]]&&(t[n]=!(e[n]=t[n]))})})}function dt(t){return t&&void 0!==t.getElementsByTagName&&t}for(t in p=it.support={},o=it.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},_=it.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:b;return i!==k&&9===i.nodeType&&i.documentElement&&(r=(k=i).documentElement,j=!o(k),(n=k.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",nt,!1):n.attachEvent&&n.attachEvent("onunload",nt)),p.attributes=rt(function(t){return t.className="i",!t.getAttribute("className")}),p.getElementsByTagName=rt(function(t){return t.appendChild(k.createComment("")),!t.getElementsByTagName("*").length}),p.getElementsByClassName=X.test(k.getElementsByClassName),p.getById=rt(function(t){return r.appendChild(t).id=C,!k.getElementsByName||!k.getElementsByName(C).length}),p.getById?(w.find.ID=function(t,e){if(void 0!==e.getElementById&&j){var n=e.getElementById(t);return n?[n]:[]}},w.filter.ID=function(t){var e=t.replace(tt,et);return function(t){return t.getAttribute("id")===e}}):(delete w.find.ID,w.filter.ID=function(t){var n=t.replace(tt,et);return function(t){var e=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return e&&e.value===n}}),w.find.TAG=p.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):p.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],o=0,s=e.getElementsByTagName(t);if("*"!==t)return s;for(;n=s[o++];)1===n.nodeType&&i.push(n);return i},w.find.CLASS=p.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&j)return e.getElementsByClassName(t)},a=[],v=[],(p.qsa=X.test(k.querySelectorAll))&&(rt(function(t){r.appendChild(t).innerHTML="<a id='"+C+"'></a><select id='"+C+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+R+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||v.push("\\["+R+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+C+"-]").length||v.push("~="),t.querySelectorAll(":checked").length||v.push(":checked"),t.querySelectorAll("a#"+C+"+*").length||v.push(".#.+[+~]")}),rt(function(t){var e=k.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&v.push("name"+R+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||v.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),v.push(",.*:")})),(p.matchesSelector=X.test(c=r.matches||r.webkitMatchesSelector||r.mozMatchesSelector||r.oMatchesSelector||r.msMatchesSelector))&&rt(function(t){p.disconnectedMatch=c.call(t,"div"),c.call(t,"[s!='']:x"),a.push("!=",H)}),v=v.length&&new RegExp(v.join("|")),a=a.length&&new RegExp(a.join("|")),e=X.test(r.compareDocumentPosition),y=e||X.test(r.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},T=e?function(t,e){if(t===e)return u=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!p.sortDetached&&e.compareDocumentPosition(t)===n?t===k||t.ownerDocument===b&&y(b,t)?-1:e===k||e.ownerDocument===b&&y(b,e)?1:l?D(l,t)-D(l,e):0:4&n?-1:1)}:function(t,e){if(t===e)return u=!0,0;var n,i=0,o=t.parentNode,s=e.parentNode,r=[t],a=[e];if(!o||!s)return t===k?-1:e===k?1:o?-1:s?1:l?D(l,t)-D(l,e):0;if(o===s)return lt(t,e);for(n=t;n=n.parentNode;)r.unshift(n);for(n=e;n=n.parentNode;)a.unshift(n);for(;r[i]===a[i];)i++;return i?lt(r[i],a[i]):r[i]===b?-1:a[i]===b?1:0}),k},it.matches=function(t,e){return it(t,null,null,e)},it.matchesSelector=function(t,e){if((t.ownerDocument||t)!==k&&_(t),e=e.replace(W,"='$1']"),p.matchesSelector&&j&&!O[e+" "]&&(!a||!a.test(e))&&(!v||!v.test(e)))try{var n=c.call(t,e);if(n||p.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){}return 0<it(e,k,null,[t]).length},it.contains=function(t,e){return(t.ownerDocument||t)!==k&&_(t),y(t,e)},it.attr=function(t,e){(t.ownerDocument||t)!==k&&_(t);var n=w.attrHandle[e.toLowerCase()],i=n&&S.call(w.attrHandle,e.toLowerCase())?n(t,e,!j):void 0;return void 0!==i?i:p.attributes||!j?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},it.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},it.uniqueSort=function(t){var e,n=[],i=0,o=0;if(u=!p.detectDuplicates,l=!p.sortStable&&t.slice(0),t.sort(T),u){for(;e=t[o++];)e===t[o]&&(i=n.push(o));for(;i--;)t.splice(n[i],1)}return l=null,t},s=it.getText=function(t){var e,n="",i=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=s(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[i++];)n+=s(e);return n},(w=it.selectors={cacheLength:50,createPseudo:st,match:Q,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(tt,et),t[3]=(t[3]||t[4]||t[5]||"").replace(tt,et),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||it.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&it.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return Q.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&G.test(n)&&(e=m(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(tt,et).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=d[t+" "];return e||(e=new RegExp("(^|"+R+")"+t+"("+R+"|$)"))&&d(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(n,i,o){return function(t){var e=it.attr(t,n);return null==e?"!="===i:!i||(e+="","="===i?e===o:"!="===i?e!==o:"^="===i?o&&0===e.indexOf(o):"*="===i?o&&-1<e.indexOf(o):"$="===i?o&&e.slice(-o.length)===o:"~="===i?-1<(" "+e.replace(N," ")+" ").indexOf(o):"|="===i&&(e===o||e.slice(0,o.length+1)===o+"-"))}},CHILD:function(p,t,e,m,g){var v="nth"!==p.slice(0,3),y="last"!==p.slice(-4),b="of-type"===t;return 1===m&&0===g?function(t){return!!t.parentNode}:function(t,e,n){var i,o,s,r,a,l,u=v!==y?"nextSibling":"previousSibling",c=t.parentNode,f=b&&t.nodeName.toLowerCase(),d=!n&&!b,h=!1;if(c){if(v){for(;u;){for(r=t;r=r[u];)if(b?r.nodeName.toLowerCase()===f:1===r.nodeType)return!1;l=u="only"===p&&!l&&"nextSibling"}return!0}if(l=[y?c.firstChild:c.lastChild],y&&d){for(h=(a=(i=(o=(s=(r=c)[C]||(r[C]={}))[r.uniqueID]||(s[r.uniqueID]={}))[p]||[])[0]===x&&i[1])&&i[2],r=a&&c.childNodes[a];r=++a&&r&&r[u]||(h=a=0)||l.pop();)if(1===r.nodeType&&++h&&r===t){o[p]=[x,a,h];break}}else if(d&&(h=a=(i=(o=(s=(r=t)[C]||(r[C]={}))[r.uniqueID]||(s[r.uniqueID]={}))[p]||[])[0]===x&&i[1]),!1===h)for(;(r=++a&&r&&r[u]||(h=a=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==f:1!==r.nodeType)||!++h||(d&&((o=(s=r[C]||(r[C]={}))[r.uniqueID]||(s[r.uniqueID]={}))[p]=[x,h]),r!==t)););return(h-=g)===m||h%m==0&&0<=h/m}}},PSEUDO:function(t,s){var e,r=w.pseudos[t]||w.setFilters[t.toLowerCase()]||it.error("unsupported pseudo: "+t);return r[C]?r(s):1<r.length?(e=[t,t,"",s],w.setFilters.hasOwnProperty(t.toLowerCase())?st(function(t,e){for(var n,i=r(t,s),o=i.length;o--;)t[n=D(t,i[o])]=!(e[n]=i[o])}):function(t){return r(t,0,e)}):r}},pseudos:{not:st(function(t){var i=[],o=[],a=f(t.replace(F,"$1"));return a[C]?st(function(t,e,n,i){for(var o,s=a(t,null,i,[]),r=t.length;r--;)(o=s[r])&&(t[r]=!(e[r]=o))}):function(t,e,n){return i[0]=t,a(i,null,n,o),i[0]=null,!o.pop()}}),has:st(function(e){return function(t){return 0<it(e,t).length}}),contains:st(function(e){return e=e.replace(tt,et),function(t){return-1<(t.textContent||t.innerText||s(t)).indexOf(e)}}),lang:st(function(n){return Y.test(n||"")||it.error("unsupported lang: "+n),n=n.replace(tt,et).toLowerCase(),function(t){var e;do{if(e=j?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(e=e.toLowerCase())===n||0===e.indexOf(n+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var e=n.location&&n.location.hash;return e&&e.slice(1)===t.id},root:function(t){return t===r},focus:function(t){return t===k.activeElement&&(!k.hasFocus||k.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return!1===t.disabled},disabled:function(t){return!0===t.disabled},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return U.test(t.nodeName)},input:function(t){return K.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:ft(function(){return[0]}),last:ft(function(t,e){return[e-1]}),eq:ft(function(t,e,n){return[n<0?n+e:n]}),even:ft(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:ft(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:ft(function(t,e,n){for(var i=n<0?n+e:n;0<=--i;)t.push(i);return t}),gt:ft(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[t]=ut(t);for(t in{submit:!0,reset:!0})w.pseudos[t]=ct(t);function ht(){}function pt(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function mt(a,t,e){var l=t.dir,u=e&&"parentNode"===l,c=i++;return t.first?function(t,e,n){for(;t=t[l];)if(1===t.nodeType||u)return a(t,e,n)}:function(t,e,n){var i,o,s,r=[x,c];if(n){for(;t=t[l];)if((1===t.nodeType||u)&&a(t,e,n))return!0}else for(;t=t[l];)if(1===t.nodeType||u){if((i=(o=(s=t[C]||(t[C]={}))[t.uniqueID]||(s[t.uniqueID]={}))[l])&&i[0]===x&&i[1]===c)return r[2]=i[2];if((o[l]=r)[2]=a(t,e,n))return!0}}}function gt(o){return 1<o.length?function(t,e,n){for(var i=o.length;i--;)if(!o[i](t,e,n))return!1;return!0}:o[0]}function vt(t,e,n,i,o){for(var s,r=[],a=0,l=t.length,u=null!=e;a<l;a++)(s=t[a])&&(n&&!n(s,i,o)||(r.push(s),u&&e.push(a)));return r}function yt(h,p,m,g,v,t){return g&&!g[C]&&(g=yt(g)),v&&!v[C]&&(v=yt(v,t)),st(function(t,e,n,i){var o,s,r,a=[],l=[],u=e.length,c=t||function(t,e,n){for(var i=0,o=e.length;i<o;i++)it(t,e[i],n);return n}(p||"*",n.nodeType?[n]:n,[]),f=!h||!t&&p?c:vt(c,a,h,n,i),d=m?v||(t?h:u||g)?[]:e:f;if(m&&m(f,d,n,i),g)for(o=vt(d,l),g(o,[],n,i),s=o.length;s--;)(r=o[s])&&(d[l[s]]=!(f[l[s]]=r));if(t){if(v||h){if(v){for(o=[],s=d.length;s--;)(r=d[s])&&o.push(f[s]=r);v(null,d=[],o,i)}for(s=d.length;s--;)(r=d[s])&&-1<(o=v?D(t,r):a[s])&&(t[o]=!(e[o]=r))}}else d=vt(d===e?d.splice(u,d.length):d),v?v(null,e,d,i):A.apply(e,d)})}function bt(t){for(var o,e,n,i=t.length,s=w.relative[t[0].type],r=s||w.relative[" "],a=s?1:0,l=mt(function(t){return t===o},r,!0),u=mt(function(t){return-1<D(o,t)},r,!0),c=[function(t,e,n){var i=!s&&(n||e!==$)||((o=e).nodeType?l(t,e,n):u(t,e,n));return o=null,i}];a<i;a++)if(e=w.relative[t[a].type])c=[mt(gt(c),e)];else{if((e=w.filter[t[a].type].apply(null,t[a].matches))[C]){for(n=++a;n<i&&!w.relative[t[n].type];n++);return yt(1<a&&gt(c),1<a&&pt(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(F,"$1"),e,a<n&&bt(t.slice(a,n)),n<i&&bt(t=t.slice(n)),n<i&&pt(t))}c.push(e)}return gt(c)}return ht.prototype=w.filters=w.pseudos,w.setFilters=new ht,m=it.tokenize=function(t,e){var n,i,o,s,r,a,l,u=h[t+" "];if(u)return e?0:u.slice(0);for(r=t,a=[],l=w.preFilter;r;){for(s in n&&!(i=I.exec(r))||(i&&(r=r.slice(i[0].length)||r),a.push(o=[])),n=!1,(i=B.exec(r))&&(n=i.shift(),o.push({value:n,type:i[0].replace(F," ")}),r=r.slice(n.length)),w.filter)!(i=Q[s].exec(r))||l[s]&&!(i=l[s](i))||(n=i.shift(),o.push({value:n,type:s,matches:i}),r=r.slice(n.length));if(!n)break}return e?r.length:r?it.error(t):h(t,a).slice(0)},f=it.compile=function(t,e){var n,g,v,y,b,i,o=[],s=[],r=O[t+" "];if(!r){for(e||(e=m(t)),n=e.length;n--;)(r=bt(e[n]))[C]?o.push(r):s.push(r);(r=O(t,(g=s,y=0<(v=o).length,b=0<g.length,i=function(t,e,n,i,o){var s,r,a,l=0,u="0",c=t&&[],f=[],d=$,h=t||b&&w.find.TAG("*",o),p=x+=null==d?1:Math.random()||.1,m=h.length;for(o&&($=e===k||e||o);u!==m&&null!=(s=h[u]);u++){if(b&&s){for(r=0,e||s.ownerDocument===k||(_(s),n=!j);a=g[r++];)if(a(s,e||k,n)){i.push(s);break}o&&(x=p)}y&&((s=!a&&s)&&l--,t&&c.push(s))}if(l+=u,y&&u!==l){for(r=0;a=v[r++];)a(c,f,e,n);if(t){if(0<l)for(;u--;)c[u]||f[u]||(f[u]=z.call(i));f=vt(f)}A.apply(i,f),o&&!t&&0<f.length&&1<l+v.length&&it.uniqueSort(i)}return o&&(x=p,$=d),c},y?st(i):i))).selector=t}return r},g=it.select=function(t,e,n,i){var o,s,r,a,l,u="function"==typeof t&&t,c=!i&&m(t=u.selector||t);if(n=n||[],1===c.length){if(2<(s=c[0]=c[0].slice(0)).length&&"ID"===(r=s[0]).type&&p.getById&&9===e.nodeType&&j&&w.relative[s[1].type]){if(!(e=(w.find.ID(r.matches[0].replace(tt,et),e)||[])[0]))return n;u&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(o=Q.needsContext.test(t)?0:s.length;o--&&(r=s[o],!w.relative[a=r.type]);)if((l=w.find[a])&&(i=l(r.matches[0].replace(tt,et),Z.test(s[0].type)&&dt(e.parentNode)||e))){if(s.splice(o,1),!(t=i.length&&pt(s)))return A.apply(n,i),n;break}}return(u||f(t,c))(i,e,!j,n,!e||Z.test(t)&&dt(e.parentNode)||e),n},p.sortStable=C.split("").sort(T).join("")===C,p.detectDuplicates=!!u,_(),p.sortDetached=rt(function(t){return 1&t.compareDocumentPosition(k.createElement("div"))}),rt(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||at("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),p.attributes&&rt(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||at("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),rt(function(t){return null==t.getAttribute("disabled")})||at(L,function(t,e,n){var i;if(!n)return!0===t[e]?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),it}(k);C.find=h,C.expr=h.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=h.uniqueSort,C.text=h.getText,C.isXMLDoc=h.isXML,C.contains=h.contains;var v=function(t,e,n){for(var i=[],o=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(o&&C(t).is(n))break;i.push(t)}return i},y=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},b=C.expr.match.needsContext,w=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,$=/^.[^:#\[\.,]*$/;function _(t,n,i){if(C.isFunction(n))return C.grep(t,function(t,e){return!!n.call(t,e,t)!==i});if(n.nodeType)return C.grep(t,function(t){return t===n!==i});if("string"==typeof n){if($.test(n))return C.filter(n,t,i);n=C.filter(n,t)}return C.grep(t,function(t){return-1<o.call(n,t)!==i})}C.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?C.find.matchesSelector(i,t)?[i]:[]:C.find.matches(t,C.grep(e,function(t){return 1===t.nodeType}))},C.fn.extend({find:function(t){var e,n=this.length,i=[],o=this;if("string"!=typeof t)return this.pushStack(C(t).filter(function(){for(e=0;e<n;e++)if(C.contains(o[e],this))return!0}));for(e=0;e<n;e++)C.find(t,o[e],i);return(i=this.pushStack(1<n?C.unique(i):i)).selector=this.selector?this.selector+" "+t:t,i},filter:function(t){return this.pushStack(_(this,t||[],!1))},not:function(t){return this.pushStack(_(this,t||[],!0))},is:function(t){return!!_(this,"string"==typeof t&&b.test(t)?C(t):t||[],!1).length}});var x,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(C.fn.init=function(t,e,n){var i,o;if(!t)return this;if(n=n||x,"string"!=typeof t)return t.nodeType?(this.context=this[0]=t,this.length=1,this):C.isFunction(t)?void 0!==n.ready?n.ready(t):t(C):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),C.makeArray(t,this));if(!(i="<"===t[0]&&">"===t[t.length-1]&&3<=t.length?[null,t,null]:O.exec(t))||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof C?e[0]:e,C.merge(this,C.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:j,!0)),w.test(i[1])&&C.isPlainObject(e))for(i in e)C.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return(o=j.getElementById(i[2]))&&o.parentNode&&(this.length=1,this[0]=o),this.context=j,this.selector=t,this}).prototype=C.fn,x=C(j);var T=/^(?:parents|prev(?:Until|All))/,S={children:!0,contents:!0,next:!0,prev:!0};function z(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}C.fn.extend({has:function(t){var e=C(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(C.contains(this,e[t]))return!0})},closest:function(t,e){for(var n,i=0,o=this.length,s=[],r=b.test(t)||"string"!=typeof t?C(t,e||this.context):0;i<o;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(r?-1<r.index(n):1===n.nodeType&&C.find.matchesSelector(n,t))){s.push(n);break}return this.pushStack(1<s.length?C.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?o.call(C(t),this[0]):o.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),C.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return v(t,"parentNode")},parentsUntil:function(t,e,n){return v(t,"parentNode",n)},next:function(t){return z(t,"nextSibling")},prev:function(t){return z(t,"previousSibling")},nextAll:function(t){return v(t,"nextSibling")},prevAll:function(t){return v(t,"previousSibling")},nextUntil:function(t,e,n){return v(t,"nextSibling",n)},prevUntil:function(t,e,n){return v(t,"previousSibling",n)},siblings:function(t){return y((t.parentNode||{}).firstChild,t)},children:function(t){return y(t.firstChild)},contents:function(t){return t.contentDocument||C.merge([],t.childNodes)}},function(i,o){C.fn[i]=function(t,e){var n=C.map(this,o,t);return"Until"!==i.slice(-5)&&(e=t),e&&"string"==typeof e&&(n=C.filter(e,n)),1<this.length&&(S[i]||C.uniqueSort(n),T.test(i)&&n.reverse()),this.pushStack(n)}});var E,A=/\S+/g;function P(){j.removeEventListener("DOMContentLoaded",P),k.removeEventListener("load",P),C.ready()}C.Callbacks=function(i){var t,n;i="string"==typeof i?(t=i,n={},C.each(t.match(A)||[],function(t,e){n[e]=!0}),n):C.extend({},i);var o,e,s,r,a=[],l=[],u=-1,c=function(){for(r=i.once,s=o=!0;l.length;u=-1)for(e=l.shift();++u<a.length;)!1===a[u].apply(e[0],e[1])&&i.stopOnFalse&&(u=a.length,e=!1);i.memory||(e=!1),o=!1,r&&(a=e?[]:"")},f={add:function(){return a&&(e&&!o&&(u=a.length-1,l.push(e)),function n(t){C.each(t,function(t,e){C.isFunction(e)?i.unique&&f.has(e)||a.push(e):e&&e.length&&"string"!==C.type(e)&&n(e)})}(arguments),e&&!o&&c()),this},remove:function(){return C.each(arguments,function(t,e){for(var n;-1<(n=C.inArray(e,a,n));)a.splice(n,1),n<=u&&u--}),this},has:function(t){return t?-1<C.inArray(t,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return r=l=[],a=e="",this},disabled:function(){return!a},lock:function(){return r=l=[],e||(a=e=""),this},locked:function(){return!!r},fireWith:function(t,e){return r||(e=[t,(e=e||[]).slice?e.slice():e],l.push(e),o||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!s}};return f},C.extend({Deferred:function(t){var s=[["resolve","done",C.Callbacks("once memory"),"resolved"],["reject","fail",C.Callbacks("once memory"),"rejected"],["notify","progress",C.Callbacks("memory")]],o="pending",r={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},then:function(){var o=arguments;return C.Deferred(function(i){C.each(s,function(t,e){var n=C.isFunction(o[t])&&o[t];a[e[1]](function(){var t=n&&n.apply(this,arguments);t&&C.isFunction(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[e[0]+"With"](this===r?i.promise():this,n?[t]:arguments)})}),o=null}).promise()},promise:function(t){return null!=t?C.extend(t,r):r}},a={};return r.pipe=r.then,C.each(s,function(t,e){var n=e[2],i=e[3];r[e[1]]=n.add,i&&n.add(function(){o=i},s[1^t][2].disable,s[2][2].lock),a[e[0]]=function(){return a[e[0]+"With"](this===a?r:this,arguments),this},a[e[0]+"With"]=n.fireWith}),r.promise(a),t&&t.call(a,a),a},when:function(t){var o,e,n,i=0,s=c.call(arguments),r=s.length,a=1!==r||t&&C.isFunction(t.promise)?r:0,l=1===a?t:C.Deferred(),u=function(e,n,i){return function(t){n[e]=this,i[e]=1<arguments.length?c.call(arguments):t,i===o?l.notifyWith(n,i):--a||l.resolveWith(n,i)}};if(1<r)for(o=new Array(r),e=new Array(r),n=new Array(r);i<r;i++)s[i]&&C.isFunction(s[i].promise)?s[i].promise().progress(u(i,e,o)).done(u(i,n,s)).fail(l.reject):--a;return a||l.resolveWith(n,s),l.promise()}}),C.fn.ready=function(t){return C.ready.promise().done(t),this},C.extend({isReady:!1,readyWait:1,holdReady:function(t){t?C.readyWait++:C.ready(!0)},ready:function(t){(!0===t?--C.readyWait:C.isReady)||(C.isReady=!0)!==t&&0<--C.readyWait||(E.resolveWith(j,[C]),C.fn.triggerHandler&&(C(j).triggerHandler("ready"),C(j).off("ready")))}}),C.ready.promise=function(t){return E||(E=C.Deferred(),"complete"===j.readyState||"loading"!==j.readyState&&!j.documentElement.doScroll?k.setTimeout(C.ready):(j.addEventListener("DOMContentLoaded",P),k.addEventListener("load",P))),E.promise(t)},C.ready.promise();var D=function(t,e,n,i,o,s,r){var a=0,l=t.length,u=null==n;if("object"===C.type(n))for(a in o=!0,n)D(t,e,a,n[a],!0,s,r);else if(void 0!==i&&(o=!0,C.isFunction(i)||(r=!0),u&&(e=r?(e.call(t,i),null):(u=e,function(t,e,n){return u.call(C(t),n)})),e))for(;a<l;a++)e(t[a],n,r?i:i.call(t[a],a,e(t[a],n)));return o?t:u?e.call(t):l?e(t[0],n):s},L=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function R(){this.expando=C.expando+R.uid++}R.uid=1,R.prototype={register:function(t,e){var n=e||{};return t.nodeType?t[this.expando]=n:Object.defineProperty(t,this.expando,{value:n,writable:!0,configurable:!0}),t[this.expando]},cache:function(t){if(!L(t))return{};var e=t[this.expando];return e||(e={},L(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,o=this.cache(t);if("string"==typeof e)o[e]=n;else for(i in e)o[i]=e[i];return o},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][e]},access:function(t,e,n){var i;return void 0===e||e&&"string"==typeof e&&void 0===n?void 0!==(i=this.get(t,e))?i:this.get(t,C.camelCase(e)):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i,o,s=t[this.expando];if(void 0!==s){if(void 0===e)this.register(t);else{n=(i=C.isArray(e)?e.concat(e.map(C.camelCase)):(o=C.camelCase(e),e in s?[e,o]:(i=o)in s?[i]:i.match(A)||[])).length;for(;n--;)delete s[i[n]]}(void 0===e||C.isEmptyObject(s))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!C.isEmptyObject(e)}};var q=new R,M=new R,H=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/[A-Z]/g;function F(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace(N,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(i))){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:H.test(n)?C.parseJSON(n):n)}catch(t){}M.set(t,e,n)}else n=void 0;return n}C.extend({hasData:function(t){return M.hasData(t)||q.hasData(t)},data:function(t,e,n){return M.access(t,e,n)},removeData:function(t,e){M.remove(t,e)},_data:function(t,e,n){return q.access(t,e,n)},_removeData:function(t,e){q.remove(t,e)}}),C.fn.extend({data:function(i,t){var e,n,o,s=this[0],r=s&&s.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){M.set(this,i)}):D(this,function(e){var t,n;if(s&&void 0===e)return void 0!==(t=M.get(s,i)||M.get(s,i.replace(N,"-$&").toLowerCase()))?t:(n=C.camelCase(i),void 0!==(t=M.get(s,n))?t:void 0!==(t=F(s,n,void 0))?t:void 0);n=C.camelCase(i),this.each(function(){var t=M.get(this,n);M.set(this,n,e),-1<i.indexOf("-")&&void 0!==t&&M.set(this,i,e)})},null,t,1<arguments.length,null,!0);if(this.length&&(o=M.get(s),1===s.nodeType&&!q.get(s,"hasDataAttrs"))){for(e=r.length;e--;)r[e]&&0===(n=r[e].name).indexOf("data-")&&(n=C.camelCase(n.slice(5)),F(s,n,o[n]));q.set(s,"hasDataAttrs",!0)}return o},removeData:function(t){return this.each(function(){M.remove(this,t)})}}),C.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=q.get(t,e),n&&(!i||C.isArray(n)?i=q.access(t,e,C.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=C.queue(t,e),i=n.length,o=n.shift(),s=C._queueHooks(t,e);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===e&&n.unshift("inprogress"),delete s.stop,o.call(t,function(){C.dequeue(t,e)},s)),!i&&s&&s.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return q.get(t,n)||q.access(t,n,{empty:C.Callbacks("once memory").add(function(){q.remove(t,[e+"queue",n])})})}}),C.fn.extend({queue:function(e,n){var t=2;return"string"!=typeof e&&(n=e,e="fx",t--),arguments.length<t?C.queue(this[0],e):void 0===n?this:this.each(function(){var t=C.queue(this,e,n);C._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&C.dequeue(this,e)})},dequeue:function(t){return this.each(function(){C.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,o=C.Deferred(),s=this,r=this.length,a=function(){--i||o.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(n=q.get(s[r],t+"queueHooks"))&&n.empty&&(i++,n.empty.add(a));return a(),o.promise(e)}});var I=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,B=new RegExp("^(?:([+-])=|)("+I+")([a-z%]*)$","i"),W=["Top","Right","Bottom","Left"],G=function(t,e){return t=e||t,"none"===C.css(t,"display")||!C.contains(t.ownerDocument,t)};function Y(t,e,n,i){var o,s=1,r=20,a=i?function(){return i.cur()}:function(){return C.css(t,e,"")},l=a(),u=n&&n[3]||(C.cssNumber[e]?"":"px"),c=(C.cssNumber[e]||"px"!==u&&+l)&&B.exec(C.css(t,e));if(c&&c[3]!==u)for(u=u||c[3],n=n||[],c=+l||1;c/=s=s||".5",C.style(t,e,c+u),s!==(s=a()/l)&&1!==s&&--r;);return n&&(c=+c||+l||0,o=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=o)),o}var Q=/^(?:checkbox|radio)$/i,K=/<([\w:-]+)/,U=/^$|\/(?:java|ecma)script/i,X={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function V(t,e){var n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&C.nodeName(t,e)?C.merge([t],n):n}function Z(t,e){for(var n=0,i=t.length;n<i;n++)q.set(t[n],"globalEval",!e||q.get(e[n],"globalEval"))}X.optgroup=X.option,X.tbody=X.tfoot=X.colgroup=X.caption=X.thead,X.th=X.td;var J,tt,et=/<|&#?\w+;/;function nt(t,e,n,i,o){for(var s,r,a,l,u,c,f=e.createDocumentFragment(),d=[],h=0,p=t.length;h<p;h++)if((s=t[h])||0===s)if("object"===C.type(s))C.merge(d,s.nodeType?[s]:s);else if(et.test(s)){for(r=r||f.appendChild(e.createElement("div")),a=(K.exec(s)||["",""])[1].toLowerCase(),l=X[a]||X._default,r.innerHTML=l[1]+C.htmlPrefilter(s)+l[2],c=l[0];c--;)r=r.lastChild;C.merge(d,r.childNodes),(r=f.firstChild).textContent=""}else d.push(e.createTextNode(s));for(f.textContent="",h=0;s=d[h++];)if(i&&-1<C.inArray(s,i))o&&o.push(s);else if(u=C.contains(s.ownerDocument,s),r=V(f.appendChild(s),"script"),u&&Z(r),n)for(c=0;s=r[c++];)U.test(s.type||"")&&n.push(s);return f}J=j.createDocumentFragment().appendChild(j.createElement("div")),(tt=j.createElement("input")).setAttribute("type","radio"),tt.setAttribute("checked","checked"),tt.setAttribute("name","t"),J.appendChild(tt),g.checkClone=J.cloneNode(!0).cloneNode(!0).lastChild.checked,J.innerHTML="<textarea>x</textarea>",g.noCloneChecked=!!J.cloneNode(!0).lastChild.defaultValue;var it=/^key/,ot=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,st=/^([^.]*)(?:\.(.+)|)/;function rt(){return!0}function at(){return!1}function lt(){try{return j.activeElement}catch(t){}}function ut(t,e,n,i,o,s){var r,a;if("object"==typeof e){for(a in"string"!=typeof n&&(i=i||n,n=void 0),e)ut(t,a,n,i,e[a],s);return t}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=at;else if(!o)return t;return 1===s&&(r=o,(o=function(t){return C().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=C.guid++)),t.each(function(){C.event.add(this,e,o,i,n)})}C.event={global:{},add:function(e,t,n,i,o){var s,r,a,l,u,c,f,d,h,p,m,g=q.get(e);if(g)for(n.handler&&(n=(s=n).handler,o=s.selector),n.guid||(n.guid=C.guid++),(l=g.events)||(l=g.events={}),(r=g.handle)||(r=g.handle=function(t){return void 0!==C&&C.event.triggered!==t.type?C.event.dispatch.apply(e,arguments):void 0}),u=(t=(t||"").match(A)||[""]).length;u--;)h=m=(a=st.exec(t[u])||[])[1],p=(a[2]||"").split(".").sort(),h&&(f=C.event.special[h]||{},h=(o?f.delegateType:f.bindType)||h,f=C.event.special[h]||{},c=C.extend({type:h,origType:m,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&C.expr.match.needsContext.test(o),namespace:p.join(".")},s),(d=l[h])||((d=l[h]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(e,i,p,r)||e.addEventListener&&e.addEventListener(h,r)),f.add&&(f.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),o?d.splice(d.delegateCount++,0,c):d.push(c),C.event.global[h]=!0)},remove:function(t,e,n,i,o){var s,r,a,l,u,c,f,d,h,p,m,g=q.hasData(t)&&q.get(t);if(g&&(l=g.events)){for(u=(e=(e||"").match(A)||[""]).length;u--;)if(h=m=(a=st.exec(e[u])||[])[1],p=(a[2]||"").split(".").sort(),h){for(f=C.event.special[h]||{},d=l[h=(i?f.delegateType:f.bindType)||h]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=d.length;s--;)c=d[s],!o&&m!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(d.splice(s,1),c.selector&&d.delegateCount--,f.remove&&f.remove.call(t,c));r&&!d.length&&(f.teardown&&!1!==f.teardown.call(t,p,g.handle)||C.removeEvent(t,h,g.handle),delete l[h])}else for(h in l)C.event.remove(t,h+e[u],n,i,!0);C.isEmptyObject(l)&&q.remove(t,"handle events")}},dispatch:function(t){t=C.event.fix(t);var e,n,i,o,s,r,a=c.call(arguments),l=(q.get(this,"events")||{})[t.type]||[],u=C.event.special[t.type]||{};if((a[0]=t).delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,t)){for(r=C.event.handlers.call(this,t,l),e=0;(o=r[e++])&&!t.isPropagationStopped();)for(t.currentTarget=o.elem,n=0;(s=o.handlers[n++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(s.namespace)||(t.handleObj=s,t.data=s.data,void 0!==(i=((C.event.special[s.origType]||{}).handle||s.handler).apply(o.elem,a))&&!1===(t.result=i)&&(t.preventDefault(),t.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,t),t.result}},handlers:function(t,e){var n,i,o,s,r=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(!0!==l.disabled||"click"!==t.type)){for(i=[],n=0;n<a;n++)void 0===i[o=(s=e[n]).selector+" "]&&(i[o]=s.needsContext?-1<C(o,this).index(l):C.find(o,this,null,[l]).length),i[o]&&i.push(s);i.length&&r.push({elem:l,handlers:i})}return a<e.length&&r.push({elem:this,handlers:e.slice(a)}),r},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var n,i,o,s=e.button;return null==t.pageX&&null!=e.clientX&&(i=(n=t.target.ownerDocument||j).documentElement,o=n.body,t.pageX=e.clientX+(i&&i.scrollLeft||o&&o.scrollLeft||0)-(i&&i.clientLeft||o&&o.clientLeft||0),t.pageY=e.clientY+(i&&i.scrollTop||o&&o.scrollTop||0)-(i&&i.clientTop||o&&o.clientTop||0)),t.which||void 0===s||(t.which=1&s?1:2&s?3:4&s?2:0),t}},fix:function(t){if(t[C.expando])return t;var e,n,i,o=t.type,s=t,r=this.fixHooks[o];for(r||(this.fixHooks[o]=r=ot.test(o)?this.mouseHooks:it.test(o)?this.keyHooks:{}),i=r.props?this.props.concat(r.props):this.props,t=new C.Event(s),e=i.length;e--;)t[n=i[e]]=s[n];return t.target||(t.target=j),3===t.target.nodeType&&(t.target=t.target.parentNode),r.filter?r.filter(t,s):t},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==lt()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===lt()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&C.nodeName(this,"input"))return this.click(),!1},_default:function(t){return C.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},C.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},C.Event=function(t,e){if(!(this instanceof C.Event))return new C.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?rt:at):this.type=t,e&&C.extend(this,e),this.timeStamp=t&&t.timeStamp||C.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:at,isPropagationStopped:at,isImmediatePropagationStopped:at,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=rt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=rt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=rt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,o){C.event.special[t]={delegateType:o,bindType:o,handle:function(t){var e,n=t.relatedTarget,i=t.handleObj;return n&&(n===this||C.contains(this,n))||(t.type=i.origType,e=i.handler.apply(this,arguments),t.type=o),e}}}),C.fn.extend({on:function(t,e,n,i){return ut(this,t,e,n,i)},one:function(t,e,n,i){return ut(this,t,e,n,i,1)},off:function(t,e,n){var i,o;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,C(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!=typeof t)return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=at),this.each(function(){C.event.remove(this,t,n,e)});for(o in t)this.off(o,e,t[o]);return this}});var ct=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ft=/<script|<style|<link/i,dt=/checked\s*(?:[^=]|=\s*.checked.)/i,ht=/^true\/(.*)/,pt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function mt(t,e){return C.nodeName(t,"table")&&C.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function gt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function vt(t){var e=ht.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function yt(t,e){var n,i,o,s,r,a,l,u;if(1===e.nodeType){if(q.hasData(t)&&(s=q.access(t),r=q.set(e,s),u=s.events))for(o in delete r.handle,r.events={},u)for(n=0,i=u[o].length;n<i;n++)C.event.add(e,o,u[o][n]);M.hasData(t)&&(a=M.access(t),l=C.extend({},a),M.set(e,l))}}function bt(n,i,o,s){i=m.apply([],i);var t,e,r,a,l,u,c=0,f=n.length,d=f-1,h=i[0],p=C.isFunction(h);if(p||1<f&&"string"==typeof h&&!g.checkClone&&dt.test(h))return n.each(function(t){var e=n.eq(t);p&&(i[0]=h.call(this,t,e.html())),bt(e,i,o,s)});if(f&&(e=(t=nt(i,n[0].ownerDocument,!1,n,s)).firstChild,1===t.childNodes.length&&(t=e),e||s)){for(a=(r=C.map(V(t,"script"),gt)).length;c<f;c++)l=t,c!==d&&(l=C.clone(l,!0,!0),a&&C.merge(r,V(l,"script"))),o.call(n[c],l,c);if(a)for(u=r[r.length-1].ownerDocument,C.map(r,vt),c=0;c<a;c++)l=r[c],U.test(l.type||"")&&!q.access(l,"globalEval")&&C.contains(u,l)&&(l.src?C._evalUrl&&C._evalUrl(l.src):C.globalEval(l.textContent.replace(pt,"")))}return n}function wt(t,e,n){for(var i,o=e?C.filter(e,t):t,s=0;null!=(i=o[s]);s++)n||1!==i.nodeType||C.cleanData(V(i)),i.parentNode&&(n&&C.contains(i.ownerDocument,i)&&Z(V(i,"script")),i.parentNode.removeChild(i));return t}C.extend({htmlPrefilter:function(t){return t.replace(ct,"<$1></$2>")},clone:function(t,e,n){var i,o,s,r,a,l,u,c=t.cloneNode(!0),f=C.contains(t.ownerDocument,t);if(!(g.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||C.isXMLDoc(t)))for(r=V(c),i=0,o=(s=V(t)).length;i<o;i++)a=s[i],l=r[i],void 0,"input"===(u=l.nodeName.toLowerCase())&&Q.test(a.type)?l.checked=a.checked:"input"!==u&&"textarea"!==u||(l.defaultValue=a.defaultValue);if(e)if(n)for(s=s||V(t),r=r||V(c),i=0,o=s.length;i<o;i++)yt(s[i],r[i]);else yt(t,c);return 0<(r=V(c,"script")).length&&Z(r,!f&&V(t,"script")),c},cleanData:function(t){for(var e,n,i,o=C.event.special,s=0;void 0!==(n=t[s]);s++)if(L(n)){if(e=n[q.expando]){if(e.events)for(i in e.events)o[i]?C.event.remove(n,i):C.removeEvent(n,i,e.handle);n[q.expando]=void 0}n[M.expando]&&(n[M.expando]=void 0)}}}),C.fn.extend({domManip:bt,detach:function(t){return wt(this,t,!0)},remove:function(t){return wt(this,t)},text:function(t){return D(this,function(t){return void 0===t?C.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return bt(this,arguments,function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||mt(this,t).appendChild(t)})},prepend:function(){return bt(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=mt(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return bt(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return bt(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(C.cleanData(V(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return C.clone(this,t,e)})},html:function(t){return D(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!ft.test(t)&&!X[(K.exec(t)||["",""])[1].toLowerCase()]){t=C.htmlPrefilter(t);try{for(;n<i;n++)1===(e=this[n]||{}).nodeType&&(C.cleanData(V(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var n=[];return bt(this,arguments,function(t){var e=this.parentNode;C.inArray(this,n)<0&&(C.cleanData(V(this)),e&&e.replaceChild(t,this))},n)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,r){C.fn[t]=function(t){for(var e,n=[],i=C(t),o=i.length-1,s=0;s<=o;s++)e=s===o?this:this.clone(!0),C(i[s])[r](e),a.apply(n,e.get());return this.pushStack(n)}});var $t,_t={HTML:"block",BODY:"block"};function kt(t,e){var n=C(e.createElement(t)).appendTo(e.body),i=C.css(n[0],"display");return n.detach(),i}function jt(t){var e=j,n=_t[t];return n||("none"!==(n=kt(t,e))&&n||((e=($t=($t||C("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement))[0].contentDocument).write(),e.close(),n=kt(t,e),$t.detach()),_t[t]=n),n}var Ct=/^margin/,xt=new RegExp("^("+I+")(?!px)[a-z%]+$","i"),Ot=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=k),e.getComputedStyle(t)},Tt=function(t,e,n,i){var o,s,r={};for(s in e)r[s]=t.style[s],t.style[s]=e[s];for(s in o=n.apply(t,i||[]),e)t.style[s]=r[s];return o},St=j.documentElement;function zt(t,e,n){var i,o,s,r,a=t.style;return""!==(r=(n=n||Ot(t))?n.getPropertyValue(e)||n[e]:void 0)&&void 0!==r||C.contains(t.ownerDocument,t)||(r=C.style(t,e)),n&&!g.pixelMarginRight()&&xt.test(r)&&Ct.test(e)&&(i=a.width,o=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=n.width,a.width=i,a.minWidth=o,a.maxWidth=s),void 0!==r?r+"":r}function Et(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){var e,n,i,o,s=j.createElement("div"),r=j.createElement("div");function t(){r.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",r.innerHTML="",St.appendChild(s);var t=k.getComputedStyle(r);e="1%"!==t.top,o="2px"===t.marginLeft,n="4px"===t.width,r.style.marginRight="50%",i="4px"===t.marginRight,St.removeChild(s)}r.style&&(r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",g.clearCloneStyle="content-box"===r.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(r),C.extend(g,{pixelPosition:function(){return t(),e},boxSizingReliable:function(){return null==n&&t(),n},pixelMarginRight:function(){return null==n&&t(),i},reliableMarginLeft:function(){return null==n&&t(),o},reliableMarginRight:function(){var t,e=r.appendChild(j.createElement("div"));return e.style.cssText=r.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",e.style.marginRight=e.style.width="0",r.style.width="1px",St.appendChild(s),t=!parseFloat(k.getComputedStyle(e).marginRight),St.removeChild(s),r.removeChild(e),t}}))}();var At=/^(none|table(?!-c[ea]).+)/,Pt={position:"absolute",visibility:"hidden",display:"block"},Dt={letterSpacing:"0",fontWeight:"400"},Lt=["Webkit","O","Moz","ms"],Rt=j.createElement("div").style;function qt(t){if(t in Rt)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=Lt.length;n--;)if((t=Lt[n]+e)in Rt)return t}function Mt(t,e,n){var i=B.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function Ht(t,e,n,i,o){for(var s=n===(i?"border":"content")?4:"width"===e?1:0,r=0;s<4;s+=2)"margin"===n&&(r+=C.css(t,n+W[s],!0,o)),i?("content"===n&&(r-=C.css(t,"padding"+W[s],!0,o)),"margin"!==n&&(r-=C.css(t,"border"+W[s]+"Width",!0,o))):(r+=C.css(t,"padding"+W[s],!0,o),"padding"!==n&&(r+=C.css(t,"border"+W[s]+"Width",!0,o)));return r}function Nt(t,e,n){var i=!0,o="width"===e?t.offsetWidth:t.offsetHeight,s=Ot(t),r="border-box"===C.css(t,"boxSizing",!1,s);if(o<=0||null==o){if(((o=zt(t,e,s))<0||null==o)&&(o=t.style[e]),xt.test(o))return o;i=r&&(g.boxSizingReliable()||o===t.style[e]),o=parseFloat(o)||0}return o+Ht(t,e,n||(r?"border":"content"),i,s)+"px"}function Ft(t,e){for(var n,i,o,s=[],r=0,a=t.length;r<a;r++)(i=t[r]).style&&(s[r]=q.get(i,"olddisplay"),n=i.style.display,e?(s[r]||"none"!==n||(i.style.display=""),""===i.style.display&&G(i)&&(s[r]=q.access(i,"olddisplay",jt(i.nodeName)))):(o=G(i),"none"===n&&o||q.set(i,"olddisplay",o?n:C.css(i,"display"))));for(r=0;r<a;r++)(i=t[r]).style&&(e&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=e?s[r]||"":"none"));return t}function It(t,e,n,i,o){return new It.prototype.init(t,e,n,i,o)}C.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=zt(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var o,s,r,a=C.camelCase(e),l=t.style;if(e=C.cssProps[a]||(C.cssProps[a]=qt(a)||a),r=C.cssHooks[e]||C.cssHooks[a],void 0===n)return r&&"get"in r&&void 0!==(o=r.get(t,!1,i))?o:l[e];"string"===(s=typeof n)&&(o=B.exec(n))&&o[1]&&(n=Y(t,e,o),s="number"),null!=n&&n==n&&("number"===s&&(n+=o&&o[3]||(C.cssNumber[a]?"":"px")),g.clearCloneStyle||""!==n||0!==e.indexOf("background")||(l[e]="inherit"),r&&"set"in r&&void 0===(n=r.set(t,n,i))||(l[e]=n))}},css:function(t,e,n,i){var o,s,r,a=C.camelCase(e);return e=C.cssProps[a]||(C.cssProps[a]=qt(a)||a),(r=C.cssHooks[e]||C.cssHooks[a])&&"get"in r&&(o=r.get(t,!0,n)),void 0===o&&(o=zt(t,e,i)),"normal"===o&&e in Dt&&(o=Dt[e]),""===n||n?(s=parseFloat(o),!0===n||isFinite(s)?s||0:o):o}}),C.each(["height","width"],function(t,r){C.cssHooks[r]={get:function(t,e,n){if(e)return At.test(C.css(t,"display"))&&0===t.offsetWidth?Tt(t,Pt,function(){return Nt(t,r,n)}):Nt(t,r,n)},set:function(t,e,n){var i,o=n&&Ot(t),s=n&&Ht(t,r,n,"border-box"===C.css(t,"boxSizing",!1,o),o);return s&&(i=B.exec(e))&&"px"!==(i[3]||"px")&&(t.style[r]=e,e=C.css(t,r)),Mt(0,e,s)}}}),C.cssHooks.marginLeft=Et(g.reliableMarginLeft,function(t,e){if(e)return(parseFloat(zt(t,"marginLeft"))||t.getBoundingClientRect().left-Tt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),C.cssHooks.marginRight=Et(g.reliableMarginRight,function(t,e){if(e)return Tt(t,{display:"inline-block"},zt,[t,"marginRight"])}),C.each({margin:"",padding:"",border:"Width"},function(o,s){C.cssHooks[o+s]={expand:function(t){for(var e=0,n={},i="string"==typeof t?t.split(" "):[t];e<4;e++)n[o+W[e]+s]=i[e]||i[e-2]||i[0];return n}},Ct.test(o)||(C.cssHooks[o+s].set=Mt)}),C.fn.extend({css:function(t,e){return D(this,function(t,e,n){var i,o,s={},r=0;if(C.isArray(e)){for(i=Ot(t),o=e.length;r<o;r++)s[e[r]]=C.css(t,e[r],!1,i);return s}return void 0!==n?C.style(t,e,n):C.css(t,e)},t,e,1<arguments.length)},show:function(){return Ft(this,!0)},hide:function(){return Ft(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){G(this)?C(this).show():C(this).hide()})}}),((C.Tween=It).prototype={constructor:It,init:function(t,e,n,i,o,s){this.elem=t,this.prop=n,this.easing=o||C.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=s||(C.cssNumber[n]?"":"px")},cur:function(){var t=It.propHooks[this.prop];return t&&t.get?t.get(this):It.propHooks._default.get(this)},run:function(t){var e,n=It.propHooks[this.prop];return this.options.duration?this.pos=e=C.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):It.propHooks._default.set(this),this}}).init.prototype=It.prototype,(It.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=C.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){C.fx.step[t.prop]?C.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[C.cssProps[t.prop]]&&!C.cssHooks[t.prop]?t.elem[t.prop]=t.now:C.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=It.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},C.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},C.fx=It.prototype.init,C.fx.step={};var Bt,Wt,Gt,Yt,Qt,Kt=/^(?:toggle|show|hide)$/,Ut=/queueHooks$/;function Xt(){return k.setTimeout(function(){Bt=void 0}),Bt=C.now()}function Vt(t,e){var n,i=0,o={height:t};for(e=e?1:0;i<4;i+=2-e)o["margin"+(n=W[i])]=o["padding"+n]=t;return e&&(o.opacity=o.width=t),o}function Zt(t,e,n){for(var i,o=(Jt.tweeners[e]||[]).concat(Jt.tweeners["*"]),s=0,r=o.length;s<r;s++)if(i=o[s].call(n,e,t))return i}function Jt(s,t,e){var n,r,i=0,o=Jt.prefilters.length,a=C.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=Bt||Xt(),e=Math.max(0,u.startTime+u.duration-t),n=1-(e/u.duration||0),i=0,o=u.tweens.length;i<o;i++)u.tweens[i].run(n);return a.notifyWith(s,[u,n,e]),n<1&&o?e:(a.resolveWith(s,[u]),!1)},u=a.promise({elem:s,props:C.extend({},t),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},e),originalProperties:t,originalOptions:e,startTime:Bt||Xt(),duration:e.duration,tweens:[],createTween:function(t,e){var n=C.Tween(s,u.opts,t,e,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(n),n},stop:function(t){var e=0,n=t?u.tweens.length:0;if(r)return this;for(r=!0;e<n;e++)u.tweens[e].run(1);return t?(a.notifyWith(s,[u,1,0]),a.resolveWith(s,[u,t])):a.rejectWith(s,[u,t]),this}}),c=u.props;for(!function(t,e){var n,i,o,s,r;for(n in t)if(o=e[i=C.camelCase(n)],s=t[n],C.isArray(s)&&(o=s[1],s=t[n]=s[0]),n!==i&&(t[i]=s,delete t[n]),(r=C.cssHooks[i])&&"expand"in r)for(n in s=r.expand(s),delete t[i],s)n in t||(t[n]=s[n],e[n]=o);else e[i]=o}(c,u.opts.specialEasing);i<o;i++)if(n=Jt.prefilters[i].call(u,s,c,u.opts))return C.isFunction(n.stop)&&(C._queueHooks(u.elem,u.opts.queue).stop=C.proxy(n.stop,n)),n;return C.map(c,Zt,u),C.isFunction(u.opts.start)&&u.opts.start.call(s,u),C.fx.timer(C.extend(l,{elem:s,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}C.Animation=C.extend(Jt,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return Y(n.elem,t,B.exec(e),n),n}]},tweener:function(t,e){for(var n,i=0,o=(t=C.isFunction(t)?(e=t,["*"]):t.match(A)).length;i<o;i++)n=t[i],Jt.tweeners[n]=Jt.tweeners[n]||[],Jt.tweeners[n].unshift(e)},prefilters:[function(e,t,n){var i,o,s,r,a,l,u,c=this,f={},d=e.style,h=e.nodeType&&G(e),p=q.get(e,"fxshow");for(i in n.queue||(null==(a=C._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,c.always(function(){c.always(function(){a.unqueued--,C.queue(e,"fx").length||a.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],"inline"===("none"===(u=C.css(e,"display"))?q.get(e,"olddisplay")||jt(e.nodeName):u)&&"none"===C.css(e,"float")&&(d.display="inline-block")),n.overflow&&(d.overflow="hidden",c.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]})),t)if(o=t[i],Kt.exec(o)){if(delete t[i],s=s||"toggle"===o,o===(h?"hide":"show")){if("show"!==o||!p||void 0===p[i])continue;h=!0}f[i]=p&&p[i]||C.style(e,i)}else u=void 0;if(C.isEmptyObject(f))"inline"===("none"===u?jt(e.nodeName):u)&&(d.display=u);else for(i in p?"hidden"in p&&(h=p.hidden):p=q.access(e,"fxshow",{}),s&&(p.hidden=!h),h?C(e).show():c.done(function(){C(e).hide()}),c.done(function(){var t;for(t in q.remove(e,"fxshow"),f)C.style(e,t,f[t])}),f)r=Zt(h?p[i]:0,i,c),i in p||(p[i]=r.start,h&&(r.end=r.start,r.start="width"===i||"height"===i?1:0))}],prefilter:function(t,e){e?Jt.prefilters.unshift(t):Jt.prefilters.push(t)}}),C.speed=function(t,e,n){var i=t&&"object"==typeof t?C.extend({},t):{complete:n||!n&&e||C.isFunction(t)&&t,duration:t,easing:n&&e||e&&!C.isFunction(e)&&e};return i.duration=C.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in C.fx.speeds?C.fx.speeds[i.duration]:C.fx.speeds._default,null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){C.isFunction(i.old)&&i.old.call(this),i.queue&&C.dequeue(this,i.queue)},i},C.fn.extend({fadeTo:function(t,e,n,i){return this.filter(G).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(e,t,n,i){var o=C.isEmptyObject(e),s=C.speed(t,n,i),r=function(){var t=Jt(this,C.extend({},e),s);(o||q.get(this,"finish"))&&t.stop(!0)};return r.finish=r,o||!1===s.queue?this.each(r):this.queue(s.queue,r)},stop:function(o,t,s){var r=function(t){var e=t.stop;delete t.stop,e(s)};return"string"!=typeof o&&(s=t,t=o,o=void 0),t&&!1!==o&&this.queue(o||"fx",[]),this.each(function(){var t=!0,e=null!=o&&o+"queueHooks",n=C.timers,i=q.get(this);if(e)i[e]&&i[e].stop&&r(i[e]);else for(e in i)i[e]&&i[e].stop&&Ut.test(e)&&r(i[e]);for(e=n.length;e--;)n[e].elem!==this||null!=o&&n[e].queue!==o||(n[e].anim.stop(s),t=!1,n.splice(e,1));!t&&s||C.dequeue(this,o)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var t,e=q.get(this),n=e[r+"queue"],i=e[r+"queueHooks"],o=C.timers,s=n?n.length:0;for(e.finish=!0,C.queue(this,r,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===r&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<s;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete e.finish})}}),C.each(["toggle","show","hide"],function(t,i){var o=C.fn[i];C.fn[i]=function(t,e,n){return null==t||"boolean"==typeof t?o.apply(this,arguments):this.animate(Vt(i,!0),t,e,n)}}),C.each({slideDown:Vt("show"),slideUp:Vt("hide"),slideToggle:Vt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,i){C.fn[t]=function(t,e,n){return this.animate(i,t,e,n)}}),C.timers=[],C.fx.tick=function(){var t,e=0,n=C.timers;for(Bt=C.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||C.fx.stop(),Bt=void 0},C.fx.timer=function(t){C.timers.push(t),t()?C.fx.start():C.timers.pop()},C.fx.interval=13,C.fx.start=function(){Wt||(Wt=k.setInterval(C.fx.tick,C.fx.interval))},C.fx.stop=function(){k.clearInterval(Wt),Wt=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(i,t){return i=C.fx&&C.fx.speeds[i]||i,t=t||"fx",this.queue(t,function(t,e){var n=k.setTimeout(t,i);e.stop=function(){k.clearTimeout(n)}})},Gt=j.createElement("input"),Yt=j.createElement("select"),Qt=Yt.appendChild(j.createElement("option")),Gt.type="checkbox",g.checkOn=""!==Gt.value,g.optSelected=Qt.selected,Yt.disabled=!0,g.optDisabled=!Qt.disabled,(Gt=j.createElement("input")).value="t",Gt.type="radio",g.radioValue="t"===Gt.value;var te,ee=C.expr.attrHandle;C.fn.extend({attr:function(t,e){return D(this,C.attr,t,e,1<arguments.length)},removeAttr:function(t){return this.each(function(){C.removeAttr(this,t)})}}),C.extend({attr:function(t,e,n){var i,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===t.getAttribute?C.prop(t,e,n):(1===s&&C.isXMLDoc(t)||(e=e.toLowerCase(),o=C.attrHooks[e]||(C.expr.match.bool.test(e)?te:void 0)),void 0!==n?null===n?void C.removeAttr(t,e):o&&"set"in o&&void 0!==(i=o.set(t,n,e))?i:(t.setAttribute(e,n+""),n):o&&"get"in o&&null!==(i=o.get(t,e))?i:null==(i=C.find.attr(t,e))?void 0:i)},attrHooks:{type:{set:function(t,e){if(!g.radioValue&&"radio"===e&&C.nodeName(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i,o=0,s=e&&e.match(A);if(s&&1===t.nodeType)for(;n=s[o++];)i=C.propFix[n]||n,C.expr.match.bool.test(n)&&(t[i]=!1),t.removeAttribute(n)}}),te={set:function(t,e,n){return!1===e?C.removeAttr(t,n):t.setAttribute(n,n),n}},C.each(C.expr.match.bool.source.match(/\w+/g),function(t,e){var s=ee[e]||C.find.attr;ee[e]=function(t,e,n){var i,o;return n||(o=ee[e],ee[e]=i,i=null!=s(t,e,n)?e.toLowerCase():null,ee[e]=o),i}});var ne=/^(?:input|select|textarea|button)$/i,ie=/^(?:a|area)$/i;C.fn.extend({prop:function(t,e){return D(this,C.prop,t,e,1<arguments.length)},removeProp:function(t){return this.each(function(){delete this[C.propFix[t]||t]})}}),C.extend({prop:function(t,e,n){var i,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&C.isXMLDoc(t)||(e=C.propFix[e]||e,o=C.propHooks[e]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(t,n,e))?i:t[e]=n:o&&"get"in o&&null!==(i=o.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=C.find.attr(t,"tabindex");return e?parseInt(e,10):ne.test(t.nodeName)||ie.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),g.optSelected||(C.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){C.propFix[this.toLowerCase()]=this});var oe=/[\t\r\n\f]/g;function se(t){return t.getAttribute&&t.getAttribute("class")||""}C.fn.extend({addClass:function(e){var t,n,i,o,s,r,a,l=0;if(C.isFunction(e))return this.each(function(t){C(this).addClass(e.call(this,t,se(this)))});if("string"==typeof e&&e)for(t=e.match(A)||[];n=this[l++];)if(o=se(n),i=1===n.nodeType&&(" "+o+" ").replace(oe," ")){for(r=0;s=t[r++];)i.indexOf(" "+s+" ")<0&&(i+=s+" ");o!==(a=C.trim(i))&&n.setAttribute("class",a)}return this},removeClass:function(e){var t,n,i,o,s,r,a,l=0;if(C.isFunction(e))return this.each(function(t){C(this).removeClass(e.call(this,t,se(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(A)||[];n=this[l++];)if(o=se(n),i=1===n.nodeType&&(" "+o+" ").replace(oe," ")){for(r=0;s=t[r++];)for(;-1<i.indexOf(" "+s+" ");)i=i.replace(" "+s+" "," ");o!==(a=C.trim(i))&&n.setAttribute("class",a)}return this},toggleClass:function(o,e){var s=typeof o;return"boolean"==typeof e&&"string"===s?e?this.addClass(o):this.removeClass(o):C.isFunction(o)?this.each(function(t){C(this).toggleClass(o.call(this,t,se(this),e),e)}):this.each(function(){var t,e,n,i;if("string"===s)for(e=0,n=C(this),i=o.match(A)||[];t=i[e++];)n.hasClass(t)?n.removeClass(t):n.addClass(t);else void 0!==o&&"boolean"!==s||((t=se(this))&&q.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===o?"":q.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&-1<(" "+se(n)+" ").replace(oe," ").indexOf(e))return!0;return!1}});var re=/\r/g,ae=/[\x20\t\r\n\f]+/g;C.fn.extend({val:function(n){var i,t,o,e=this[0];return arguments.length?(o=C.isFunction(n),this.each(function(t){var e;1===this.nodeType&&(null==(e=o?n.call(this,t,C(this).val()):n)?e="":"number"==typeof e?e+="":C.isArray(e)&&(e=C.map(e,function(t){return null==t?"":t+""})),(i=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&void 0!==i.set(this,e,"value")||(this.value=e))})):e?(i=C.valHooks[e.type]||C.valHooks[e.nodeName.toLowerCase()])&&"get"in i&&void 0!==(t=i.get(e,"value"))?t:"string"==typeof(t=e.value)?t.replace(re,""):null==t?"":t:void 0}}),C.extend({valHooks:{option:{get:function(t){var e=C.find.attr(t,"value");return null!=e?e:C.trim(C.text(t)).replace(ae," ")}},select:{get:function(t){for(var e,n,i=t.options,o=t.selectedIndex,s="select-one"===t.type||o<0,r=s?null:[],a=s?o+1:i.length,l=o<0?a:s?o:0;l<a;l++)if(((n=i[l]).selected||l===o)&&(g.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!C.nodeName(n.parentNode,"optgroup"))){if(e=C(n).val(),s)return e;r.push(e)}return r},set:function(t,e){for(var n,i,o=t.options,s=C.makeArray(e),r=o.length;r--;)((i=o[r]).selected=-1<C.inArray(C.valHooks.option.get(i),s))&&(n=!0);return n||(t.selectedIndex=-1),s}}}}),C.each(["radio","checkbox"],function(){C.valHooks[this]={set:function(t,e){if(C.isArray(e))return t.checked=-1<C.inArray(C(t).val(),e)}},g.checkOn||(C.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var le=/^(?:focusinfocus|focusoutblur)$/;C.extend(C.event,{trigger:function(t,e,n,i){var o,s,r,a,l,u,c,f=[n||j],d=p.call(t,"type")?t.type:t,h=p.call(t,"namespace")?t.namespace.split("."):[];if(s=r=n=n||j,3!==n.nodeType&&8!==n.nodeType&&!le.test(d+C.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),l=d.indexOf(":")<0&&"on"+d,(t=t[C.expando]?t:new C.Event(d,"object"==typeof t&&t)).isTrigger=i?2:3,t.namespace=h.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),e=null==e?[t]:C.makeArray(e,[t]),c=C.event.special[d]||{},i||!c.trigger||!1!==c.trigger.apply(n,e))){if(!i&&!c.noBubble&&!C.isWindow(n)){for(a=c.delegateType||d,le.test(a+d)||(s=s.parentNode);s;s=s.parentNode)f.push(s),r=s;r===(n.ownerDocument||j)&&f.push(r.defaultView||r.parentWindow||k)}for(o=0;(s=f[o++])&&!t.isPropagationStopped();)t.type=1<o?a:c.bindType||d,(u=(q.get(s,"events")||{})[t.type]&&q.get(s,"handle"))&&u.apply(s,e),(u=l&&s[l])&&u.apply&&L(s)&&(t.result=u.apply(s,e),!1===t.result&&t.preventDefault());return t.type=d,i||t.isDefaultPrevented()||c._default&&!1!==c._default.apply(f.pop(),e)||!L(n)||l&&C.isFunction(n[d])&&!C.isWindow(n)&&((r=n[l])&&(n[l]=null),n[C.event.triggered=d](),C.event.triggered=void 0,r&&(n[l]=r)),t.result}},simulate:function(t,e,n){var i=C.extend(new C.Event,n,{type:t,isSimulated:!0});C.event.trigger(i,null,e)}}),C.fn.extend({trigger:function(t,e){return this.each(function(){C.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return C.event.trigger(t,e,n,!0)}}),C.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,n){C.fn[n]=function(t,e){return 0<arguments.length?this.on(n,null,t,e):this.trigger(n)}}),C.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),g.focusin="onfocusin"in k,g.focusin||C.each({focus:"focusin",blur:"focusout"},function(n,i){var o=function(t){C.event.simulate(i,t.target,C.event.fix(t))};C.event.special[i]={setup:function(){var t=this.ownerDocument||this,e=q.access(t,i);e||t.addEventListener(n,o,!0),q.access(t,i,(e||0)+1)},teardown:function(){var t=this.ownerDocument||this,e=q.access(t,i)-1;e?q.access(t,i,e):(t.removeEventListener(n,o,!0),q.remove(t,i))}}});var ue=k.location,ce=C.now(),fe=/\?/;C.parseJSON=function(t){return JSON.parse(t+"")},C.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new k.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||C.error("Invalid XML: "+t),e};var de=/#.*$/,he=/([?&])_=[^&]*/,pe=/^(.*?):[ \t]*([^\r\n]*)$/gm,me=/^(?:GET|HEAD)$/,ge=/^\/\//,ve={},ye={},be="*/".concat("*"),we=j.createElement("a");function $e(s){return function(t,e){"string"!=typeof t&&(e=t,t="*");var n,i=0,o=t.toLowerCase().match(A)||[];if(C.isFunction(e))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(s[n]=s[n]||[]).unshift(e)):(s[n]=s[n]||[]).push(e)}}function _e(e,o,s,r){var a={},l=e===ye;function u(t){var i;return a[t]=!0,C.each(e[t]||[],function(t,e){var n=e(o,s,r);return"string"!=typeof n||l||a[n]?l?!(i=n):void 0:(o.dataTypes.unshift(n),u(n),!1)}),i}return u(o.dataTypes[0])||!a["*"]&&u("*")}function ke(t,e){var n,i,o=C.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((o[n]?t:i||(i={}))[n]=e[n]);return i&&C.extend(!0,t,i),t}we.href=ue.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ue.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ue.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":be,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":C.parseJSON,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?ke(ke(t,C.ajaxSettings),e):ke(C.ajaxSettings,t)},ajaxPrefilter:$e(ve),ajaxTransport:$e(ye),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var c,f,d,n,h,i,p,o,m=C.ajaxSetup({},e),g=m.context||m,v=m.context&&(g.nodeType||g.jquery)?C(g):C.event,y=C.Deferred(),b=C.Callbacks("once memory"),w=m.statusCode||{},s={},r={},$=0,a="canceled",_={readyState:0,getResponseHeader:function(t){var e;if(2===$){if(!n)for(n={};e=pe.exec(d);)n[e[1].toLowerCase()]=e[2];e=n[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===$?d:null},setRequestHeader:function(t,e){var n=t.toLowerCase();return $||(t=r[n]=r[n]||t,s[t]=e),this},overrideMimeType:function(t){return $||(m.mimeType=t),this},statusCode:function(t){var e;if(t)if($<2)for(e in t)w[e]=[w[e],t[e]];else _.always(t[_.status]);return this},abort:function(t){var e=t||a;return c&&c.abort(e),l(0,e),this}};if(y.promise(_).complete=b.add,_.success=_.done,_.error=_.fail,m.url=((t||m.url||ue.href)+"").replace(de,"").replace(ge,ue.protocol+"//"),m.type=e.method||e.type||m.method||m.type,m.dataTypes=C.trim(m.dataType||"*").toLowerCase().match(A)||[""],null==m.crossDomain){i=j.createElement("a");try{i.href=m.url,i.href=i.href,m.crossDomain=we.protocol+"//"+we.host!=i.protocol+"//"+i.host}catch(t){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=C.param(m.data,m.traditional)),_e(ve,m,e,_),2===$)return _;for(o in(p=C.event&&m.global)&&0==C.active++&&C.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!me.test(m.type),f=m.url,m.hasContent||(m.data&&(f=m.url+=(fe.test(f)?"&":"?")+m.data,delete m.data),!1===m.cache&&(m.url=he.test(f)?f.replace(he,"$1_="+ce++):f+(fe.test(f)?"&":"?")+"_="+ce++)),m.ifModified&&(C.lastModified[f]&&_.setRequestHeader("If-Modified-Since",C.lastModified[f]),C.etag[f]&&_.setRequestHeader("If-None-Match",C.etag[f])),(m.data&&m.hasContent&&!1!==m.contentType||e.contentType)&&_.setRequestHeader("Content-Type",m.contentType),_.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+be+"; q=0.01":""):m.accepts["*"]),m.headers)_.setRequestHeader(o,m.headers[o]);if(m.beforeSend&&(!1===m.beforeSend.call(g,_,m)||2===$))return _.abort();for(o in a="abort",{success:1,error:1,complete:1})_[o](m[o]);if(c=_e(ye,m,e,_)){if(_.readyState=1,p&&v.trigger("ajaxSend",[_,m]),2===$)return _;m.async&&0<m.timeout&&(h=k.setTimeout(function(){_.abort("timeout")},m.timeout));try{$=1,c.send(s,l)}catch(t){if(!($<2))throw t;l(-1,t)}}else l(-1,"No Transport");function l(t,e,n,i){var o,s,r,a,l,u=e;2!==$&&($=2,h&&k.clearTimeout(h),c=void 0,d=i||"",_.readyState=0<t?4:0,o=200<=t&&t<300||304===t,n&&(a=function(t,e,n){for(var i,o,s,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)s=l[0];else{for(o in n){if(!l[0]||t.converters[o+" "+l[0]]){s=o;break}r||(r=o)}s=s||r}if(s)return s!==l[0]&&l.unshift(s),n[s]}(m,_,n)),a=function(t,e,n,i){var o,s,r,a,l,u={},c=t.dataTypes.slice();if(c[1])for(r in t.converters)u[r.toLowerCase()]=t.converters[r];for(s=c.shift();s;)if(t.responseFields[s]&&(n[t.responseFields[s]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=c.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=u[l+" "+s]||u["* "+s]))for(o in u)if((a=o.split(" "))[1]===s&&(r=u[l+" "+a[0]]||u["* "+a[0]])){!0===r?r=u[o]:!0!==u[o]&&(s=a[0],c.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}(m,a,_,o),o?(m.ifModified&&((l=_.getResponseHeader("Last-Modified"))&&(C.lastModified[f]=l),(l=_.getResponseHeader("etag"))&&(C.etag[f]=l)),204===t||"HEAD"===m.type?u="nocontent":304===t?u="notmodified":(u=a.state,s=a.data,o=!(r=a.error))):(r=u,!t&&u||(u="error",t<0&&(t=0))),_.status=t,_.statusText=(e||u)+"",o?y.resolveWith(g,[s,u,_]):y.rejectWith(g,[_,u,r]),_.statusCode(w),w=void 0,p&&v.trigger(o?"ajaxSuccess":"ajaxError",[_,m,o?s:r]),b.fireWith(g,[_,u]),p&&(v.trigger("ajaxComplete",[_,m]),--C.active||C.event.trigger("ajaxStop")))}return _},getJSON:function(t,e,n){return C.get(t,e,n,"json")},getScript:function(t,e){return C.get(t,void 0,e,"script")}}),C.each(["get","post"],function(t,o){C[o]=function(t,e,n,i){return C.isFunction(e)&&(i=i||n,n=e,e=void 0),C.ajax(C.extend({url:t,type:o,dataType:i,data:e,success:n},C.isPlainObject(t)&&t))}}),C._evalUrl=function(t){return C.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},C.fn.extend({wrapAll:function(e){var t;return C.isFunction(e)?this.each(function(t){C(this).wrapAll(e.call(this,t))}):(this[0]&&(t=C(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this)},wrapInner:function(n){return C.isFunction(n)?this.each(function(t){C(this).wrapInner(n.call(this,t))}):this.each(function(){var t=C(this),e=t.contents();e.length?e.wrapAll(n):t.append(n)})},wrap:function(e){var n=C.isFunction(e);return this.each(function(t){C(this).wrapAll(n?e.call(this,t):e)})},unwrap:function(){return this.parent().each(function(){C.nodeName(this,"body")||C(this).replaceWith(this.childNodes)}).end()}}),C.expr.filters.hidden=function(t){return!C.expr.filters.visible(t)},C.expr.filters.visible=function(t){return 0<t.offsetWidth||0<t.offsetHeight||0<t.getClientRects().length};var je=/%20/g,Ce=/\[\]$/,xe=/\r?\n/g,Oe=/^(?:submit|button|image|reset|file)$/i,Te=/^(?:input|select|textarea|keygen)/i;function Se(n,t,i,o){var e;if(C.isArray(t))C.each(t,function(t,e){i||Ce.test(n)?o(n,e):Se(n+"["+("object"==typeof e&&null!=e?t:"")+"]",e,i,o)});else if(i||"object"!==C.type(t))o(n,t);else for(e in t)Se(n+"["+e+"]",t[e],i,o)}C.param=function(t,e){var n,i=[],o=function(t,e){e=C.isFunction(e)?e():null==e?"":e,i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=C.ajaxSettings&&C.ajaxSettings.traditional),C.isArray(t)||t.jquery&&!C.isPlainObject(t))C.each(t,function(){o(this.name,this.value)});else for(n in t)Se(n,t[n],e,o);return i.join("&").replace(je,"+")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=C.prop(this,"elements");return t?C.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!C(this).is(":disabled")&&Te.test(this.nodeName)&&!Oe.test(t)&&(this.checked||!Q.test(t))}).map(function(t,e){var n=C(this).val();return null==n?null:C.isArray(n)?C.map(n,function(t){return{name:e.name,value:t.replace(xe,"\r\n")}}):{name:e.name,value:n.replace(xe,"\r\n")}}).get()}}),C.ajaxSettings.xhr=function(){try{return new k.XMLHttpRequest}catch(t){}};var ze={0:200,1223:204},Ee=C.ajaxSettings.xhr();g.cors=!!Ee&&"withCredentials"in Ee,g.ajax=Ee=!!Ee,C.ajaxTransport(function(o){var s,r;if(g.cors||Ee&&!o.crossDomain)return{send:function(t,e){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||t["X-Requested-With"]||(t["X-Requested-With"]="XMLHttpRequest"),t)i.setRequestHeader(n,t[n]);s=function(t){return function(){s&&(s=r=i.onload=i.onerror=i.onabort=i.onreadystatechange=null,"abort"===t?i.abort():"error"===t?"number"!=typeof i.status?e(0,"error"):e(i.status,i.statusText):e(ze[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=s(),r=i.onerror=s("error"),void 0!==i.onabort?i.onabort=r:i.onreadystatechange=function(){4===i.readyState&&k.setTimeout(function(){s&&r()})},s=s("abort");try{i.send(o.hasContent&&o.data||null)}catch(t){if(s)throw t}},abort:function(){s&&s()}}}),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return C.globalEval(t),t}}}),C.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),C.ajaxTransport("script",function(n){var i,o;if(n.crossDomain)return{send:function(t,e){i=C("<script>").prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(t){i.remove(),o=null,t&&e("error"===t.type?404:200,t.type)}),j.head.appendChild(i[0])},abort:function(){o&&o()}}});var Ae=[],Pe=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ae.pop()||C.expando+"_"+ce++;return this[t]=!0,t}}),C.ajaxPrefilter("json jsonp",function(t,e,n){var i,o,s,r=!1!==t.jsonp&&(Pe.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Pe.test(t.data)&&"data");if(r||"jsonp"===t.dataTypes[0])return i=t.jsonpCallback=C.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,r?t[r]=t[r].replace(Pe,"$1"+i):!1!==t.jsonp&&(t.url+=(fe.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return s||C.error(i+" was not called"),s[0]},t.dataTypes[0]="json",o=k[i],k[i]=function(){s=arguments},n.always(function(){void 0===o?C(k).removeProp(i):k[i]=o,t[i]&&(t.jsonpCallback=e.jsonpCallback,Ae.push(i)),s&&C.isFunction(o)&&o(s[0]),s=o=void 0}),"script"}),C.parseHTML=function(t,e,n){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(n=e,e=!1),e=e||j;var i=w.exec(t),o=!n&&[];return i?[e.createElement(i[1])]:(i=nt([t],e,o),o&&o.length&&C(o).remove(),C.merge([],i.childNodes))};var De=C.fn.load;function Le(t){return C.isWindow(t)?t:9===t.nodeType&&t.defaultView}C.fn.load=function(t,e,n){if("string"!=typeof t&&De)return De.apply(this,arguments);var i,o,s,r=this,a=t.indexOf(" ");return-1<a&&(i=C.trim(t.slice(a)),t=t.slice(0,a)),C.isFunction(e)?(n=e,e=void 0):e&&"object"==typeof e&&(o="POST"),0<r.length&&C.ajax({url:t,type:o||"GET",dataType:"html",data:e}).done(function(t){s=arguments,r.html(i?C("<div>").append(C.parseHTML(t)).find(i):t)}).always(n&&function(t,e){r.each(function(){n.apply(this,s||[t.responseText,e,t])})}),this},C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){C.fn[e]=function(t){return this.on(e,t)}}),C.expr.filters.animated=function(e){return C.grep(C.timers,function(t){return e===t.elem}).length},C.offset={setOffset:function(t,e,n){var i,o,s,r,a,l,u=C.css(t,"position"),c=C(t),f={};"static"===u&&(t.style.position="relative"),a=c.offset(),s=C.css(t,"top"),l=C.css(t,"left"),o=("absolute"===u||"fixed"===u)&&-1<(s+l).indexOf("auto")?(r=(i=c.position()).top,i.left):(r=parseFloat(s)||0,parseFloat(l)||0),C.isFunction(e)&&(e=e.call(t,n,C.extend({},a))),null!=e.top&&(f.top=e.top-a.top+r),null!=e.left&&(f.left=e.left-a.left+o),"using"in e?e.using.call(t,f):c.css(f)}},C.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){C.offset.setOffset(this,e,t)});var t,n,i=this[0],o={top:0,left:0},s=i&&i.ownerDocument;return s?(t=s.documentElement,C.contains(t,i)?(o=i.getBoundingClientRect(),n=Le(s),{top:o.top+n.pageYOffset-t.clientTop,left:o.left+n.pageXOffset-t.clientLeft}):o):void 0},position:function(){if(this[0]){var t,e,n=this[0],i={top:0,left:0};return"fixed"===C.css(n,"position")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),C.nodeName(t[0],"html")||(i=t.offset()),i.top+=C.css(t[0],"borderTopWidth",!0),i.left+=C.css(t[0],"borderLeftWidth",!0)),{top:e.top-i.top-C.css(n,"marginTop",!0),left:e.left-i.left-C.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===C.css(t,"position");)t=t.offsetParent;return t||St})}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,o){var s="pageYOffset"===o;C.fn[e]=function(t){return D(this,function(t,e,n){var i=Le(t);if(void 0===n)return i?i[o]:t[e];i?i.scrollTo(s?i.pageXOffset:n,s?n:i.pageYOffset):t[e]=n},e,t,arguments.length)}}),C.each(["top","left"],function(t,n){C.cssHooks[n]=Et(g.pixelPosition,function(t,e){if(e)return e=zt(t,n),xt.test(e)?C(t).position()[n]+"px":e})}),C.each({Height:"height",Width:"width"},function(s,r){C.each({padding:"inner"+s,content:r,"":"outer"+s},function(i,t){C.fn[t]=function(t,e){var n=arguments.length&&(i||"boolean"!=typeof t),o=i||(!0===t||!0===e?"margin":"border");return D(this,function(t,e,n){var i;return C.isWindow(t)?t.document.documentElement["client"+s]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+s],i["scroll"+s],t.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?C.css(t,e,o):C.style(t,e,n,o)},r,n?t:void 0,n,null)}})}),C.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},size:function(){return this.length}}),C.fn.andSelf=C.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return C});var Re=k.jQuery,qe=k.$;return C.noConflict=function(t){return k.$===C&&(k.$=qe),t&&k.jQuery===C&&(k.jQuery=Re),C},t||(k.jQuery=k.$=C),C}),function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],e);else{var n="object"==typeof exports?e(require("jquery")):e(t.jQuery);for(var i in n)("object"==typeof exports?exports:t)[i]=n[i]}}(window,function(n){return function(n){var i={};function o(t){if(i[t])return i[t].exports;var e=i[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,o),e.l=!0,e.exports}return o.m=n,o.c=i,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}({"./js/entries/foundation.js":function(t,e,n){"use strict";n.r(e);var i=n("jquery"),o=n.n(i),s=n("./js/foundation.core.js");n.d(e,"Foundation",function(){return s.Foundation});var r=n("./js/foundation.core.utils.js");n.d(e,"CoreUtils",function(){return r});var a=n("./js/foundation.util.box.js");n.d(e,"Box",function(){return a.Box});var l=n("./js/foundation.util.imageLoader.js");n.d(e,"onImagesLoaded",function(){return l.onImagesLoaded});var u=n("./js/foundation.util.keyboard.js");n.d(e,"Keyboard",function(){return u.Keyboard});var c=n("./js/foundation.util.mediaQuery.js");n.d(e,"MediaQuery",function(){return c.MediaQuery});var f=n("./js/foundation.util.motion.js");n.d(e,"Motion",function(){return f.Motion});var d=n("./js/foundation.util.nest.js");n.d(e,"Nest",function(){return d.Nest});var h=n("./js/foundation.util.timer.js");n.d(e,"Timer",function(){return h.Timer});var p=n("./js/foundation.util.touch.js");n.d(e,"Touch",function(){return p.Touch});var m=n("./js/foundation.util.triggers.js");n.d(e,"Triggers",function(){return m.Triggers});var g=n("./js/foundation.abide.js");n.d(e,"Abide",function(){return g.Abide});var v=n("./js/foundation.accordion.js");n.d(e,"Accordion",function(){return v.Accordion});var y=n("./js/foundation.accordionMenu.js");n.d(e,"AccordionMenu",function(){return y.AccordionMenu});var b=n("./js/foundation.drilldown.js");n.d(e,"Drilldown",function(){return b.Drilldown});var w=n("./js/foundation.dropdown.js");n.d(e,"Dropdown",function(){return w.Dropdown});var $=n("./js/foundation.dropdownMenu.js");n.d(e,"DropdownMenu",function(){return $.DropdownMenu});var _=n("./js/foundation.equalizer.js");n.d(e,"Equalizer",function(){return _.Equalizer});var k=n("./js/foundation.interchange.js");n.d(e,"Interchange",function(){return k.Interchange});var j=n("./js/foundation.magellan.js");n.d(e,"Magellan",function(){return j.Magellan});var C=n("./js/foundation.offcanvas.js");n.d(e,"OffCanvas",function(){return C.OffCanvas});var x=n("./js/foundation.orbit.js");n.d(e,"Orbit",function(){return x.Orbit});var O=n("./js/foundation.responsiveMenu.js");n.d(e,"ResponsiveMenu",function(){return O.ResponsiveMenu});var T=n("./js/foundation.responsiveToggle.js");n.d(e,"ResponsiveToggle",function(){return T.ResponsiveToggle});var S=n("./js/foundation.reveal.js");n.d(e,"Reveal",function(){return S.Reveal});var z=n("./js/foundation.slider.js");n.d(e,"Slider",function(){return z.Slider});var E=n("./js/foundation.smoothScroll.js");n.d(e,"SmoothScroll",function(){return E.SmoothScroll});var A=n("./js/foundation.sticky.js");n.d(e,"Sticky",function(){return A.Sticky});var P=n("./js/foundation.tabs.js");n.d(e,"Tabs",function(){return P.Tabs});var D=n("./js/foundation.toggler.js");n.d(e,"Toggler",function(){return D.Toggler});var L=n("./js/foundation.tooltip.js");n.d(e,"Tooltip",function(){return L.Tooltip});var R=n("./js/foundation.responsiveAccordionTabs.js");n.d(e,"ResponsiveAccordionTabs",function(){return R.ResponsiveAccordionTabs}),s.Foundation.addToJquery(o.a),s.Foundation.rtl=r.rtl,s.Foundation.GetYoDigits=r.GetYoDigits,s.Foundation.transitionend=r.transitionend,s.Foundation.RegExpEscape=r.RegExpEscape,s.Foundation.onLoad=r.onLoad,s.Foundation.Box=a.Box,s.Foundation.onImagesLoaded=l.onImagesLoaded,s.Foundation.Keyboard=u.Keyboard,s.Foundation.MediaQuery=c.MediaQuery,s.Foundation.Motion=f.Motion,s.Foundation.Move=f.Move,s.Foundation.Nest=d.Nest,s.Foundation.Timer=h.Timer,p.Touch.init(o.a),m.Triggers.init(o.a,s.Foundation),c.MediaQuery._init(),s.Foundation.plugin(g.Abide,"Abide"),s.Foundation.plugin(v.Accordion,"Accordion"),s.Foundation.plugin(y.AccordionMenu,"AccordionMenu"),s.Foundation.plugin(b.Drilldown,"Drilldown"),s.Foundation.plugin(w.Dropdown,"Dropdown"),s.Foundation.plugin($.DropdownMenu,"DropdownMenu"),s.Foundation.plugin(_.Equalizer,"Equalizer"),s.Foundation.plugin(k.Interchange,"Interchange"),s.Foundation.plugin(j.Magellan,"Magellan"),s.Foundation.plugin(C.OffCanvas,"OffCanvas"),s.Foundation.plugin(x.Orbit,"Orbit"),s.Foundation.plugin(O.ResponsiveMenu,"ResponsiveMenu"),s.Foundation.plugin(T.ResponsiveToggle,"ResponsiveToggle"),s.Foundation.plugin(S.Reveal,"Reveal"),s.Foundation.plugin(z.Slider,"Slider"),s.Foundation.plugin(E.SmoothScroll,"SmoothScroll"),s.Foundation.plugin(A.Sticky,"Sticky"),s.Foundation.plugin(P.Tabs,"Tabs"),s.Foundation.plugin(D.Toggler,"Toggler"),s.Foundation.plugin(L.Tooltip,"Tooltip"),s.Foundation.plugin(R.ResponsiveAccordionTabs,"ResponsiveAccordionTabs"),e.default=s.Foundation},"./js/foundation.abide.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Abide",function(){return f});var i=n("jquery"),c=n.n(i),o=n("./js/foundation.core.plugin.js"),r=n("./js/foundation.core.utils.js");function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function l(t){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function u(t,e){return(u=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=l(n).apply(this,arguments))||"object"!==s(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&u(t,e)}(n,o.Plugin),a(n.prototype,[{key:"_setup",value:function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};this.$element=t,this.options=c.a.extend(!0,{},n.defaults,this.$element.data(),e),this.className="Abide",this._init()}},{key:"_init",value:function(){var n=this;this.$inputs=c.a.merge(this.$element.find("input").not("[type=submit]"),this.$element.find("textarea, select"));var t=this.$element.find("[data-abide-error]");this.options.a11yAttributes&&(this.$inputs.each(function(t,e){return n.addA11yAttributes(c()(e))}),t.each(function(t,e){return n.addGlobalErrorA11yAttributes(c()(e))})),this._events()}},{key:"_events",value:function(){var e=this;this.$element.off(".abide").on("reset.zf.abide",function(){e.resetForm()}).on("submit.zf.abide",function(){return e.validateForm()}),"fieldChange"===this.options.validateOn&&this.$inputs.off("change.zf.abide").on("change.zf.abide",function(t){e.validateInput(c()(t.target))}),this.options.liveValidate&&this.$inputs.off("input.zf.abide").on("input.zf.abide",function(t){e.validateInput(c()(t.target))}),this.options.validateOnBlur&&this.$inputs.off("blur.zf.abide").on("blur.zf.abide",function(t){e.validateInput(c()(t.target))})}},{key:"_reflow",value:function(){this._init()}},{key:"requiredCheck",value:function(t){if(!t.attr("required"))return!0;var e=!0;switch(t[0].type){case"checkbox":e=t[0].checked;break;case"select":case"select-one":case"select-multiple":var n=t.find("option:selected");n.length&&n.val()||(e=!1);break;default:t.val()&&t.val().length||(e=!1)}return e}},{key:"findFormError",value:function(t){var e=t[0].id,n=t.siblings(this.options.formErrorSelector);return n.length||(n=t.parent().find(this.options.formErrorSelector)),e&&(n=n.add(this.$element.find('[data-form-error-for="'.concat(e,'"]')))),n}},{key:"findLabel",value:function(t){var e=t[0].id,n=this.$element.find('label[for="'.concat(e,'"]'));return n.length?n:t.closest("label")}},{key:"findRadioLabels",value:function(t){var o=this,e=t.map(function(t,e){var n=e.id,i=o.$element.find('label[for="'.concat(n,'"]'));return i.length||(i=c()(e).closest("label")),i[0]});return c()(e)}},{key:"addErrorClasses",value:function(t){var e=this.findLabel(t),n=this.findFormError(t);e.length&&e.addClass(this.options.labelErrorClass),n.length&&n.addClass(this.options.formErrorClass),t.addClass(this.options.inputErrorClass).attr({"data-invalid":"","aria-invalid":!0})}},{key:"addA11yAttributes",value:function(t){var e=this.findFormError(t),n=e.filter("label"),i=e.first();if(e.length){if(void 0===t.attr("aria-describedby")){var o=i.attr("id");void 0===o&&(o=Object(r.GetYoDigits)(6,"abide-error"),i.attr("id",o)),t.attr("aria-describedby",o)}if(n.filter("[for]").length<n.length){var s=t.attr("id");void 0===s&&(s=Object(r.GetYoDigits)(6,"abide-input"),t.attr("id",s)),n.each(function(t,e){var n=c()(e);void 0===n.attr("for")&&n.attr("for",s)})}e.each(function(t,e){var n=c()(e);void 0===n.attr("role")&&n.attr("role","alert")}).end()}}},{key:"addGlobalErrorA11yAttributes",value:function(t){void 0===t.attr("aria-live")&&t.attr("aria-live",this.options.a11yErrorLevel)}},{key:"removeRadioErrorClasses",value:function(t){var e=this.$element.find(':radio[name="'.concat(t,'"]')),n=this.findRadioLabels(e),i=this.findFormError(e);n.length&&n.removeClass(this.options.labelErrorClass),i.length&&i.removeClass(this.options.formErrorClass),e.removeClass(this.options.inputErrorClass).attr({"data-invalid":null,"aria-invalid":null})}},{key:"removeErrorClasses",value:function(t){if("radio"==t[0].type)return this.removeRadioErrorClasses(t.attr("name"));var e=this.findLabel(t),n=this.findFormError(t);e.length&&e.removeClass(this.options.labelErrorClass),n.length&&n.removeClass(this.options.formErrorClass),t.removeClass(this.options.inputErrorClass).attr({"data-invalid":null,"aria-invalid":null})}},{key:"validateInput",value:function(t){var e=this.requiredCheck(t),n=!1,i=!0,o=t.attr("data-validator"),s=!0;if(t.is("[data-abide-ignore]")||t.is('[type="hidden"]')||t.is("[disabled]"))return!0;switch(t[0].type){case"radio":n=this.validateRadio(t.attr("name"));break;case"checkbox":n=e;break;case"select":case"select-one":case"select-multiple":n=e;break;default:n=this.validateText(t)}o&&(i=this.matchValidation(t,o,t.attr("required"))),t.attr("data-equalto")&&(s=this.options.validators.equalTo(t));var r=-1===[e,n,i,s].indexOf(!1),a=(r?"valid":"invalid")+".zf.abide";if(r){var l=this.$element.find('[data-equalto="'.concat(t.attr("id"),'"]'));if(l.length){var u=this;l.each(function(){c()(this).val()&&u.validateInput(c()(this))})}}return this[r?"removeErrorClasses":"addErrorClasses"](t),t.trigger(a,[t]),r}},{key:"validateForm",value:function(){var i=this,t=[],e=this;this.$inputs.each(function(){t.push(e.validateInput(c()(this)))});var o=-1===t.indexOf(!1);return this.$element.find("[data-abide-error]").each(function(t,e){var n=c()(e);i.options.a11yAttributes&&i.addGlobalErrorA11yAttributes(n),n.css("display",o?"none":"block")}),this.$element.trigger((o?"formvalid":"forminvalid")+".zf.abide",[this.$element]),o}},{key:"validateText",value:function(t,e){e=e||t.attr("pattern")||t.attr("type");var n=t.val(),i=!1;return n.length?i=this.options.patterns.hasOwnProperty(e)?this.options.patterns[e].test(n):e===t.attr("type")||new RegExp(e).test(n):t.prop("required")||(i=!0),i}},{key:"validateRadio",value:function(t){var e=this.$element.find(':radio[name="'.concat(t,'"]')),n=!1,i=!1;return e.each(function(t,e){c()(e).attr("required")&&(i=!0)}),i||(n=!0),n||e.each(function(t,e){c()(e).prop("checked")&&(n=!0)}),n}},{key:"matchValidation",value:function(e,t,n){var i=this;return n=!!n,-1===t.split(" ").map(function(t){return i.options.validators[t](e,n,e.parent())}).indexOf(!1)}},{key:"resetForm",value:function(){var t=this.$element,e=this.options;c()(".".concat(e.labelErrorClass),t).not("small").removeClass(e.labelErrorClass),c()(".".concat(e.inputErrorClass),t).not("small").removeClass(e.inputErrorClass),c()("".concat(e.formErrorSelector,".").concat(e.formErrorClass)).removeClass(e.formErrorClass),t.find("[data-abide-error]").css("display","none"),c()(":input",t).not(":button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]").val("").attr({"data-invalid":null,"aria-invalid":null}),c()(":input:radio",t).not("[data-abide-ignore]").prop("checked",!1).attr({"data-invalid":null,"aria-invalid":null}),c()(":input:checkbox",t).not("[data-abide-ignore]").prop("checked",!1).attr({"data-invalid":null,"aria-invalid":null}),t.trigger("formreset.zf.abide",[t])}},{key:"_destroy",value:function(){var t=this;this.$element.off(".abide").find("[data-abide-error]").css("display","none"),this.$inputs.off(".abide").each(function(){t.removeErrorClasses(c()(this))})}}]),n}();f.defaults={validateOn:"fieldChange",labelErrorClass:"is-invalid-label",inputErrorClass:"is-invalid-input",formErrorSelector:".form-error",formErrorClass:"is-visible",a11yAttributes:!0,a11yErrorLevel:"assertive",liveValidate:!1,validateOnBlur:!1,patterns:{alpha:/^[a-zA-Z]+$/,alpha_numeric:/^[a-zA-Z0-9]+$/,integer:/^[-+]?\d+$/,number:/^[-+]?\d*(?:[\.\,]\d+)?$/,card:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(?:222[1-9]|2[3-6][0-9]{2}|27[0-1][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/,cvv:/^([0-9]){3,4}$/,email:/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,url:/^((?:(https?|ftps?|file|ssh|sftp):\/\/|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\((?:[^\s()<>]+|(?:\([^\s()<>]+\)))*\))+(?:\((?:[^\s()<>]+|(?:\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:\'".,<>?\xab\xbb\u201c\u201d\u2018\u2019]))$/,domain:/^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,8}$/,datetime:/^([0-2][0-9]{3})\-([0-1][0-9])\-([0-3][0-9])T([0-5][0-9])\:([0-5][0-9])\:([0-5][0-9])(Z|([\-\+]([0-1][0-9])\:00))$/,date:/(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,time:/^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,dateISO:/^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/,month_day_year:/^(0[1-9]|1[012])[- \/.](0[1-9]|[12][0-9]|3[01])[- \/.]\d{4}$/,day_month_year:/^(0[1-9]|[12][0-9]|3[01])[- \/.](0[1-9]|1[012])[- \/.]\d{4}$/,color:/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,website:{test:function(t){return f.defaults.patterns.domain.test(t)||f.defaults.patterns.url.test(t)}}},validators:{equalTo:function(t,e,n){return c()("#".concat(t.attr("data-equalto"))).val()===t.val()}}}},"./js/foundation.accordion.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Accordion",function(){return d});var i=n("jquery"),r=n.n(i),a=n("./js/foundation.core.utils.js"),o=n("./js/foundation.util.keyboard.js"),s=n("./js/foundation.core.plugin.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(n).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(n,s.Plugin),u(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=r.a.extend({},n.defaults,this.$element.data(),e),this.className="Accordion",this._init(),o.Keyboard.register("Accordion",{ENTER:"toggle",SPACE:"toggle",ARROW_DOWN:"next",ARROW_UP:"previous"})}},{key:"_init",value:function(){var o=this;this._isInitializing=!0,this.$element.attr("role","tablist"),this.$tabs=this.$element.children("[data-accordion-item]"),this.$tabs.each(function(t,e){var n=r()(e),i=n.children("[data-tab-content]"),o=i[0].id||Object(a.GetYoDigits)(6,"accordion"),s=e.id?"".concat(e.id,"-label"):"".concat(o,"-label");n.find("a:first").attr({"aria-controls":o,role:"tab",id:s,"aria-expanded":!1,"aria-selected":!1}),i.attr({role:"tabpanel","aria-labelledby":s,"aria-hidden":!0,id:o})});var t=this.$element.find(".is-active").children("[data-tab-content]");t.length&&(this._initialAnchor=t.prev("a").attr("href"),this._openSingleTab(t)),this._checkDeepLink=function(){var t=window.location.hash;if(!t.length){if(o._isInitializing)return;o._initialAnchor&&(t=o._initialAnchor)}var e=t&&r()(t),n=t&&o.$element.find('[href$="'.concat(t,'"]')),i=!(!e.length||!n.length);e&&n&&n.length?n.parent("[data-accordion-item]").hasClass("is-active")||o._openSingleTab(e):o._closeAllTabs(),i&&(o.options.deepLinkSmudge&&Object(a.onLoad)(r()(window),function(){var t=o.$element.offset();r()("html, body").animate({scrollTop:t.top},o.options.deepLinkSmudgeDelay)}),o.$element.trigger("deeplink.zf.accordion",[n,e]))},this.options.deepLink&&this._checkDeepLink(),this._events(),this._isInitializing=!1}},{key:"_events",value:function(){var i=this;this.$tabs.each(function(){var e=r()(this),n=e.children("[data-tab-content]");n.length&&e.children("a").off("click.zf.accordion keydown.zf.accordion").on("click.zf.accordion",function(t){t.preventDefault(),i.toggle(n)}).on("keydown.zf.accordion",function(t){o.Keyboard.handleKey(t,"Accordion",{toggle:function(){i.toggle(n)},next:function(){var t=e.next().find("a").focus();i.options.multiExpand||t.trigger("click.zf.accordion")},previous:function(){var t=e.prev().find("a").focus();i.options.multiExpand||t.trigger("click.zf.accordion")},handled:function(){t.preventDefault(),t.stopPropagation()}})})}),this.options.deepLink&&r()(window).on("hashchange",this._checkDeepLink)}},{key:"toggle",value:function(t){if(t.closest("[data-accordion]").is("[disabled]"))console.info("Cannot toggle an accordion that is disabled.");else if(t.parent().hasClass("is-active")?this.up(t):this.down(t),this.options.deepLink){var e=t.prev("a").attr("href");this.options.updateHistory?history.pushState({},"",e):history.replaceState({},"",e)}}},{key:"down",value:function(t){t.closest("[data-accordion]").is("[disabled]")?console.info("Cannot call down on an accordion that is disabled."):this.options.multiExpand?this._openTab(t):this._openSingleTab(t)}},{key:"up",value:function(t){if(this.$element.is("[disabled]"))console.info("Cannot call up on an accordion that is disabled.");else{var e=t.parent();if(e.hasClass("is-active")){var n=e.siblings();(this.options.allowAllClosed||n.hasClass("is-active"))&&this._closeTab(t)}}}},{key:"_openSingleTab",value:function(t){var e=this.$element.children(".is-active").children("[data-tab-content]");e.length&&this._closeTab(e.not(t)),this._openTab(t)}},{key:"_openTab",value:function(t){var e=this,n=t.parent(),i=t.attr("aria-labelledby");t.attr("aria-hidden",!1),n.addClass("is-active"),r()("#".concat(i)).attr({"aria-expanded":!0,"aria-selected":!0}),t.slideDown(this.options.slideSpeed,function(){e.$element.trigger("down.zf.accordion",[t])})}},{key:"_closeTab",value:function(t){var e=this,n=t.parent(),i=t.attr("aria-labelledby");t.attr("aria-hidden",!0),n.removeClass("is-active"),r()("#".concat(i)).attr({"aria-expanded":!1,"aria-selected":!1}),t.slideUp(this.options.slideSpeed,function(){e.$element.trigger("up.zf.accordion",[t])})}},{key:"_closeAllTabs",value:function(){var t=this.$element.children(".is-active").children("[data-tab-content]");t.length&&this._closeTab(t)}},{key:"_destroy",value:function(){this.$element.find("[data-tab-content]").stop(!0).slideUp(0).css("display",""),this.$element.find("a").off(".zf.accordion"),this.options.deepLink&&r()(window).off("hashchange",this._checkDeepLink)}}]),n}();d.defaults={slideSpeed:250,multiExpand:!1,allowAllClosed:!1,deepLink:!1,deepLinkSmudge:!1,deepLinkSmudgeDelay:300,updateHistory:!1}},"./js/foundation.accordionMenu.js":function(t,e,n){"use strict";n.r(e),n.d(e,"AccordionMenu",function(){return h});var i=n("jquery"),a=n.n(i),l=n("./js/foundation.util.keyboard.js"),o=n("./js/foundation.util.nest.js"),r=n("./js/foundation.core.utils.js"),s=n("./js/foundation.core.plugin.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=f(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,s.Plugin),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=a.a.extend({},n.defaults,this.$element.data(),e),this.className="AccordionMenu",this._init(),l.Keyboard.register("AccordionMenu",{ENTER:"toggle",SPACE:"toggle",ARROW_RIGHT:"open",ARROW_UP:"up",ARROW_DOWN:"down",ARROW_LEFT:"close",ESCAPE:"closeAll"})}},{key:"_init",value:function(){o.Nest.Feather(this.$element,"accordion");var s=this;this.$element.find("[data-submenu]").not(".is-active").slideUp(0),this.$element.attr({role:"tree","aria-multiselectable":this.options.multiOpen}),this.$menuLinks=this.$element.find(".is-accordion-submenu-parent"),this.$menuLinks.each(function(){var t=this.id||Object(r.GetYoDigits)(6,"acc-menu-link"),e=a()(this),n=e.children("[data-submenu]"),i=n[0].id||Object(r.GetYoDigits)(6,"acc-menu"),o=n.hasClass("is-active");s.options.parentLink&&e.children("a").clone().prependTo(n).wrap('<li data-is-parent-link class="is-submenu-parent-item is-submenu-item is-accordion-submenu-item"></li>'),s.options.submenuToggle?(e.addClass("has-submenu-toggle"),e.children("a").after('<button id="'+t+'" class="submenu-toggle" aria-controls="'+i+'" aria-expanded="'+o+'" title="'+s.options.submenuToggleText+'"><span class="submenu-toggle-text">'+s.options.submenuToggleText+"</span></button>")):e.attr({"aria-controls":i,"aria-expanded":o,id:t}),n.attr({"aria-labelledby":t,"aria-hidden":!o,role:"group",id:i})}),this.$element.find("li").attr({role:"treeitem"});var t=this.$element.find(".is-active");t.length&&(s=this,t.each(function(){s.down(a()(this))})),this._events()}},{key:"_events",value:function(){var r=this;this.$element.find("li").each(function(){var e=a()(this).children("[data-submenu]");e.length&&(r.options.submenuToggle?a()(this).children(".submenu-toggle").off("click.zf.accordionMenu").on("click.zf.accordionMenu",function(t){r.toggle(e)}):a()(this).children("a").off("click.zf.accordionMenu").on("click.zf.accordionMenu",function(t){t.preventDefault(),r.toggle(e)}))}).on("keydown.zf.accordionmenu",function(e){var n,i,o=a()(this),s=o.parent("ul").children("li"),t=o.children("[data-submenu]");s.each(function(t){if(a()(this).is(o))return n=s.eq(Math.max(0,t-1)).find("a").first(),i=s.eq(Math.min(t+1,s.length-1)).find("a").first(),a()(this).children("[data-submenu]:visible").length&&(i=o.find("li:first-child").find("a").first()),a()(this).is(":first-child")?n=o.parents("li").first().find("a").first():n.parents("li").first().children("[data-submenu]:visible").length&&(n=n.parents("li").find("li:last-child").find("a").first()),void(a()(this).is(":last-child")&&(i=o.parents("li").first().next("li").find("a").first()))}),l.Keyboard.handleKey(e,"AccordionMenu",{open:function(){t.is(":hidden")&&(r.down(t),t.find("li").first().find("a").first().focus())},close:function(){t.length&&!t.is(":hidden")?r.up(t):o.parent("[data-submenu]").length&&(r.up(o.parent("[data-submenu]")),o.parents("li").first().find("a").first().focus())},up:function(){return n.focus(),!0},down:function(){return i.focus(),!0},toggle:function(){return!r.options.submenuToggle&&(o.children("[data-submenu]").length?(r.toggle(o.children("[data-submenu]")),!0):void 0)},closeAll:function(){r.hideAll()},handled:function(t){t&&e.preventDefault(),e.stopImmediatePropagation()}})})}},{key:"hideAll",value:function(){this.up(this.$element.find("[data-submenu]"))}},{key:"showAll",value:function(){this.down(this.$element.find("[data-submenu]"))}},{key:"toggle",value:function(t){t.is(":animated")||(t.is(":hidden")?this.down(t):this.up(t))}},{key:"down",value:function(t){var e=this;this.options.multiOpen||this.up(this.$element.find(".is-active").not(t.parentsUntil(this.$element).add(t))),t.addClass("is-active").attr({"aria-hidden":!1}),this.options.submenuToggle?t.prev(".submenu-toggle").attr({"aria-expanded":!0}):t.parent(".is-accordion-submenu-parent").attr({"aria-expanded":!0}),t.slideDown(this.options.slideSpeed,function(){e.$element.trigger("down.zf.accordionMenu",[t])})}},{key:"up",value:function(t){var e=this,n=t.find("[data-submenu]"),i=t.add(n);n.slideUp(0),i.removeClass("is-active").attr("aria-hidden",!0),this.options.submenuToggle?i.prev(".submenu-toggle").attr("aria-expanded",!1):i.parent(".is-accordion-submenu-parent").attr("aria-expanded",!1),t.slideUp(this.options.slideSpeed,function(){e.$element.trigger("up.zf.accordionMenu",[t])})}},{key:"_destroy",value:function(){this.$element.find("[data-submenu]").slideDown(0).css("display",""),this.$element.find("a").off("click.zf.accordionMenu"),this.$element.find("[data-is-parent-link]").detach(),this.options.submenuToggle&&(this.$element.find(".has-submenu-toggle").removeClass("has-submenu-toggle"),this.$element.find(".submenu-toggle").remove()),o.Nest.Burn(this.$element,"accordion")}}]),n}();h.defaults={parentLink:!1,slideSpeed:250,submenuToggle:!1,submenuToggleText:"Toggle menu",multiOpen:!0}},"./js/foundation.core.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Foundation",function(){return l});var i=n("jquery"),s=n.n(i),o=n("./js/foundation.core.utils.js"),r=n("./js/foundation.util.mediaQuery.js");function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var l={version:"6.5.1",_plugins:{},_uuids:[],plugin:function(t,e){var n=e||u(t),i=c(n);this._plugins[i]=this[n]=t},registerPlugin:function(t,e){var n=e?c(e):u(t.constructor).toLowerCase();t.uuid=Object(o.GetYoDigits)(6,n),t.$element.attr("data-".concat(n))||t.$element.attr("data-".concat(n),t.uuid),t.$element.data("zfPlugin")||t.$element.data("zfPlugin",t),t.$element.trigger("init.zf.".concat(n)),this._uuids.push(t.uuid)},unregisterPlugin:function(t){var e=c(u(t.$element.data("zfPlugin").constructor));for(var n in this._uuids.splice(this._uuids.indexOf(t.uuid),1),t.$element.removeAttr("data-".concat(e)).removeData("zfPlugin").trigger("destroyed.zf.".concat(e)),t)t[n]=null},reInit:function(t){var e=t instanceof s.a;try{if(e)t.each(function(){s()(this).data("zfPlugin")._init()});else{var n=a(t),i=this;({object:function(t){t.forEach(function(t){t=c(t),s()("[data-"+t+"]").foundation("_init")})},string:function(){t=c(t),s()("[data-"+t+"]").foundation("_init")},undefined:function(){this.object(Object.keys(i._plugins))}})[n](t)}}catch(t){console.error(t)}finally{return t}},reflow:function(i,t){void 0===t?t=Object.keys(this._plugins):"string"==typeof t&&(t=[t]);var o=this;s.a.each(t,function(t,e){var n=o._plugins[e];s()(i).find("[data-"+e+"]").addBack("[data-"+e+"]").each(function(){var t=s()(this),o={};if(t.data("zfPlugin"))console.warn("Tried to initialize "+e+" on an element that already has a Foundation plugin.");else{t.attr("data-options")&&t.attr("data-options").split(";").forEach(function(t,e){var n,i=t.split(":").map(function(t){return t.trim()});i[0]&&(o[i[0]]="true"===(n=i[1])||"false"!==n&&(isNaN(1*n)?n:parseFloat(n)))});try{t.data("zfPlugin",new n(s()(this),o))}catch(t){console.error(t)}finally{return}}})})},getFnName:u,addToJquery:function(s){return s.fn.foundation=function(n){var t=a(n),e=s(".no-js");if(e.length&&e.removeClass("no-js"),"undefined"===t)r.MediaQuery._init(),l.reflow(this);else{if("string"!==t)throw new TypeError("We're sorry, ".concat(t," is not a valid parameter. You must use a string representing the method you wish to invoke."));var i=Array.prototype.slice.call(arguments,1),o=this.data("zfPlugin");if(void 0===o||void 0===o[n])throw new ReferenceError("We're sorry, '"+n+"' is not an available method for "+(o?u(o):"this element")+".");1===this.length?o[n].apply(o,i):this.each(function(t,e){o[n].apply(s(e).data("zfPlugin"),i)})}return this},s}};function u(t){if(void 0!==Function.prototype.name)return void 0===t.prototype?t.constructor.name:t.prototype.constructor.name;var e=/function\s([^(]{1,})\(/.exec(t.toString());return e&&1<e.length?e[1].trim():""}function c(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}l.util={throttle:function(n,i){var o=null;return function(){var t=this,e=arguments;null===o&&(o=setTimeout(function(){n.apply(t,e),o=null},i))}}},window.Foundation=l,function(){Date.now&&window.Date.now||(window.Date.now=Date.now=function(){return(new Date).getTime()});for(var t=["webkit","moz"],e=0;e<t.length&&!window.requestAnimationFrame;++e){var n=t[e];window.requestAnimationFrame=window[n+"RequestAnimationFrame"],window.cancelAnimationFrame=window[n+"CancelAnimationFrame"]||window[n+"CancelRequestAnimationFrame"]}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var i=0;window.requestAnimationFrame=function(t){var e=Date.now(),n=Math.max(i+16,e);return setTimeout(function(){t(i=n)},n-e)},window.cancelAnimationFrame=clearTimeout}window.performance&&window.performance.now||(window.performance={start:Date.now(),now:function(){return Date.now()-this.start}})}(),Function.prototype.bind||(Function.prototype.bind=function(t){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var e=Array.prototype.slice.call(arguments,1),n=this,i=function(){},o=function(){return n.apply(this instanceof i?this:t,e.concat(Array.prototype.slice.call(arguments)))};return this.prototype&&(i.prototype=this.prototype),o.prototype=new i,o})},"./js/foundation.core.plugin.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Plugin",function(){return i}),n("jquery");var o=n("./js/foundation.core.utils.js");function s(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var i=function(){function i(t,e){!function(t,e){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}(this),this._setup(t,e);var n=a(this);this.uuid=Object(o.GetYoDigits)(6,n),this.$element.attr("data-".concat(n))||this.$element.attr("data-".concat(n),this.uuid),this.$element.data("zfPlugin")||this.$element.data("zfPlugin",this),this.$element.trigger("init.zf.".concat(n))}return s(i.prototype,[{key:"destroy",value:function(){this._destroy();var t=a(this);for(var e in this.$element.removeAttr("data-".concat(t)).removeData("zfPlugin").trigger("destroyed.zf.".concat(t)),this)this[e]=null}}]),i}();function r(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function a(t){return void 0!==t.constructor.name?r(t.constructor.name):r(t.className)}},"./js/foundation.core.utils.js":function(t,e,n){"use strict";n.r(e),n.d(e,"rtl",function(){return o}),n.d(e,"GetYoDigits",function(){return s}),n.d(e,"RegExpEscape",function(){return r}),n.d(e,"transitionend",function(){return a}),n.d(e,"onLoad",function(){return u}),n.d(e,"ignoreMousedisappear",function(){return c});var i=n("jquery"),l=n.n(i);function o(){return"rtl"===l()("html").attr("dir")}function s(t,e){return t=t||6,Math.round(Math.pow(36,t+1)-Math.random()*Math.pow(36,t)).toString(36).slice(1)+(e?"-".concat(e):"")}function r(t){return t.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}function a(t){var e,n={transition:"transitionend",WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"otransitionend"},i=document.createElement("div");for(var o in n)void 0!==i.style[o]&&(e=n[o]);return e||(e=setTimeout(function(){t.triggerHandler("transitionend",[t])},1),"transitionend")}function u(t,e){var n="complete"===document.readyState,i=(n?"_didLoad":"load")+".zf.util.onLoad",o=function(){return t.triggerHandler(i)};return t&&(e&&t.one(i,e),n?setTimeout(o):l()(window).one("load",o)),i}function c(s){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=t.ignoreLeaveWindow,r=void 0!==e&&e,n=t.ignoreReappear,a=void 0!==n&&n;return function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];var o=s.bind.apply(s,[this,e].concat(n));if(null!==e.relatedTarget)return o();setTimeout(function(){if(!r&&document.hasFocus&&!document.hasFocus())return o();a||l()(document).one("mouseenter",function(t){l()(e.currentTarget).has(t.target).length||(e.relatedTarget=t.target,o())})},0)}}},"./js/foundation.drilldown.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Drilldown",function(){return p});var i=n("jquery"),r=n.n(i),a=n("./js/foundation.util.keyboard.js"),o=n("./js/foundation.util.nest.js"),l=n("./js/foundation.core.utils.js"),s=n("./js/foundation.util.box.js"),u=n("./js/foundation.core.plugin.js");function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function f(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=d(n).apply(this,arguments))||"object"!==c(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(n,u.Plugin),f(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=r.a.extend({},n.defaults,this.$element.data(),e),this.className="Drilldown",this._init(),a.Keyboard.register("Drilldown",{ENTER:"open",SPACE:"open",ARROW_RIGHT:"next",ARROW_UP:"up",ARROW_DOWN:"down",ARROW_LEFT:"previous",ESCAPE:"close",TAB:"down",SHIFT_TAB:"up"})}},{key:"_init",value:function(){o.Nest.Feather(this.$element,"drilldown"),this.options.autoApplyClass&&this.$element.addClass("drilldown"),this.$element.attr({role:"tree","aria-multiselectable":!1}),this.$submenuAnchors=this.$element.find("li.is-drilldown-submenu-parent").children("a"),this.$submenus=this.$submenuAnchors.parent("li").children("[data-submenu]").attr("role","group"),this.$menuItems=this.$element.find("li").not(".js-drilldown-back").attr("role","treeitem").find("a"),this.$currentMenu=this.$element,this.$element.attr("data-mutate",this.$element.attr("data-drilldown")||Object(l.GetYoDigits)(6,"drilldown")),this._prepareMenu(),this._registerEvents(),this._keyboardEvents()}},{key:"_prepareMenu",value:function(){var n=this;this.$submenuAnchors.each(function(){var t=r()(this),e=t.parent();n.options.parentLink&&t.clone().prependTo(e.children("[data-submenu]")).wrap('<li data-is-parent-link class="is-submenu-parent-item is-submenu-item is-drilldown-submenu-item" role="menuitem"></li>'),t.data("savedHref",t.attr("href")).removeAttr("href").attr("tabindex",0),t.children("[data-submenu]").attr({"aria-hidden":!0,tabindex:0,role:"group"}),n._events(t)}),this.$submenus.each(function(){var t=r()(this);if(!t.find(".js-drilldown-back").length)switch(n.options.backButtonPosition){case"bottom":t.append(n.options.backButton);break;case"top":t.prepend(n.options.backButton);break;default:console.error("Unsupported backButtonPosition value '"+n.options.backButtonPosition+"'")}n._back(t)}),this.$submenus.addClass("invisible"),this.options.autoHeight||this.$submenus.addClass("drilldown-submenu-cover-previous"),this.$element.parent().hasClass("is-drilldown")||(this.$wrapper=r()(this.options.wrapper).addClass("is-drilldown"),this.options.animateHeight&&this.$wrapper.addClass("animate-height"),this.$element.wrap(this.$wrapper)),this.$wrapper=this.$element.parent(),this.$wrapper.css(this._getMaxDims())}},{key:"_resize",value:function(){this.$wrapper.css({"max-width":"none","min-height":"none"}),this.$wrapper.css(this._getMaxDims())}},{key:"_events",value:function(n){var i=this;n.off("click.zf.drilldown").on("click.zf.drilldown",function(t){if(r()(t.target).parentsUntil("ul","li").hasClass("is-drilldown-submenu-parent")&&(t.stopImmediatePropagation(),t.preventDefault()),i._show(n.parent("li")),i.options.closeOnClick){var e=r()("body");e.off(".zf.drilldown").on("click.zf.drilldown",function(t){t.target===i.$element[0]||r.a.contains(i.$element[0],t.target)||(t.preventDefault(),i._hideAll(),e.off(".zf.drilldown"))})}})}},{key:"_registerEvents",value:function(){this.options.scrollTop&&(this._bindHandler=this._scrollTop.bind(this),this.$element.on("open.zf.drilldown hide.zf.drilldown closed.zf.drilldown",this._bindHandler)),this.$element.on("mutateme.zf.trigger",this._resize.bind(this))}},{key:"_scrollTop",value:function(){var t=this,e=""!=t.options.scrollTopElement?r()(t.options.scrollTopElement):t.$element,n=parseInt(e.offset().top+t.options.scrollTopOffset,10);r()("html, body").stop(!0).animate({scrollTop:n},t.options.animationDuration,t.options.animationEasing,function(){this===r()("html")[0]&&t.$element.trigger("scrollme.zf.drilldown")})}},{key:"_keyboardEvents",value:function(){var t=this;this.$menuItems.add(this.$element.find(".js-drilldown-back > a, .is-submenu-parent-item > a")).on("keydown.zf.drilldown",function(e){var n,i,o=r()(this),s=o.parent("li").parent("ul").children("li").children("a");s.each(function(t){if(r()(this).is(o))return n=s.eq(Math.max(0,t-1)),void(i=s.eq(Math.min(t+1,s.length-1)))}),a.Keyboard.handleKey(e,"Drilldown",{next:function(){if(o.is(t.$submenuAnchors))return t._show(o.parent("li")),o.parent("li").one(Object(l.transitionend)(o),function(){o.parent("li").find("ul li a").not(".js-drilldown-back a").first().focus()}),!0},previous:function(){return t._hide(o.parent("li").parent("ul")),o.parent("li").parent("ul").one(Object(l.transitionend)(o),function(){setTimeout(function(){o.parent("li").parent("ul").parent("li").children("a").first().focus()},1)}),!0},up:function(){return n.focus(),!o.is(t.$element.find("> li:first-child > a"))},down:function(){return i.focus(),!o.is(t.$element.find("> li:last-child > a"))},close:function(){o.is(t.$element.find("> li > a"))||(t._hide(o.parent().parent()),o.parent().parent().siblings("a").focus())},open:function(){return(!t.options.parentLink||!o.attr("href"))&&(o.is(t.$menuItems)?o.is(t.$submenuAnchors)?(t._show(o.parent("li")),o.parent("li").one(Object(l.transitionend)(o),function(){o.parent("li").find("ul li a").not(".js-drilldown-back a").first().focus()}),!0):void 0:(t._hide(o.parent("li").parent("ul")),o.parent("li").parent("ul").one(Object(l.transitionend)(o),function(){setTimeout(function(){o.parent("li").parent("ul").parent("li").children("a").first().focus()},1)}),!0))},handled:function(t){t&&e.preventDefault(),e.stopImmediatePropagation()}})})}},{key:"_hideAll",value:function(){var e=this.$element.find(".is-drilldown-submenu.is-active").addClass("is-closing");this.options.autoHeight&&this.$wrapper.css({height:e.parent().closest("ul").data("calcHeight")}),e.one(Object(l.transitionend)(e),function(t){e.removeClass("is-active is-closing")}),this.$element.trigger("closed.zf.drilldown")}},{key:"_back",value:function(n){var i=this;n.off("click.zf.drilldown"),n.children(".js-drilldown-back").on("click.zf.drilldown",function(t){t.stopImmediatePropagation(),i._hide(n);var e=n.parent("li").parent("ul").parent("li");e.length&&i._show(e)})}},{key:"_menuLinkEvents",value:function(){var e=this;this.$menuItems.not(".is-drilldown-submenu-parent").off("click.zf.drilldown").on("click.zf.drilldown",function(t){setTimeout(function(){e._hideAll()},0)})}},{key:"_setShowSubMenuClasses",value:function(t,e){t.addClass("is-active").removeClass("invisible").attr("aria-hidden",!1),t.parent("li").attr("aria-expanded",!0),!0===e&&this.$element.trigger("open.zf.drilldown",[t])}},{key:"_setHideSubMenuClasses",value:function(t,e){t.removeClass("is-active").addClass("invisible").attr("aria-hidden",!0),t.parent("li").attr("aria-expanded",!1),!0===e&&t.trigger("hide.zf.drilldown",[t])}},{key:"_showMenu",value:function(n,i){var o=this;if(this.$element.find('li[aria-expanded="true"] > ul[data-submenu]').each(function(t){o._setHideSubMenuClasses(r()(this))}),(this.$currentMenu=n).is("[data-drilldown]"))return!0===i&&n.find('li[role="treeitem"] > a').first().focus(),void(this.options.autoHeight&&this.$wrapper.css("height",n.data("calcHeight")));var s=n.children().first().parentsUntil("[data-drilldown]","[data-submenu]");s.each(function(t){0===t&&o.options.autoHeight&&o.$wrapper.css("height",r()(this).data("calcHeight"));var e=t==s.length-1;!0===e&&r()(this).one(Object(l.transitionend)(r()(this)),function(){!0===i&&n.find('li[role="treeitem"] > a').first().focus()}),o._setShowSubMenuClasses(r()(this),e)})}},{key:"_show",value:function(t){var e=t.children("[data-submenu]");t.attr("aria-expanded",!0),(this.$currentMenu=e).addClass("is-active").removeClass("invisible").attr("aria-hidden",!1),this.options.autoHeight&&this.$wrapper.css({height:e.data("calcHeight")}),this.$element.trigger("open.zf.drilldown",[t])}},{key:"_hide",value:function(t){this.options.autoHeight&&this.$wrapper.css({height:t.parent().closest("ul").data("calcHeight")}),t.parent("li").attr("aria-expanded",!1),t.attr("aria-hidden",!0),t.addClass("is-closing").one(Object(l.transitionend)(t),function(){t.removeClass("is-active is-closing"),t.blur().addClass("invisible")}),t.trigger("hide.zf.drilldown",[t])}},{key:"_getMaxDims",value:function(){var e=0,t={},n=this;return this.$submenus.add(this.$element).each(function(){r()(this).children("li").length;var t=s.Box.GetDimensions(this).height;e=e<t?t:e,n.options.autoHeight&&r()(this).data("calcHeight",t)}),this.options.autoHeight?t.height=this.$currentMenu.data("calcHeight"):t["min-height"]="".concat(e,"px"),t["max-width"]="".concat(this.$element[0].getBoundingClientRect().width,"px"),t}},{key:"_destroy",value:function(){this.options.scrollTop&&this.$element.off(".zf.drilldown",this._bindHandler),this._hideAll(),this.$element.off("mutateme.zf.trigger"),o.Nest.Burn(this.$element,"drilldown"),this.$element.unwrap().find(".js-drilldown-back, .is-submenu-parent-item").remove().end().find(".is-active, .is-closing, .is-drilldown-submenu").removeClass("is-active is-closing is-drilldown-submenu").end().find("[data-submenu]").removeAttr("aria-hidden tabindex role"),this.$submenuAnchors.each(function(){r()(this).off(".zf.drilldown")}),this.$element.find("[data-is-parent-link]").detach(),this.$submenus.removeClass("drilldown-submenu-cover-previous invisible"),this.$element.find("a").each(function(){var t=r()(this);t.removeAttr("tabindex"),t.data("savedHref")&&t.attr("href",t.data("savedHref")).removeData("savedHref")})}}]),n}();p.defaults={autoApplyClass:!0,backButton:'<li class="js-drilldown-back"><a tabindex="0">Back</a></li>',backButtonPosition:"top",wrapper:"<div></div>",parentLink:!1,closeOnClick:!1,autoHeight:!1,animateHeight:!1,scrollTop:!1,scrollTopElement:"",scrollTopOffset:0,animationDuration:500,animationEasing:"swing"}},"./js/foundation.dropdown.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Dropdown",function(){return p});var i=n("jquery"),o=n.n(i),s=n("./js/foundation.util.keyboard.js"),r=n("./js/foundation.core.utils.js"),a=n("./js/foundation.positionable.js"),l=n("./js/foundation.util.triggers.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t,e,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=d(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(n,a.Positionable),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=o.a.extend({},n.defaults,this.$element.data(),e),this.className="Dropdown",l.Triggers.init(o.a),this._init(),s.Keyboard.register("Dropdown",{ENTER:"toggle",SPACE:"toggle",ESCAPE:"close"})}},{key:"_init",value:function(){var t=this.$element.attr("id");this.$anchors=o()('[data-toggle="'.concat(t,'"]')).length?o()('[data-toggle="'.concat(t,'"]')):o()('[data-open="'.concat(t,'"]')),this.$anchors.attr({"aria-controls":t,"data-is-focus":!1,"data-yeti-box":t,"aria-haspopup":!0,"aria-expanded":!1}),this._setCurrentAnchor(this.$anchors.first()),this.options.parentClass?this.$parent=this.$element.parents("."+this.options.parentClass):this.$parent=null,void 0===this.$element.attr("aria-labelledby")&&(void 0===this.$currentAnchor.attr("id")&&this.$currentAnchor.attr("id",Object(r.GetYoDigits)(6,"dd-anchor")),this.$element.attr("aria-labelledby",this.$currentAnchor.attr("id"))),this.$element.attr({"aria-hidden":"true","data-yeti-box":t,"data-resize":t}),f(d(n.prototype),"_init",this).call(this),this._events()}},{key:"_getDefaultPosition",value:function(){var t=this.$element[0].className.match(/(top|left|right|bottom)/g);return t?t[0]:"bottom"}},{key:"_getDefaultAlignment",value:function(){var t=/float-(\S+)/.exec(this.$currentAnchor.attr("class"));return t?t[1]:f(d(n.prototype),"_getDefaultAlignment",this).call(this)}},{key:"_setPosition",value:function(){this.$element.removeClass("has-position-".concat(this.position," has-alignment-").concat(this.alignment)),f(d(n.prototype),"_setPosition",this).call(this,this.$currentAnchor,this.$element,this.$parent),this.$element.addClass("has-position-".concat(this.position," has-alignment-").concat(this.alignment))}},{key:"_setCurrentAnchor",value:function(t){this.$currentAnchor=o()(t)}},{key:"_events",value:function(){var n=this;this.$element.on({"open.zf.trigger":this.open.bind(this),"close.zf.trigger":this.close.bind(this),"toggle.zf.trigger":this.toggle.bind(this),"resizeme.zf.trigger":this._setPosition.bind(this)}),this.$anchors.off("click.zf.trigger").on("click.zf.trigger",function(){n._setCurrentAnchor(this)}),this.options.hover&&(this.$anchors.off("mouseenter.zf.dropdown mouseleave.zf.dropdown").on("mouseenter.zf.dropdown",function(){n._setCurrentAnchor(this);var t=o()("body").data();void 0!==t.whatinput&&"mouse"!==t.whatinput||(clearTimeout(n.timeout),n.timeout=setTimeout(function(){n.open(),n.$anchors.data("hover",!0)},n.options.hoverDelay))}).on("mouseleave.zf.dropdown",Object(r.ignoreMousedisappear)(function(){clearTimeout(n.timeout),n.timeout=setTimeout(function(){n.close(),n.$anchors.data("hover",!1)},n.options.hoverDelay)})),this.options.hoverPane&&this.$element.off("mouseenter.zf.dropdown mouseleave.zf.dropdown").on("mouseenter.zf.dropdown",function(){clearTimeout(n.timeout)}).on("mouseleave.zf.dropdown",Object(r.ignoreMousedisappear)(function(){clearTimeout(n.timeout),n.timeout=setTimeout(function(){n.close(),n.$anchors.data("hover",!1)},n.options.hoverDelay)}))),this.$anchors.add(this.$element).on("keydown.zf.dropdown",function(t){var e=o()(this);s.Keyboard.findFocusable(n.$element),s.Keyboard.handleKey(t,"Dropdown",{open:function(){e.is(n.$anchors)&&!e.is("input, textarea")&&(n.open(),n.$element.attr("tabindex",-1).focus(),t.preventDefault())},close:function(){n.close(),n.$anchors.focus()}})})}},{key:"_addBodyHandler",value:function(){var e=o()(document.body).not(this.$element),n=this;e.off("click.zf.dropdown").on("click.zf.dropdown",function(t){n.$anchors.is(t.target)||n.$anchors.find(t.target).length||n.$element.is(t.target)||n.$element.find(t.target).length||(n.close(),e.off("click.zf.dropdown"))})}},{key:"open",value:function(){if(this.$element.trigger("closeme.zf.dropdown",this.$element.attr("id")),this.$anchors.addClass("hover").attr({"aria-expanded":!0}),this.$element.addClass("is-opening"),this._setPosition(),this.$element.removeClass("is-opening").addClass("is-open").attr({"aria-hidden":!1}),this.options.autoFocus){var t=s.Keyboard.findFocusable(this.$element);t.length&&t.eq(0).focus()}this.options.closeOnClick&&this._addBodyHandler(),this.options.trapFocus&&s.Keyboard.trapFocus(this.$element),this.$element.trigger("show.zf.dropdown",[this.$element])}},{key:"close",value:function(){if(!this.$element.hasClass("is-open"))return!1;this.$element.removeClass("is-open").attr({"aria-hidden":!0}),this.$anchors.removeClass("hover").attr("aria-expanded",!1),this.$element.trigger("hide.zf.dropdown",[this.$element]),this.options.trapFocus&&s.Keyboard.releaseFocus(this.$element)}},{key:"toggle",value:function(){if(this.$element.hasClass("is-open")){if(this.$anchors.data("hover"))return;this.close()}else this.open()}},{key:"_destroy",value:function(){this.$element.off(".zf.trigger").hide(),this.$anchors.off(".zf.dropdown"),o()(document.body).off("click.zf.dropdown")}}]),n}();p.defaults={parentClass:null,hoverDelay:250,hover:!1,hoverPane:!1,vOffset:0,hOffset:0,position:"auto",alignment:"auto",allowOverlap:!1,allowBottomOverlap:!0,trapFocus:!1,autoFocus:!1,closeOnClick:!1}},"./js/foundation.dropdownMenu.js":function(t,e,n){"use strict";n.r(e),n.d(e,"DropdownMenu",function(){return p});var i=n("jquery"),d=n.n(i),o=n("./js/foundation.core.plugin.js"),a=n("./js/foundation.core.utils.js"),h=n("./js/foundation.util.keyboard.js"),s=n("./js/foundation.util.nest.js"),r=n("./js/foundation.util.box.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(n).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(n,o.Plugin),u(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=d.a.extend({},n.defaults,this.$element.data(),e),this.className="DropdownMenu",this._init(),h.Keyboard.register("DropdownMenu",{ENTER:"open",SPACE:"open",ARROW_RIGHT:"next",ARROW_UP:"up",ARROW_DOWN:"down",ARROW_LEFT:"previous",ESCAPE:"close"})}},{key:"_init",value:function(){s.Nest.Feather(this.$element,"dropdown");var t=this.$element.find("li.is-dropdown-submenu-parent");this.$element.children(".is-dropdown-submenu-parent").children(".is-dropdown-submenu").addClass("first-sub"),this.$menuItems=this.$element.find('[role="menuitem"]'),this.$tabs=this.$element.children('[role="menuitem"]'),this.$tabs.find("ul.is-dropdown-submenu").addClass(this.options.verticalClass),"auto"===this.options.alignment?this.$element.hasClass(this.options.rightClass)||Object(a.rtl)()||this.$element.parents(".top-bar-right").is("*")?(this.options.alignment="right",t.addClass("opens-left")):(this.options.alignment="left",t.addClass("opens-right")):"right"===this.options.alignment?t.addClass("opens-left"):t.addClass("opens-right"),this.changed=!1,this._events()}},{key:"_isVertical",value:function(){return"block"===this.$tabs.css("display")||"column"===this.$element.css("flex-direction")}},{key:"_isRtl",value:function(){return this.$element.hasClass("align-right")||Object(a.rtl)()&&!this.$element.hasClass("align-left")}},{key:"_events",value:function(){var f=this,s="ontouchstart"in window||void 0!==window.ontouchstart,r="is-dropdown-submenu-parent";(this.options.clickOpen||s)&&this.$menuItems.on("click.zf.dropdownmenu touchstart.zf.dropdownmenu",function(t){var e=d()(t.target).parentsUntil("ul",".".concat(r)),n=e.hasClass(r),i="true"===e.attr("data-is-click"),o=e.children(".is-dropdown-submenu");if(n)if(i){if(!f.options.closeOnClick||!f.options.clickOpen&&!s||f.options.forceFollow&&s)return;t.stopImmediatePropagation(),t.preventDefault(),f._hide(e)}else t.preventDefault(),t.stopImmediatePropagation(),f._show(o),e.add(e.parentsUntil(f.$element,".".concat(r))).attr("data-is-click",!0)}),f.options.closeOnClickInside&&this.$menuItems.on("click.zf.dropdownmenu",function(t){d()(this).hasClass(r)||f._hide()}),this.options.disableHover||this.$menuItems.on("mouseenter.zf.dropdownmenu",function(t){var e=d()(this);e.hasClass(r)&&(clearTimeout(e.data("_delay")),e.data("_delay",setTimeout(function(){f._show(e.children(".is-dropdown-submenu"))},f.options.hoverDelay)))}).on("mouseleave.zf.dropdownMenu",Object(a.ignoreMousedisappear)(function(t){var e=d()(this);if(e.hasClass(r)&&f.options.autoclose){if("true"===e.attr("data-is-click")&&f.options.clickOpen)return!1;clearTimeout(e.data("_delay")),e.data("_delay",setTimeout(function(){f._hide(e)},f.options.closingTime))}})),this.$menuItems.on("keydown.zf.dropdownmenu",function(e){var n,i,o=d()(e.target).parentsUntil("ul",'[role="menuitem"]'),t=-1<f.$tabs.index(o),s=t?f.$tabs:o.siblings("li").add(o);s.each(function(t){if(d()(this).is(o))return n=s.eq(t-1),void(i=s.eq(t+1))});var r=function(){i.children("a:first").focus(),e.preventDefault()},a=function(){n.children("a:first").focus(),e.preventDefault()},l=function(){var t=o.children("ul.is-dropdown-submenu");t.length&&(f._show(t),o.find("li > a:first").focus(),e.preventDefault())},u=function(){var t=o.parent("ul").parent("li");t.children("a:first").focus(),f._hide(t),e.preventDefault()},c={open:l,close:function(){f._hide(f.$element),f.$menuItems.eq(0).children("a").focus(),e.preventDefault()},handled:function(){e.stopImmediatePropagation()}};t?f._isVertical()?f._isRtl()?d.a.extend(c,{down:r,up:a,next:u,previous:l}):d.a.extend(c,{down:r,up:a,next:l,previous:u}):f._isRtl()?d.a.extend(c,{next:a,previous:r,down:l,up:u}):d.a.extend(c,{next:r,previous:a,down:l,up:u}):f._isRtl()?d.a.extend(c,{next:u,previous:l,down:r,up:a}):d.a.extend(c,{next:l,previous:u,down:r,up:a}),h.Keyboard.handleKey(e,"DropdownMenu",c)})}},{key:"_addBodyHandler",value:function(){var e=d()(document.body),n=this;e.off("mouseup.zf.dropdownmenu touchend.zf.dropdownmenu").on("mouseup.zf.dropdownmenu touchend.zf.dropdownmenu",function(t){n.$element.find(t.target).length||(n._hide(),e.off("mouseup.zf.dropdownmenu touchend.zf.dropdownmenu"))})}},{key:"_show",value:function(n){var t=this.$tabs.index(this.$tabs.filter(function(t,e){return 0<d()(e).find(n).length})),e=n.parent("li.is-dropdown-submenu-parent").siblings("li.is-dropdown-submenu-parent");this._hide(e,t),n.css("visibility","hidden").addClass("js-dropdown-active").parent("li.is-dropdown-submenu-parent").addClass("is-active");var i=r.Box.ImNotTouchingYou(n,null,!0);if(!i){var o="left"===this.options.alignment?"-right":"-left",s=n.parent(".is-dropdown-submenu-parent");s.removeClass("opens".concat(o)).addClass("opens-".concat(this.options.alignment)),(i=r.Box.ImNotTouchingYou(n,null,!0))||s.removeClass("opens-".concat(this.options.alignment)).addClass("opens-inner"),this.changed=!0}n.css("visibility",""),this.options.closeOnClick&&this._addBodyHandler(),this.$element.trigger("show.zf.dropdownmenu",[n])}},{key:"_hide",value:function(t,n){var e;if((e=t&&t.length?t:void 0!==n?this.$tabs.not(function(t,e){return t===n}):this.$element).hasClass("is-active")||0<e.find(".is-active").length){if(e.find("li.is-active").add(e).attr({"data-is-click":!1}).removeClass("is-active"),e.find("ul.js-dropdown-active").removeClass("js-dropdown-active"),this.changed||e.find("opens-inner").length){var i="left"===this.options.alignment?"right":"left";e.find("li.is-dropdown-submenu-parent").add(e).removeClass("opens-inner opens-".concat(this.options.alignment)).addClass("opens-".concat(i)),this.changed=!1}this.$element.trigger("hide.zf.dropdownmenu",[e])}}},{key:"_destroy",value:function(){this.$menuItems.off(".zf.dropdownmenu").removeAttr("data-is-click").removeClass("is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner"),d()(document.body).off(".zf.dropdownmenu"),s.Nest.Burn(this.$element,"dropdown")}}]),n}();p.defaults={disableHover:!1,autoclose:!0,hoverDelay:50,clickOpen:!1,closingTime:500,alignment:"auto",closeOnClick:!0,closeOnClickInside:!0,verticalClass:"vertical",rightClass:"align-right",forceFollow:!0}},"./js/foundation.equalizer.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Equalizer",function(){return h});var i=n("jquery"),f=n.n(i),o=n("./js/foundation.util.mediaQuery.js"),s=n("./js/foundation.util.imageLoader.js"),r=n("./js/foundation.core.utils.js"),a=n("./js/foundation.core.plugin.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(n).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,a.Plugin),u(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=f.a.extend({},n.defaults,this.$element.data(),e),this.className="Equalizer",this._init()}},{key:"_init",value:function(){var t=this.$element.attr("data-equalizer")||"",e=this.$element.find('[data-equalizer-watch="'.concat(t,'"]'));o.MediaQuery._init(),this.$watched=e.length?e:this.$element.find("[data-equalizer-watch]"),this.$element.attr("data-resize",t||Object(r.GetYoDigits)(6,"eq")),this.$element.attr("data-mutate",t||Object(r.GetYoDigits)(6,"eq")),this.hasNested=0<this.$element.find("[data-equalizer]").length,this.isNested=0<this.$element.parentsUntil(document.body,"[data-equalizer]").length,this.isOn=!1,this._bindHandler={onResizeMeBound:this._onResizeMe.bind(this),onPostEqualizedBound:this._onPostEqualized.bind(this)};var n,i=this.$element.find("img");this.options.equalizeOn?(n=this._checkMQ(),f()(window).on("changed.zf.mediaquery",this._checkMQ.bind(this))):this._events(),(void 0!==n&&!1===n||void 0===n)&&(i.length?Object(s.onImagesLoaded)(i,this._reflow.bind(this)):this._reflow())}},{key:"_pauseEvents",value:function(){this.isOn=!1,this.$element.off({".zf.equalizer":this._bindHandler.onPostEqualizedBound,"resizeme.zf.trigger":this._bindHandler.onResizeMeBound,"mutateme.zf.trigger":this._bindHandler.onResizeMeBound})}},{key:"_onResizeMe",value:function(t){this._reflow()}},{key:"_onPostEqualized",value:function(t){t.target!==this.$element[0]&&this._reflow()}},{key:"_events",value:function(){this._pauseEvents(),this.hasNested?this.$element.on("postequalized.zf.equalizer",this._bindHandler.onPostEqualizedBound):(this.$element.on("resizeme.zf.trigger",this._bindHandler.onResizeMeBound),this.$element.on("mutateme.zf.trigger",this._bindHandler.onResizeMeBound)),this.isOn=!0}},{key:"_checkMQ",value:function(){var t=!o.MediaQuery.is(this.options.equalizeOn);return t?this.isOn&&(this._pauseEvents(),this.$watched.css("height","auto")):this.isOn||this._events(),t}},{key:"_killswitch",value:function(){}},{key:"_reflow",value:function(){if(!this.options.equalizeOnStack&&this._isStacked())return this.$watched.css("height","auto"),!1;this.options.equalizeByRow?this.getHeightsByRow(this.applyHeightByRow.bind(this)):this.getHeights(this.applyHeight.bind(this))}},{key:"_isStacked",value:function(){return!this.$watched[0]||!this.$watched[1]||this.$watched[0].getBoundingClientRect().top!==this.$watched[1].getBoundingClientRect().top}},{key:"getHeights",value:function(t){for(var e=[],n=0,i=this.$watched.length;n<i;n++)this.$watched[n].style.height="auto",e.push(this.$watched[n].offsetHeight);t(e)}},{key:"getHeightsByRow",value:function(t){var e=this.$watched.length?this.$watched.first().offset().top:0,n=[],i=0;n[i]=[];for(var o=0,s=this.$watched.length;o<s;o++){this.$watched[o].style.height="auto";var r=f()(this.$watched[o]).offset().top;r!=e&&(n[++i]=[],e=r),n[i].push([this.$watched[o],this.$watched[o].offsetHeight])}for(var a=0,l=n.length;a<l;a++){var u=f()(n[a]).map(function(){return this[1]}).get(),c=Math.max.apply(null,u);n[a].push(c)}t(n)}},{key:"applyHeight",value:function(t){var e=Math.max.apply(null,t);this.$element.trigger("preequalized.zf.equalizer"),this.$watched.css("height",e),this.$element.trigger("postequalized.zf.equalizer")}},{key:"applyHeightByRow",value:function(t){this.$element.trigger("preequalized.zf.equalizer");for(var e=0,n=t.length;e<n;e++){var i=t[e].length,o=t[e][i-1];if(i<=2)f()(t[e][0][0]).css({height:"auto"});else{this.$element.trigger("preequalizedrow.zf.equalizer");for(var s=0,r=i-1;s<r;s++)f()(t[e][s][0]).css({height:o});this.$element.trigger("postequalizedrow.zf.equalizer")}}this.$element.trigger("postequalized.zf.equalizer")}},{key:"_destroy",value:function(){this._pauseEvents(),this.$watched.css("height","auto")}}]),n}();h.defaults={equalizeOnStack:!1,equalizeByRow:!1,equalizeOn:""}},"./js/foundation.interchange.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Interchange",function(){return a});var i=n("jquery"),o=n.n(i),s=n("./js/foundation.util.mediaQuery.js"),r=n("./js/foundation.core.plugin.js"),l=n("./js/foundation.core.utils.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var a=function(t){function a(){return function(t,e){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=f(a).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(a,r.Plugin),c(a.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=o.a.extend({},a.defaults,e),this.rules=[],this.currentPath="",this.className="Interchange",this._init(),this._events()}},{key:"_init",value:function(){s.MediaQuery._init();var t=this.$element[0].id||Object(l.GetYoDigits)(6,"interchange");this.$element.attr({"data-resize":t,id:t}),this._addBreakpoints(),this._generateRules(),this._reflow()}},{key:"_events",value:function(){var t=this;this.$element.off("resizeme.zf.trigger").on("resizeme.zf.trigger",function(){return t._reflow()})}},{key:"_reflow",value:function(){var t;for(var e in this.rules)if(this.rules.hasOwnProperty(e)){var n=this.rules[e];window.matchMedia(n.query).matches&&(t=n)}t&&this.replace(t.path)}},{key:"_addBreakpoints",value:function(){for(var t in s.MediaQuery.queries)if(s.MediaQuery.queries.hasOwnProperty(t)){var e=s.MediaQuery.queries[t];a.SPECIAL_QUERIES[e.name]=e.value}}},{key:"_generateRules",value:function(t){var e,n=[];for(var i in e="string"==typeof(e=this.options.rules?this.options.rules:this.$element.data("interchange"))?e.match(/\[.*?, .*?\]/g):e)if(e.hasOwnProperty(i)){var o=e[i].slice(1,-1).split(", "),s=o.slice(0,-1).join(""),r=o[o.length-1];a.SPECIAL_QUERIES[r]&&(r=a.SPECIAL_QUERIES[r]),n.push({path:s,query:r})}this.rules=n}},{key:"replace",value:function(e){if(this.currentPath!==e){var n=this,i="replaced.zf.interchange";"IMG"===this.$element[0].nodeName?this.$element.attr("src",e).on("load",function(){n.currentPath=e}).trigger(i):e.match(/\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)?(e=e.replace(/\(/g,"%28").replace(/\)/g,"%29"),this.$element.css({"background-image":"url("+e+")"}).trigger(i)):o.a.get(e,function(t){n.$element.html(t).trigger(i),o()(t).foundation(),n.currentPath=e})}}},{key:"_destroy",value:function(){this.$element.off("resizeme.zf.trigger")}}]),a}();a.defaults={rules:null},a.SPECIAL_QUERIES={landscape:"screen and (orientation: landscape)",portrait:"screen and (orientation: portrait)",retina:"only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)"}},"./js/foundation.magellan.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Magellan",function(){return d});var i=n("jquery"),c=n.n(i),o=n("./js/foundation.core.utils.js"),s=n("./js/foundation.core.plugin.js"),r=n("./js/foundation.smoothScroll.js");function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=u(n).apply(this,arguments))||"object"!==a(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(n,s.Plugin),l(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=c.a.extend({},n.defaults,this.$element.data(),e),this.className="Magellan",this._init(),this.calcPoints()}},{key:"_init",value:function(){var t=this.$element[0].id||Object(o.GetYoDigits)(6,"magellan");this.$targets=c()("[data-magellan-target]"),this.$links=this.$element.find("a"),this.$element.attr({"data-resize":t,"data-scroll":t,id:t}),this.$active=c()(),this.scrollPos=parseInt(window.pageYOffset,10),this._events()}},{key:"calcPoints",value:function(){var n=this,t=document.body,e=document.documentElement;this.points=[],this.winHeight=Math.round(Math.max(window.innerHeight,e.clientHeight)),this.docHeight=Math.round(Math.max(t.scrollHeight,t.offsetHeight,e.clientHeight,e.scrollHeight,e.offsetHeight)),this.$targets.each(function(){var t=c()(this),e=Math.round(t.offset().top-n.options.threshold);t.targetPoint=e,n.points.push(e)})}},{key:"_events",value:function(){var n=this;c()("html, body"),n.options.animationDuration,n.options.animationEasing,c()(window).one("load",function(){n.options.deepLinking&&location.hash&&n.scrollToLoc(location.hash),n.calcPoints(),n._updateActive()}),n.onLoadListener=Object(o.onLoad)(c()(window),function(){n.$element.on({"resizeme.zf.trigger":n.reflow.bind(n),"scrollme.zf.trigger":n._updateActive.bind(n)}).on("click.zf.magellan",'a[href^="#"]',function(t){t.preventDefault();var e=this.getAttribute("href");n.scrollToLoc(e)})}),this._deepLinkScroll=function(t){n.options.deepLinking&&n.scrollToLoc(window.location.hash)},c()(window).on("hashchange",this._deepLinkScroll)}},{key:"scrollToLoc",value:function(t){this._inTransition=!0;var e=this,n={animationEasing:this.options.animationEasing,animationDuration:this.options.animationDuration,threshold:this.options.threshold,offset:this.options.offset};r.SmoothScroll.scrollToLoc(t,n,function(){e._inTransition=!1})}},{key:"reflow",value:function(){this.calcPoints(),this._updateActive()}},{key:"_updateActive",value:function(){var n=this;if(!this._inTransition){var t,i=parseInt(window.pageYOffset,10),o=this.scrollPos>i;if((this.scrollPos=i)<this.points[0]);else if(i+this.winHeight===this.docHeight)t=this.points.length-1;else{var e=this.points.filter(function(t,e){return t-n.options.offset-(o?n.options.threshold:0)<=i});t=e.length?e.length-1:0}var s=this.$active,r="";void 0!==t?(this.$active=this.$links.filter('[href="#'+this.$targets.eq(t).data("magellan-target")+'"]'),this.$active.length&&(r=this.$active[0].getAttribute("href"))):this.$active=c()();var a=!(!this.$active.length&&!s.length||this.$active.is(s)),l=r!==window.location.hash;if(a&&(s.removeClass(this.options.activeClass),this.$active.addClass(this.options.activeClass)),this.options.deepLinking&&l)if(window.history.pushState){var u=r||window.location.pathname+window.location.search;window.history.pushState(null,null,u)}else window.location.hash=r;a&&this.$element.trigger("update.zf.magellan",[this.$active])}}},{key:"_destroy",value:function(){if(this.$element.off(".zf.trigger .zf.magellan").find(".".concat(this.options.activeClass)).removeClass(this.options.activeClass),this.options.deepLinking){var t=this.$active[0].getAttribute("href");window.location.hash.replace(t,"")}c()(window).off("hashchange",this._deepLinkScroll),this.onLoadListener&&c()(window).off(this.onLoadListener)}}]),n}();d.defaults={animationDuration:500,animationEasing:"linear",threshold:50,activeClass:"is-active",deepLinking:!1,offset:0}},"./js/foundation.offcanvas.js":function(t,e,n){"use strict";n.r(e),n.d(e,"OffCanvas",function(){return p});var i=n("jquery"),o=n.n(i),s=n("./js/foundation.core.utils.js"),r=n("./js/foundation.util.keyboard.js"),a=n("./js/foundation.util.mediaQuery.js"),l=n("./js/foundation.core.plugin.js"),u=n("./js/foundation.util.triggers.js");function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function f(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function i(){return function(t,e){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=d(i).apply(this,arguments))||"object"!==c(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(i,l.Plugin),f(i.prototype,[{key:"_setup",value:function(t,e){var n=this;this.className="OffCanvas",this.$element=t,this.options=o.a.extend({},i.defaults,this.$element.data(),e),this.contentClasses={base:[],reveal:[]},this.$lastTrigger=o()(),this.$triggers=o()(),this.position="left",this.$content=o()(),this.nested=!!this.options.nested,o()(["push","overlap"]).each(function(t,e){n.contentClasses.base.push("has-transition-"+e)}),o()(["left","right","top","bottom"]).each(function(t,e){n.contentClasses.base.push("has-position-"+e),n.contentClasses.reveal.push("has-reveal-"+e)}),u.Triggers.init(o.a),a.MediaQuery._init(),this._init(),this._events(),r.Keyboard.register("OffCanvas",{ESCAPE:"close"})}},{key:"_init",value:function(){var t=this.$element.attr("id");if(this.$element.attr("aria-hidden","true"),this.options.contentId?this.$content=o()("#"+this.options.contentId):this.$element.siblings("[data-off-canvas-content]").length?this.$content=this.$element.siblings("[data-off-canvas-content]").first():this.$content=this.$element.closest("[data-off-canvas-content]").first(),this.options.contentId?this.options.contentId&&null===this.options.nested&&console.warn("Remember to use the nested option if using the content ID option!"):this.nested=0===this.$element.siblings("[data-off-canvas-content]").length,!0===this.nested&&(this.options.transition="overlap",this.$element.removeClass("is-transition-push")),this.$element.addClass("is-transition-".concat(this.options.transition," is-closed")),this.$triggers=o()(document).find('[data-open="'+t+'"], [data-close="'+t+'"], [data-toggle="'+t+'"]').attr("aria-expanded","false").attr("aria-controls",t),this.position=this.$element.is(".position-left, .position-top, .position-right, .position-bottom")?this.$element.attr("class").match(/position\-(left|top|right|bottom)/)[1]:this.position,!0===this.options.contentOverlay){var e=document.createElement("div"),n="fixed"===o()(this.$element).css("position")?"is-overlay-fixed":"is-overlay-absolute";e.setAttribute("class","js-off-canvas-overlay "+n),this.$overlay=o()(e),"is-overlay-fixed"===n?o()(this.$overlay).insertAfter(this.$element):this.$content.append(this.$overlay)}var i=new RegExp(Object(s.RegExpEscape)(this.options.revealClass)+"([^\\s]+)","g").exec(this.$element[0].className);i&&(this.options.isRevealed=!0,this.options.revealOn=this.options.revealOn||i[1]),!0===this.options.isRevealed&&this.options.revealOn&&(this.$element.first().addClass("".concat(this.options.revealClass).concat(this.options.revealOn)),this._setMQChecker()),this.options.transitionTime&&this.$element.css("transition-duration",this.options.transitionTime),this._removeContentClasses()}},{key:"_events",value:function(){this.$element.off(".zf.trigger .zf.offcanvas").on({"open.zf.trigger":this.open.bind(this),"close.zf.trigger":this.close.bind(this),"toggle.zf.trigger":this.toggle.bind(this),"keydown.zf.offcanvas":this._handleKeyboard.bind(this)}),!0===this.options.closeOnClick&&(this.options.contentOverlay?this.$overlay:this.$content).on({"click.zf.offcanvas":this.close.bind(this)})}},{key:"_setMQChecker",value:function(){var t=this;this.onLoadListener=Object(s.onLoad)(o()(window),function(){a.MediaQuery.atLeast(t.options.revealOn)&&t.reveal(!0)}),o()(window).on("changed.zf.mediaquery",function(){a.MediaQuery.atLeast(t.options.revealOn)?t.reveal(!0):t.reveal(!1)})}},{key:"_removeContentClasses",value:function(t){"boolean"!=typeof t?this.$content.removeClass(this.contentClasses.base.join(" ")):!1===t&&this.$content.removeClass("has-reveal-".concat(this.position))}},{key:"_addContentClasses",value:function(t){this._removeContentClasses(t),"boolean"!=typeof t?this.$content.addClass("has-transition-".concat(this.options.transition," has-position-").concat(this.position)):!0===t&&this.$content.addClass("has-reveal-".concat(this.position))}},{key:"reveal",value:function(t){t?(this.close(),this.isRevealed=!0,this.$element.attr("aria-hidden","false"),this.$element.off("open.zf.trigger toggle.zf.trigger"),this.$element.removeClass("is-closed")):(this.isRevealed=!1,this.$element.attr("aria-hidden","true"),this.$element.off("open.zf.trigger toggle.zf.trigger").on({"open.zf.trigger":this.open.bind(this),"toggle.zf.trigger":this.toggle.bind(this)}),this.$element.addClass("is-closed")),this._addContentClasses(t)}},{key:"_stopScrolling",value:function(t){return!1}},{key:"_recordScrollable",value:function(t){var e=this;e.scrollHeight!==e.clientHeight&&(0===e.scrollTop&&(e.scrollTop=1),e.scrollTop===e.scrollHeight-e.clientHeight&&(e.scrollTop=e.scrollHeight-e.clientHeight-1)),e.allowUp=0<e.scrollTop,e.allowDown=e.scrollTop<e.scrollHeight-e.clientHeight,e.lastY=t.originalEvent.pageY}},{key:"_stopScrollPropagation",value:function(t){var e=t.pageY<this.lastY,n=!e;this.lastY=t.pageY,e&&this.allowUp||n&&this.allowDown?t.stopPropagation():t.preventDefault()}},{key:"open",value:function(t,e){if(!this.$element.hasClass("is-open")&&!this.isRevealed){var n=this;e&&(this.$lastTrigger=e),"top"===this.options.forceTo?window.scrollTo(0,0):"bottom"===this.options.forceTo&&window.scrollTo(0,document.body.scrollHeight),this.options.transitionTime&&"overlap"!==this.options.transition?this.$element.siblings("[data-off-canvas-content]").css("transition-duration",this.options.transitionTime):this.$element.siblings("[data-off-canvas-content]").css("transition-duration",""),this.$element.addClass("is-open").removeClass("is-closed"),this.$triggers.attr("aria-expanded","true"),this.$element.attr("aria-hidden","false"),this.$content.addClass("is-open-"+this.position),!1===this.options.contentScroll&&(o()("body").addClass("is-off-canvas-open").on("touchmove",this._stopScrolling),this.$element.on("touchstart",this._recordScrollable),this.$element.on("touchmove",this._stopScrollPropagation)),!0===this.options.contentOverlay&&this.$overlay.addClass("is-visible"),!0===this.options.closeOnClick&&!0===this.options.contentOverlay&&this.$overlay.addClass("is-closable"),!0===this.options.autoFocus&&this.$element.one(Object(s.transitionend)(this.$element),function(){if(n.$element.hasClass("is-open")){var t=n.$element.find("[data-autofocus]");t.length?t.eq(0).focus():n.$element.find("a, button").eq(0).focus()}}),!0===this.options.trapFocus&&(this.$content.attr("tabindex","-1"),r.Keyboard.trapFocus(this.$element)),this._addContentClasses(),this.$element.trigger("opened.zf.offcanvas")}}},{key:"close",value:function(t){if(this.$element.hasClass("is-open")&&!this.isRevealed){var e=this;this.$element.removeClass("is-open"),this.$element.attr("aria-hidden","true").trigger("closed.zf.offcanvas"),this.$content.removeClass("is-open-left is-open-top is-open-right is-open-bottom"),!1===this.options.contentScroll&&(o()("body").removeClass("is-off-canvas-open").off("touchmove",this._stopScrolling),this.$element.off("touchstart",this._recordScrollable),this.$element.off("touchmove",this._stopScrollPropagation)),!0===this.options.contentOverlay&&this.$overlay.removeClass("is-visible"),!0===this.options.closeOnClick&&!0===this.options.contentOverlay&&this.$overlay.removeClass("is-closable"),this.$triggers.attr("aria-expanded","false"),!0===this.options.trapFocus&&(this.$content.removeAttr("tabindex"),r.Keyboard.releaseFocus(this.$element)),this.$element.one(Object(s.transitionend)(this.$element),function(t){e.$element.addClass("is-closed"),e._removeContentClasses()})}}},{key:"toggle",value:function(t,e){this.$element.hasClass("is-open")?this.close(t,e):this.open(t,e)}},{key:"_handleKeyboard",value:function(t){var e=this;r.Keyboard.handleKey(t,"OffCanvas",{close:function(){return e.close(),e.$lastTrigger.focus(),!0},handled:function(){t.stopPropagation(),t.preventDefault()}})}},{key:"_destroy",value:function(){this.close(),this.$element.off(".zf.trigger .zf.offcanvas"),this.$overlay.off(".zf.offcanvas"),this.onLoadListener&&o()(window).off(this.onLoadListener)}}]),i}();p.defaults={closeOnClick:!0,contentOverlay:!0,contentId:null,nested:null,contentScroll:!0,transitionTime:null,transition:"push",forceTo:null,isRevealed:!1,revealOn:null,autoFocus:!0,revealClass:"reveal-for-",trapFocus:!1}},"./js/foundation.orbit.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Orbit",function(){return g});var i=n("jquery"),s=n.n(i),o=n("./js/foundation.util.keyboard.js"),c=n("./js/foundation.util.motion.js"),r=n("./js/foundation.util.timer.js"),a=n("./js/foundation.util.imageLoader.js"),l=n("./js/foundation.core.utils.js"),u=n("./js/foundation.core.plugin.js"),f=n("./js/foundation.util.touch.js");function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function h(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var g=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=p(n).apply(this,arguments))||"object"!==d(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}(n,u.Plugin),h(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=s.a.extend({},n.defaults,this.$element.data(),e),this.className="Orbit",f.Touch.init(s.a),this._init(),o.Keyboard.register("Orbit",{ltr:{ARROW_RIGHT:"next",ARROW_LEFT:"previous"},rtl:{ARROW_LEFT:"next",ARROW_RIGHT:"previous"}})}},{key:"_init",value:function(){this._reset(),this.$wrapper=this.$element.find(".".concat(this.options.containerClass)),this.$slides=this.$element.find(".".concat(this.options.slideClass));var t=this.$element.find("img"),e=this.$slides.filter(".is-active"),n=this.$element[0].id||Object(l.GetYoDigits)(6,"orbit");this.$element.attr({"data-resize":n,id:n}),e.length||this.$slides.eq(0).addClass("is-active"),this.options.useMUI||this.$slides.addClass("no-motionui"),t.length?Object(a.onImagesLoaded)(t,this._prepareForOrbit.bind(this)):this._prepareForOrbit(),this.options.bullets&&this._loadBullets(),this._events(),this.options.autoPlay&&1<this.$slides.length&&this.geoSync(),this.options.accessible&&this.$wrapper.attr("tabindex",0)}},{key:"_loadBullets",value:function(){this.$bullets=this.$element.find(".".concat(this.options.boxOfBullets)).find("button")}},{key:"geoSync",value:function(){var t=this;this.timer=new r.Timer(this.$element,{duration:this.options.timerDelay,infinite:!1},function(){t.changeSlide(!0)}),this.timer.start()}},{key:"_prepareForOrbit",value:function(){this._setWrapperHeight()}},{key:"_setWrapperHeight",value:function(t){var e,n=0,i=0,o=this;this.$slides.each(function(){e=this.getBoundingClientRect().height,s()(this).attr("data-slide",i),/mui/g.test(s()(this)[0].className)||o.$slides.filter(".is-active")[0]===o.$slides.eq(i)[0]||s()(this).css({display:"none"}),n=n<e?e:n,i++}),i===this.$slides.length&&(this.$wrapper.css({height:n}),t&&t(n))}},{key:"_setSlideHeight",value:function(t){this.$slides.each(function(){s()(this).css("max-height",t)})}},{key:"_events",value:function(){var i=this;this.$element.off(".resizeme.zf.trigger").on({"resizeme.zf.trigger":this._prepareForOrbit.bind(this)}),1<this.$slides.length&&(this.options.swipe&&this.$slides.off("swipeleft.zf.orbit swiperight.zf.orbit").on("swipeleft.zf.orbit",function(t){t.preventDefault(),i.changeSlide(!0)}).on("swiperight.zf.orbit",function(t){t.preventDefault(),i.changeSlide(!1)}),this.options.autoPlay&&(this.$slides.on("click.zf.orbit",function(){i.$element.data("clickedOn",!i.$element.data("clickedOn")),i.timer[i.$element.data("clickedOn")?"pause":"start"]()}),this.options.pauseOnHover&&this.$element.on("mouseenter.zf.orbit",function(){i.timer.pause()}).on("mouseleave.zf.orbit",function(){i.$element.data("clickedOn")||i.timer.start()})),this.options.navButtons&&this.$element.find(".".concat(this.options.nextClass,", .").concat(this.options.prevClass)).attr("tabindex",0).on("click.zf.orbit touchend.zf.orbit",function(t){t.preventDefault(),i.changeSlide(s()(this).hasClass(i.options.nextClass))}),this.options.bullets&&this.$bullets.on("click.zf.orbit touchend.zf.orbit",function(){if(/is-active/g.test(this.className))return!1;var t=s()(this).data("slide"),e=t>i.$slides.filter(".is-active").data("slide"),n=i.$slides.eq(t);i.changeSlide(e,n,t)}),this.options.accessible&&this.$wrapper.add(this.$bullets).on("keydown.zf.orbit",function(t){o.Keyboard.handleKey(t,"Orbit",{next:function(){i.changeSlide(!0)},previous:function(){i.changeSlide(!1)},handled:function(){s()(t.target).is(i.$bullets)&&i.$bullets.filter(".is-active").focus()}})}))}},{key:"_reset",value:function(){void 0!==this.$slides&&1<this.$slides.length&&(this.$element.off(".zf.orbit").find("*").off(".zf.orbit"),this.options.autoPlay&&this.timer.restart(),this.$slides.each(function(t){s()(t).removeClass("is-active is-active is-in").removeAttr("aria-live").hide()}),this.$slides.first().addClass("is-active").show(),this.$element.trigger("slidechange.zf.orbit",[this.$slides.first()]),this.options.bullets&&this._updateBullets(0))}},{key:"changeSlide",value:function(t,e,n){if(this.$slides){var i=this.$slides.filter(".is-active").eq(0);if(/mui/g.test(i[0].className))return!1;var o,s=this.$slides.first(),r=this.$slides.last(),a=t?"Right":"Left",l=t?"Left":"Right",u=this;(o=e||(t?this.options.infiniteWrap?i.next(".".concat(this.options.slideClass)).length?i.next(".".concat(this.options.slideClass)):s:i.next(".".concat(this.options.slideClass)):this.options.infiniteWrap?i.prev(".".concat(this.options.slideClass)).length?i.prev(".".concat(this.options.slideClass)):r:i.prev(".".concat(this.options.slideClass)))).length&&(this.$element.trigger("beforeslidechange.zf.orbit",[i,o]),this.options.bullets&&(n=n||this.$slides.index(o),this._updateBullets(n)),this.options.useMUI&&!this.$element.is(":hidden")?(c.Motion.animateIn(o.addClass("is-active"),this.options["animInFrom".concat(a)],function(){o.css({display:"block"}).attr("aria-live","polite")}),c.Motion.animateOut(i.removeClass("is-active"),this.options["animOutTo".concat(l)],function(){i.removeAttr("aria-live"),u.options.autoPlay&&!u.timer.isPaused&&u.timer.restart()})):(i.removeClass("is-active is-in").removeAttr("aria-live").hide(),o.addClass("is-active is-in").attr("aria-live","polite").show(),this.options.autoPlay&&!this.timer.isPaused&&this.timer.restart()),this.$element.trigger("slidechange.zf.orbit",[o]))}}},{key:"_updateBullets",value:function(t){var e=this.$element.find(".".concat(this.options.boxOfBullets)).find(".is-active").removeClass("is-active").blur().find("span:last").detach();this.$bullets.eq(t).addClass("is-active").append(e)}},{key:"_destroy",value:function(){this.$element.off(".zf.orbit").find("*").off(".zf.orbit").end().hide()}}]),n}();g.defaults={bullets:!0,navButtons:!0,animInFromRight:"slide-in-right",animOutToRight:"slide-out-right",animInFromLeft:"slide-in-left",animOutToLeft:"slide-out-left",autoPlay:!0,timerDelay:5e3,infiniteWrap:!0,swipe:!0,pauseOnHover:!0,accessible:!0,containerClass:"orbit-container",slideClass:"orbit-slide",boxOfBullets:"orbit-bullets",nextClass:"orbit-next",prevClass:"orbit-previous",useMUI:!0}},"./js/foundation.positionable.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Positionable",function(){return m});var r=n("./js/foundation.util.box.js"),i=n("./js/foundation.core.plugin.js"),o=n("./js/foundation.core.utils.js");function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function l(t){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function u(t,e){return(u=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var c=["left","right","top","bottom"],f=["top","bottom","center"],d=["left","right","center"],h={left:f,right:f,top:d,bottom:d};function p(t,e){var n=e.indexOf(t);return n===e.length-1?e[0]:e[n+1]}var m=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=l(n).apply(this,arguments))||"object"!==s(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&u(t,e)}(n,i.Plugin),a(n.prototype,[{key:"_init",value:function(){this.triedPositions={},this.position="auto"===this.options.position?this._getDefaultPosition():this.options.position,this.alignment="auto"===this.options.alignment?this._getDefaultAlignment():this.options.alignment,this.originalPosition=this.position,this.originalAlignment=this.alignment}},{key:"_getDefaultPosition",value:function(){return"bottom"}},{key:"_getDefaultAlignment",value:function(){switch(this.position){case"bottom":case"top":return Object(o.rtl)()?"right":"left";case"left":case"right":return"bottom"}}},{key:"_reposition",value:function(){this._alignmentsExhausted(this.position)?(this.position=p(this.position,c),this.alignment=h[this.position][0]):this._realign()}},{key:"_realign",value:function(){this._addTriedPosition(this.position,this.alignment),this.alignment=p(this.alignment,h[this.position])}},{key:"_addTriedPosition",value:function(t,e){this.triedPositions[t]=this.triedPositions[t]||[],this.triedPositions[t].push(e)}},{key:"_positionsExhausted",value:function(){for(var t=!0,e=0;e<c.length;e++)t=t&&this._alignmentsExhausted(c[e]);return t}},{key:"_alignmentsExhausted",value:function(t){return this.triedPositions[t]&&this.triedPositions[t].length==h[t].length}},{key:"_getVOffset",value:function(){return this.options.vOffset}},{key:"_getHOffset",value:function(){return this.options.hOffset}},{key:"_setPosition",value:function(t,e,n){if("false"===t.attr("aria-expanded"))return!1;if(r.Box.GetDimensions(e),r.Box.GetDimensions(t),this.options.allowOverlap||(this.position=this.originalPosition,this.alignment=this.originalAlignment),e.offset(r.Box.GetExplicitOffsets(e,t,this.position,this.alignment,this._getVOffset(),this._getHOffset())),!this.options.allowOverlap){for(var i=1e8,o={position:this.position,alignment:this.alignment};!this._positionsExhausted();){var s=r.Box.OverlapArea(e,n,!1,!1,this.options.allowBottomOverlap);if(0===s)return;s<i&&(i=s,o={position:this.position,alignment:this.alignment}),this._reposition(),e.offset(r.Box.GetExplicitOffsets(e,t,this.position,this.alignment,this._getVOffset(),this._getHOffset()))}this.position=o.position,this.alignment=o.alignment,e.offset(r.Box.GetExplicitOffsets(e,t,this.position,this.alignment,this._getVOffset(),this._getHOffset()))}}}]),n}();m.defaults={position:"auto",alignment:"auto",allowOverlap:!1,allowBottomOverlap:!0,vOffset:0,hOffset:0}},"./js/foundation.responsiveAccordionTabs.js":function(t,e,n){"use strict";n.r(e),n.d(e,"ResponsiveAccordionTabs",function(){return p});var i=n("jquery"),c=n.n(i),r=n("./js/foundation.util.mediaQuery.js"),f=n("./js/foundation.core.utils.js"),o=n("./js/foundation.core.plugin.js"),s=n("./js/foundation.accordion.js");function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h={tabs:{cssClass:"tabs",plugin:n("./js/foundation.tabs.js").Tabs},accordion:{cssClass:"accordion",plugin:s.Accordion}},p=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=u(n).apply(this,arguments))||"object"!==a(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,o.Plugin),l(n.prototype,[{key:"_setup",value:function(t,e){this.$element=c()(t),this.options=c.a.extend({},this.$element.data(),e),this.rules=this.$element.data("responsive-accordion-tabs"),this.currentMq=null,this.currentPlugin=null,this.className="ResponsiveAccordionTabs",this.$element.attr("id")||this.$element.attr("id",Object(f.GetYoDigits)(6,"responsiveaccordiontabs")),this._init(),this._events()}},{key:"_init",value:function(){if(r.MediaQuery._init(),"string"==typeof this.rules){for(var t={},e=this.rules.split(" "),n=0;n<e.length;n++){var i=e[n].split("-"),o=1<i.length?i[0]:"small",s=1<i.length?i[1]:i[0];null!==h[s]&&(t[o]=h[s])}this.rules=t}this._getAllOptions(),c.a.isEmptyObject(this.rules)||this._checkMediaQueries()}},{key:"_getAllOptions",value:function(){for(var t in this.allOptions={},h)if(h.hasOwnProperty(t)){var e=h[t];try{var n=c()("<ul></ul>"),i=new e.plugin(n,this.options);for(var o in i.options)if(i.options.hasOwnProperty(o)&&"zfPlugin"!==o){var s=i.options[o];this.allOptions[o]=s}i.destroy()}catch(t){}}}},{key:"_events",value:function(){this._changedZfMediaQueryHandler=this._checkMediaQueries.bind(this),c()(window).on("changed.zf.mediaquery",this._changedZfMediaQueryHandler)}},{key:"_checkMediaQueries",value:function(){var e,n=this;c.a.each(this.rules,function(t){r.MediaQuery.atLeast(t)&&(e=t)}),e&&(this.currentPlugin instanceof this.rules[e].plugin||(c.a.each(h,function(t,e){n.$element.removeClass(e.cssClass)}),this.$element.addClass(this.rules[e].cssClass),this.currentPlugin&&(!this.currentPlugin.$element.data("zfPlugin")&&this.storezfData&&this.currentPlugin.$element.data("zfPlugin",this.storezfData),this.currentPlugin.destroy()),this._handleMarkup(this.rules[e].cssClass),this.currentPlugin=new this.rules[e].plugin(this.$element,{}),this.storezfData=this.currentPlugin.$element.data("zfPlugin")))}},{key:"_handleMarkup",value:function(t){var n=this,e="accordion",i=c()("[data-tabs-content="+this.$element.attr("id")+"]");if(i.length&&(e="tabs"),e!==t){var o=n.allOptions.linkClass?n.allOptions.linkClass:"tabs-title",s=n.allOptions.panelClass?n.allOptions.panelClass:"tabs-panel";this.$element.removeAttr("role");var r=this.$element.children("."+o+",[data-accordion-item]").removeClass(o).removeClass("accordion-item").removeAttr("data-accordion-item"),a=r.children("a").removeClass("accordion-title");if("tabs"===e?(i=i.children("."+s).removeClass(s).removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby")).children("a").removeAttr("role").removeAttr("aria-controls").removeAttr("aria-selected"):i=r.children("[data-tab-content]").removeClass("accordion-content"),i.css({display:"",visibility:""}),r.css({display:"",visibility:""}),"accordion"===t)i.each(function(t,e){c()(e).appendTo(r.get(t)).addClass("accordion-content").attr("data-tab-content","").removeClass("is-active").css({height:""}),c()("[data-tabs-content="+n.$element.attr("id")+"]").after('<div id="tabs-placeholder-'+n.$element.attr("id")+'"></div>').detach(),r.addClass("accordion-item").attr("data-accordion-item",""),a.addClass("accordion-title")});else if("tabs"===t){var l=c()("[data-tabs-content="+n.$element.attr("id")+"]"),u=c()("#tabs-placeholder-"+n.$element.attr("id"));u.length?(l=c()('<div class="tabs-content"></div>').insertAfter(u).attr("data-tabs-content",n.$element.attr("id")),u.remove()):l=c()('<div class="tabs-content"></div>').insertAfter(n.$element).attr("data-tabs-content",n.$element.attr("id")),i.each(function(t,e){var n=c()(e).appendTo(l).addClass(s),i=a.get(t).hash.slice(1),o=c()(e).attr("id")||Object(f.GetYoDigits)(6,"accordion");i!==o&&(""!==i?c()(e).attr("id",i):(i=o,c()(e).attr("id",i),c()(a.get(t)).attr("href",c()(a.get(t)).attr("href").replace("#","")+"#"+i))),c()(r.get(t)).hasClass("is-active")&&n.addClass("is-active")}),r.addClass(o)}}}},{key:"_destroy",value:function(){this.currentPlugin&&this.currentPlugin.destroy(),c()(window).off("changed.zf.mediaquery",this._changedZfMediaQueryHandler)}}]),n}();p.defaults={}},"./js/foundation.responsiveMenu.js":function(t,e,n){"use strict";n.r(e),n.d(e,"ResponsiveMenu",function(){return g});var i=n("jquery"),r=n.n(i),a=n("./js/foundation.util.mediaQuery.js"),l=n("./js/foundation.core.utils.js"),o=n("./js/foundation.core.plugin.js"),s=n("./js/foundation.dropdownMenu.js"),u=n("./js/foundation.drilldown.js"),c=n("./js/foundation.accordionMenu.js");function f(t){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function d(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function h(t){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var m={dropdown:{cssClass:"dropdown",plugin:s.DropdownMenu},drilldown:{cssClass:"drilldown",plugin:u.Drilldown},accordion:{cssClass:"accordion-menu",plugin:c.AccordionMenu}},g=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=h(n).apply(this,arguments))||"object"!==f(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(n,o.Plugin),d(n.prototype,[{key:"_setup",value:function(t,e){this.$element=r()(t),this.rules=this.$element.data("responsive-menu"),this.currentMq=null,this.currentPlugin=null,this.className="ResponsiveMenu",this._init(),this._events()}},{key:"_init",value:function(){if(a.MediaQuery._init(),"string"==typeof this.rules){for(var t={},e=this.rules.split(" "),n=0;n<e.length;n++){var i=e[n].split("-"),o=1<i.length?i[0]:"small",s=1<i.length?i[1]:i[0];null!==m[s]&&(t[o]=m[s])}this.rules=t}r.a.isEmptyObject(this.rules)||this._checkMediaQueries(),this.$element.attr("data-mutate",this.$element.attr("data-mutate")||Object(l.GetYoDigits)(6,"responsive-menu"))}},{key:"_events",value:function(){var t=this;r()(window).on("changed.zf.mediaquery",function(){t._checkMediaQueries()})}},{key:"_checkMediaQueries",value:function(){var e,n=this;r.a.each(this.rules,function(t){a.MediaQuery.atLeast(t)&&(e=t)}),e&&(this.currentPlugin instanceof this.rules[e].plugin||(r.a.each(m,function(t,e){n.$element.removeClass(e.cssClass)}),this.$element.addClass(this.rules[e].cssClass),this.currentPlugin&&this.currentPlugin.destroy(),this.currentPlugin=new this.rules[e].plugin(this.$element,{})))}},{key:"_destroy",value:function(){this.currentPlugin.destroy(),r()(window).off(".zf.ResponsiveMenu")}}]),n}();g.defaults={}},"./js/foundation.responsiveToggle.js":function(t,e,n){"use strict";n.r(e),n.d(e,"ResponsiveToggle",function(){return d});var i=n("jquery"),o=n.n(i),s=n("./js/foundation.util.mediaQuery.js"),r=n("./js/foundation.util.motion.js"),a=n("./js/foundation.core.plugin.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(n).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(n,a.Plugin),u(n.prototype,[{key:"_setup",value:function(t,e){this.$element=o()(t),this.options=o.a.extend({},n.defaults,this.$element.data(),e),this.className="ResponsiveToggle",this._init(),this._events()}},{key:"_init",value:function(){s.MediaQuery._init();var e=this.$element.data("responsive-toggle");if(e||console.error("Your tab bar needs an ID of a Menu as the value of data-tab-bar."),this.$targetMenu=o()("#".concat(e)),this.$toggler=this.$element.find("[data-toggle]").filter(function(){var t=o()(this).data("toggle");return t===e||""===t}),this.options=o.a.extend({},this.options,this.$targetMenu.data()),this.options.animate){var t=this.options.animate.split(" ");this.animationIn=t[0],this.animationOut=t[1]||null}this._update()}},{key:"_events",value:function(){this._updateMqHandler=this._update.bind(this),o()(window).on("changed.zf.mediaquery",this._updateMqHandler),this.$toggler.on("click.zf.responsiveToggle",this.toggleMenu.bind(this))}},{key:"_update",value:function(){s.MediaQuery.atLeast(this.options.hideFor)?(this.$element.hide(),this.$targetMenu.show()):(this.$element.show(),this.$targetMenu.hide())}},{key:"toggleMenu",value:function(){var t=this;s.MediaQuery.atLeast(this.options.hideFor)||(this.options.animate?this.$targetMenu.is(":hidden")?r.Motion.animateIn(this.$targetMenu,this.animationIn,function(){t.$element.trigger("toggled.zf.responsiveToggle"),t.$targetMenu.find("[data-mutate]").triggerHandler("mutateme.zf.trigger")}):r.Motion.animateOut(this.$targetMenu,this.animationOut,function(){t.$element.trigger("toggled.zf.responsiveToggle")}):(this.$targetMenu.toggle(0),this.$targetMenu.find("[data-mutate]").trigger("mutateme.zf.trigger"),this.$element.trigger("toggled.zf.responsiveToggle")))}},{key:"_destroy",value:function(){this.$element.off(".zf.responsiveToggle"),this.$toggler.off(".zf.responsiveToggle"),o()(window).off("changed.zf.mediaquery",this._updateMqHandler)}}]),n}();d.defaults={hideFor:"medium",animate:!1}},"./js/foundation.reveal.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Reveal",function(){return m});var i=n("jquery"),r=n.n(i),o=n("./js/foundation.core.utils.js"),s=n("./js/foundation.util.keyboard.js"),a=n("./js/foundation.util.mediaQuery.js"),l=n("./js/foundation.util.motion.js"),u=n("./js/foundation.core.plugin.js"),c=n("./js/foundation.util.triggers.js");function f(t){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function d(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function h(t){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var m=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=h(n).apply(this,arguments))||"object"!==f(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(n,u.Plugin),d(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=r.a.extend({},n.defaults,this.$element.data(),e),this.className="Reveal",this._init(),c.Triggers.init(r.a),s.Keyboard.register("Reveal",{ESCAPE:"close"})}},{key:"_init",value:function(){var t=this;a.MediaQuery._init(),this.id=this.$element.attr("id"),this.isActive=!1,this.cached={mq:a.MediaQuery.current},this.$anchor=r()('[data-open="'.concat(this.id,'"]')).length?r()('[data-open="'.concat(this.id,'"]')):r()('[data-toggle="'.concat(this.id,'"]')),this.$anchor.attr({"aria-controls":this.id,"aria-haspopup":!0,tabindex:0}),(this.options.fullScreen||this.$element.hasClass("full"))&&(this.options.fullScreen=!0,this.options.overlay=!1),this.options.overlay&&!this.$overlay&&(this.$overlay=this._makeOverlay(this.id)),this.$element.attr({role:"dialog","aria-hidden":!0,"data-yeti-box":this.id,"data-resize":this.id}),this.$overlay?this.$element.detach().appendTo(this.$overlay):(this.$element.detach().appendTo(r()(this.options.appendTo)),this.$element.addClass("without-overlay")),this._events(),this.options.deepLink&&window.location.hash==="#".concat(this.id)&&(this.onLoadListener=Object(o.onLoad)(r()(window),function(){return t.open()}))}},{key:"_makeOverlay",value:function(){var t="";return this.options.additionalOverlayClasses&&(t=" "+this.options.additionalOverlayClasses),r()("<div></div>").addClass("reveal-overlay"+t).appendTo(this.options.appendTo)}},{key:"_updatePosition",value:function(){var t,e=this.$element.outerWidth(),n=r()(window).width(),i=this.$element.outerHeight(),o=r()(window).height(),s=null;t="auto"===this.options.hOffset?parseInt((n-e)/2,10):parseInt(this.options.hOffset,10),"auto"===this.options.vOffset?s=o<i?parseInt(Math.min(100,o/10),10):parseInt((o-i)/4,10):null!==this.options.vOffset&&(s=parseInt(this.options.vOffset,10)),null!==s&&this.$element.css({top:s+"px"}),this.$overlay&&"auto"===this.options.hOffset||(this.$element.css({left:t+"px"}),this.$element.css({margin:"0px"}))}},{key:"_events",value:function(){var n=this,i=this;this.$element.on({"open.zf.trigger":this.open.bind(this),"close.zf.trigger":function(t,e){if(t.target===i.$element[0]||r()(t.target).parents("[data-closable]")[0]===e)return n.close.apply(n)},"toggle.zf.trigger":this.toggle.bind(this),"resizeme.zf.trigger":function(){i._updatePosition()}}),this.options.closeOnClick&&this.options.overlay&&this.$overlay.off(".zf.reveal").on("click.zf.reveal",function(t){t.target!==i.$element[0]&&!r.a.contains(i.$element[0],t.target)&&r.a.contains(document,t.target)&&i.close()}),this.options.deepLink&&r()(window).on("hashchange.zf.reveal:".concat(this.id),this._handleState.bind(this))}},{key:"_handleState",value:function(t){window.location.hash!=="#"+this.id||this.isActive?this.close():this.open()}},{key:"_disableScroll",value:function(t){t=t||r()(window).scrollTop(),r()(document).height()>r()(window).height()&&r()("html").css("top",-t)}},{key:"_enableScroll",value:function(t){t=t||parseInt(r()("html").css("top")),r()(document).height()>r()(window).height()&&(r()("html").css("top",""),r()(window).scrollTop(-t))}},{key:"open",value:function(){var t=this,e="#".concat(this.id);this.options.deepLink&&window.location.hash!==e&&(window.history.pushState?this.options.updateHistory?window.history.pushState({},"",e):window.history.replaceState({},"",e):window.location.hash=e),this.$activeAnchor=r()(document.activeElement).is(this.$anchor)?r()(document.activeElement):this.$anchor,this.isActive=!0,this.$element.css({visibility:"hidden"}).show().scrollTop(0),this.options.overlay&&this.$overlay.css({visibility:"hidden"}).show(),this._updatePosition(),this.$element.hide().css({visibility:""}),this.$overlay&&(this.$overlay.css({visibility:""}).hide(),this.$element.hasClass("fast")?this.$overlay.addClass("fast"):this.$element.hasClass("slow")&&this.$overlay.addClass("slow")),this.options.multipleOpened||this.$element.trigger("closeme.zf.reveal",this.id),this._disableScroll();var n=this;this.options.animationIn?(this.options.overlay&&l.Motion.animateIn(this.$overlay,"fade-in"),l.Motion.animateIn(this.$element,this.options.animationIn,function(){t.$element&&(t.focusableElements=s.Keyboard.findFocusable(t.$element),n.$element.attr({"aria-hidden":!1,tabindex:-1}).focus(),n._addGlobalClasses(),s.Keyboard.trapFocus(n.$element))})):(this.options.overlay&&this.$overlay.show(0),this.$element.show(this.options.showDelay)),this.$element.attr({"aria-hidden":!1,tabindex:-1}).focus(),s.Keyboard.trapFocus(this.$element),this._addGlobalClasses(),this._addGlobalListeners(),this.$element.trigger("open.zf.reveal")}},{key:"_addGlobalClasses",value:function(){var t=function(){r()("html").toggleClass("zf-has-scroll",!!(r()(document).height()>r()(window).height()))};this.$element.on("resizeme.zf.trigger.revealScrollbarListener",function(){return t()}),t(),r()("html").addClass("is-reveal-open")}},{key:"_removeGlobalClasses",value:function(){this.$element.off("resizeme.zf.trigger.revealScrollbarListener"),r()("html").removeClass("is-reveal-open"),r()("html").removeClass("zf-has-scroll")}},{key:"_addGlobalListeners",value:function(){var e=this;this.$element&&(this.focusableElements=s.Keyboard.findFocusable(this.$element),this.options.overlay||!this.options.closeOnClick||this.options.fullScreen||r()("body").on("click.zf.reveal",function(t){t.target!==e.$element[0]&&!r.a.contains(e.$element[0],t.target)&&r.a.contains(document,t.target)&&e.close()}),this.options.closeOnEsc&&r()(window).on("keydown.zf.reveal",function(t){s.Keyboard.handleKey(t,"Reveal",{close:function(){e.options.closeOnEsc&&e.close()}})}))}},{key:"close",value:function(){if(!this.isActive||!this.$element.is(":visible"))return!1;var e=this;function t(){var t=parseInt(r()("html").css("top"));0===r()(".reveal:visible").length&&e._removeGlobalClasses(),s.Keyboard.releaseFocus(e.$element),e.$element.attr("aria-hidden",!0),e._enableScroll(t),e.$element.trigger("closed.zf.reveal")}if(this.options.animationOut?(this.options.overlay&&l.Motion.animateOut(this.$overlay,"fade-out"),l.Motion.animateOut(this.$element,this.options.animationOut,t)):(this.$element.hide(this.options.hideDelay),this.options.overlay?this.$overlay.hide(0,t):t()),this.options.closeOnEsc&&r()(window).off("keydown.zf.reveal"),!this.options.overlay&&this.options.closeOnClick&&r()("body").off("click.zf.reveal"),this.$element.off("keydown.zf.reveal"),this.options.resetOnClose&&this.$element.html(this.$element.html()),this.isActive=!1,e.options.deepLink&&window.location.hash==="#".concat(this.id))if(window.history.replaceState){var n=window.location.pathname+window.location.search;this.options.updateHistory?window.history.pushState({},"",n):window.history.replaceState("",document.title,n)}else window.location.hash="";this.$activeAnchor.focus()}},{key:"toggle",value:function(){this.isActive?this.close():this.open()}},{key:"_destroy",value:function(){this.options.overlay&&(this.$element.appendTo(r()(this.options.appendTo)),this.$overlay.hide().off().remove()),this.$element.hide().off(),this.$anchor.off(".zf"),r()(window).off(".zf.reveal:".concat(this.id)),this.onLoadListener&&r()(window).off(this.onLoadListener),0===r()(".reveal:visible").length&&this._removeGlobalClasses()}}]),n}();m.defaults={animationIn:"",animationOut:"",showDelay:0,hideDelay:0,closeOnClick:!0,closeOnEsc:!0,multipleOpened:!1,vOffset:"auto",hOffset:"auto",fullScreen:!1,overlay:!0,resetOnClose:!1,deepLink:!1,updateHistory:!1,appendTo:"body",additionalOverlayClasses:""}},"./js/foundation.slider.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Slider",function(){return d});var i=n("jquery"),m=n.n(i),r=n("./js/foundation.util.keyboard.js"),$=n("./js/foundation.util.motion.js"),g=n("./js/foundation.core.utils.js"),o=n("./js/foundation.core.plugin.js"),s=n("./js/foundation.util.touch.js"),a=n("./js/foundation.util.triggers.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(n).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(n,o.Plugin),u(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=m.a.extend({},n.defaults,this.$element.data(),e),this.className="Slider",s.Touch.init(m.a),a.Triggers.init(m.a),this._init(),r.Keyboard.register("Slider",{ltr:{ARROW_RIGHT:"increase",ARROW_UP:"increase",ARROW_DOWN:"decrease",ARROW_LEFT:"decrease",SHIFT_ARROW_RIGHT:"increase_fast",SHIFT_ARROW_UP:"increase_fast",SHIFT_ARROW_DOWN:"decrease_fast",SHIFT_ARROW_LEFT:"decrease_fast",HOME:"min",END:"max"},rtl:{ARROW_LEFT:"increase",ARROW_RIGHT:"decrease",SHIFT_ARROW_LEFT:"increase_fast",SHIFT_ARROW_RIGHT:"decrease_fast"}})}},{key:"_init",value:function(){this.inputs=this.$element.find("input"),this.handles=this.$element.find("[data-slider-handle]"),this.$handle=this.handles.eq(0),this.$input=this.inputs.length?this.inputs.eq(0):m()("#".concat(this.$handle.attr("aria-controls"))),this.$fill=this.$element.find("[data-slider-fill]").css(this.options.vertical?"height":"width",0),(this.options.disabled||this.$element.hasClass(this.options.disabledClass))&&(this.options.disabled=!0,this.$element.addClass(this.options.disabledClass)),this.inputs.length||(this.inputs=m()().add(this.$input),this.options.binding=!0),this._setInitAttr(0),this.handles[1]&&(this.options.doubleSided=!0,this.$handle2=this.handles.eq(1),this.$input2=1<this.inputs.length?this.inputs.eq(1):m()("#".concat(this.$handle2.attr("aria-controls"))),this.inputs[1]||(this.inputs=this.inputs.add(this.$input2)),this._setInitAttr(1)),this.setHandles(),this._events()}},{key:"setHandles",value:function(){var t=this;this.handles[1]?this._setHandlePos(this.$handle,this.inputs.eq(0).val(),!0,function(){t._setHandlePos(t.$handle2,t.inputs.eq(1).val(),!0)}):this._setHandlePos(this.$handle,this.inputs.eq(0).val(),!0)}},{key:"_reflow",value:function(){this.setHandles()}},{key:"_pctOfBar",value:function(t){var e=_(t-this.options.start,this.options.end-this.options.start);switch(this.options.positionValueFunction){case"pow":e=this._logTransform(e);break;case"log":e=this._powTransform(e)}return e.toFixed(2)}},{key:"_value",value:function(t){switch(this.options.positionValueFunction){case"pow":t=this._powTransform(t);break;case"log":t=this._logTransform(t)}return(this.options.end-this.options.start)*t+parseFloat(this.options.start)}},{key:"_logTransform",value:function(t){return e=this.options.nonLinearBase,n=t*(this.options.nonLinearBase-1)+1,Math.log(n)/Math.log(e);var e,n}},{key:"_powTransform",value:function(t){return(Math.pow(this.options.nonLinearBase,t)-1)/(this.options.nonLinearBase-1)}},{key:"_setHandlePos",value:function(t,e,n,i){if(!this.$element.hasClass(this.options.disabledClass)){(e=parseFloat(e))<this.options.start?e=this.options.start:e>this.options.end&&(e=this.options.end);var o=this.options.doubleSided;if(this.options.vertical&&!n&&(e=this.options.end-e),o)if(0===this.handles.index(t)){var s=parseFloat(this.$handle2.attr("aria-valuenow"));e=s<=e?s-this.options.step:e}else{var r=parseFloat(this.$handle.attr("aria-valuenow"));e=e<=r?r+this.options.step:e}var a=this,l=this.options.vertical,u=l?"height":"width",c=l?"top":"left",f=t[0].getBoundingClientRect()[u],d=this.$element[0].getBoundingClientRect()[u],h=this._pctOfBar(e),p=(100*_((d-f)*h,d)).toFixed(this.options.decimal);e=parseFloat(e.toFixed(this.options.decimal));var m={};if(this._setValues(t,e),o){var g,v=0===this.handles.index(t),y=~~(100*_(f,d));if(v)m[c]="".concat(p,"%"),g=parseFloat(this.$handle2[0].style[c])-p+y,i&&"function"==typeof i&&i();else{var b=parseFloat(this.$handle[0].style[c]);g=p-(isNaN(b)?(this.options.initialStart-this.options.start)/((this.options.end-this.options.start)/100):b)+y}m["min-".concat(u)]="".concat(g,"%")}this.$element.one("finished.zf.animate",function(){a.$element.trigger("moved.zf.slider",[t])});var w=this.$element.data("dragging")?1e3/60:this.options.moveTime;Object($.Move)(w,t,function(){isNaN(p)?t.css(c,"".concat(100*h,"%")):t.css(c,"".concat(p,"%")),a.options.doubleSided?a.$fill.css(m):a.$fill.css(u,"".concat(100*h,"%"))}),clearTimeout(a.timeout),a.timeout=setTimeout(function(){a.$element.trigger("changed.zf.slider",[t])},a.options.changedDelay)}}},{key:"_setInitAttr",value:function(t){var e=0===t?this.options.initialStart:this.options.initialEnd,n=this.inputs.eq(t).attr("id")||Object(g.GetYoDigits)(6,"slider");this.inputs.eq(t).attr({id:n,max:this.options.end,min:this.options.start,step:this.options.step}),this.inputs.eq(t).val(e),this.handles.eq(t).attr({role:"slider","aria-controls":n,"aria-valuemax":this.options.end,"aria-valuemin":this.options.start,"aria-valuenow":e,"aria-orientation":this.options.vertical?"vertical":"horizontal",tabindex:0})}},{key:"_setValues",value:function(t,e){var n=this.options.doubleSided?this.handles.index(t):0;this.inputs.eq(n).val(e),t.attr("aria-valuenow",e)}},{key:"_handleEvent",value:function(t,e,n){var i,o;if(n)i=this._adjustValue(null,n),o=!0;else{t.preventDefault();var s=this.options.vertical,r=s?"height":"width",a=s?"top":"left",l=s?t.pageY:t.pageX,u=(this.$handle[0].getBoundingClientRect()[r],this.$element[0].getBoundingClientRect()[r]),c=s?m()(window).scrollTop():m()(window).scrollLeft(),f=this.$element.offset()[a];t.clientY===t.pageY&&(l+=c);var d,h=l-f,p=_(d=h<0?0:u<h?u:h,u);i=this._value(p),Object(g.rtl)()&&!this.options.vertical&&(i=this.options.end-i),i=this._adjustValue(null,i),o=!1,e||(e=v(this.$handle,a,d,r)<=v(this.$handle2,a,d,r)?this.$handle:this.$handle2)}this._setHandlePos(e,i,o)}},{key:"_adjustValue",value:function(t,e){var n,i,o,s=this.options.step,r=parseFloat(s/2);return 0===(i=0<=(n=t?parseFloat(t.attr("aria-valuenow")):e)?n%s:s+n%s)?n:n=(o=n-i)+r<=n?o+s:o}},{key:"_events",value:function(){this._eventsForHandle(this.$handle),this.handles[1]&&this._eventsForHandle(this.$handle2)}},{key:"_eventsForHandle",value:function(e){var n,s=this,i=function(t){var e=s.inputs.index(m()(this));s._handleEvent(t,s.handles.eq(e),m()(this).val())};if(this.inputs.off("keyup.zf.slider").on("keyup.zf.slider",function(t){13==t.keyCode&&i.call(this,t)}),this.inputs.off("change.zf.slider").on("change.zf.slider",i),this.options.clickSelect&&this.$element.off("click.zf.slider").on("click.zf.slider",function(t){if(s.$element.data("dragging"))return!1;m()(t.target).is("[data-slider-handle]")||(s.options.doubleSided?s._handleEvent(t):s._handleEvent(t,s.$handle))}),this.options.draggable){this.handles.addTouch();var o=m()("body");e.off("mousedown.zf.slider").on("mousedown.zf.slider",function(t){e.addClass("is-dragging"),s.$fill.addClass("is-dragging"),s.$element.data("dragging",!0),n=m()(t.currentTarget),o.on("mousemove.zf.slider",function(t){t.preventDefault(),s._handleEvent(t,n)}).on("mouseup.zf.slider",function(t){s._handleEvent(t,n),e.removeClass("is-dragging"),s.$fill.removeClass("is-dragging"),s.$element.data("dragging",!1),o.off("mousemove.zf.slider mouseup.zf.slider")})}).on("selectstart.zf.slider touchmove.zf.slider",function(t){t.preventDefault()})}e.off("keydown.zf.slider").on("keydown.zf.slider",function(t){var e,n=m()(this),i=s.options.doubleSided?s.handles.index(n):0,o=parseFloat(s.inputs.eq(i).val());r.Keyboard.handleKey(t,"Slider",{decrease:function(){e=o-s.options.step},increase:function(){e=o+s.options.step},decrease_fast:function(){e=o-10*s.options.step},increase_fast:function(){e=o+10*s.options.step},min:function(){e=s.options.start},max:function(){e=s.options.end},handled:function(){t.preventDefault(),s._setHandlePos(n,e,!0)}})})}},{key:"_destroy",value:function(){this.handles.off(".zf.slider"),this.inputs.off(".zf.slider"),this.$element.off(".zf.slider"),clearTimeout(this.timeout)}}]),n}();function _(t,e){return t/e}function v(t,e,n,i){return Math.abs(t.position()[e]+t[i]()/2-n)}d.defaults={start:0,end:100,step:1,initialStart:0,initialEnd:100,binding:!1,clickSelect:!0,vertical:!1,draggable:!0,disabled:!1,doubleSided:!1,decimal:2,moveTime:200,disabledClass:"disabled",invertVertical:!1,changedDelay:500,nonLinearBase:5,positionValueFunction:"linear"}},"./js/foundation.smoothScroll.js":function(t,e,n){"use strict";n.r(e),n.d(e,"SmoothScroll",function(){return s});var i=n("jquery"),r=n.n(i),o=n("./js/foundation.core.utils.js"),a=n("./js/foundation.core.plugin.js");function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var s=function(t){function s(){return function(t,e){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=c(s).apply(this,arguments))||"object"!==l(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}var e,n;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(s,a.Plugin),n=[{key:"scrollToLoc",value:function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:s.defaults,n=2<arguments.length?arguments[2]:void 0,i=r()(t);if(!i.length)return!1;var o=Math.round(i.offset().top-e.threshold/2-e.offset);r()("html, body").stop(!0).animate({scrollTop:o},e.animationDuration,e.animationEasing,function(){"function"==typeof n&&n()})}}],u((e=s).prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=r.a.extend({},s.defaults,this.$element.data(),e),this.className="SmoothScroll",this._init()}},{key:"_init",value:function(){var t=this.$element[0].id||Object(o.GetYoDigits)(6,"smooth-scroll");this.$element.attr({id:t}),this._events()}},{key:"_events",value:function(){this.$element.on("click.zf.smoothScroll",this._handleLinkClick),this.$element.on("click.zf.smoothScroll",'a[href^="#"]',this._handleLinkClick)}},{key:"_handleLinkClick",value:function(t){var e=this;if(r()(t.currentTarget).is('a[href^="#"]')){var n=t.currentTarget.getAttribute("href");this._inTransition=!0,s.scrollToLoc(n,this.options,function(){e._inTransition=!1}),t.preventDefault()}}},{key:"_destroy",value:function(){this.$element.off("click.zf.smoothScroll",this._handleLinkClick),this.$element.off("click.zf.smoothScroll",'a[href^="#"]',this._handleLinkClick)}}]),u(e,n),s}();s.defaults={animationDuration:500,animationEasing:"linear",threshold:50,offset:0}},"./js/foundation.sticky.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Sticky",function(){return h});var i=n("jquery"),a=n.n(i),o=n("./js/foundation.core.utils.js"),l=n("./js/foundation.util.mediaQuery.js"),s=n("./js/foundation.core.plugin.js"),r=n("./js/foundation.util.triggers.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=f(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,s.Plugin),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=a.a.extend({},n.defaults,this.$element.data(),e),this.className="Sticky",r.Triggers.init(a.a),this._init()}},{key:"_init",value:function(){l.MediaQuery._init();var t=this.$element.parent("[data-sticky-container]"),e=this.$element[0].id||Object(o.GetYoDigits)(6,"sticky"),n=this;t.length?this.$container=t:(this.wasWrapped=!0,this.$element.wrap(this.options.container),this.$container=this.$element.parent()),this.$container.addClass(this.options.containerClass),this.$element.addClass(this.options.stickyClass).attr({"data-resize":e,"data-mutate":e}),""!==this.options.anchor&&a()("#"+n.options.anchor).attr({"data-mutate":e}),this.scrollCount=this.options.checkEvery,this.isStuck=!1,this.onLoadListener=Object(o.onLoad)(a()(window),function(){n.containerHeight="none"==n.$element.css("display")?0:n.$element[0].getBoundingClientRect().height,n.$container.css("height",n.containerHeight),n.elemHeight=n.containerHeight,""!==n.options.anchor?n.$anchor=a()("#"+n.options.anchor):n._parsePoints(),n._setSizes(function(){var t=window.pageYOffset;n._calc(!1,t),n.isStuck||n._removeSticky(!(t>=n.topPoint))}),n._events(e.split("-").reverse().join("-"))})}},{key:"_parsePoints",value:function(){for(var t=[""==this.options.topAnchor?1:this.options.topAnchor,""==this.options.btmAnchor?document.documentElement.scrollHeight:this.options.btmAnchor],e={},n=0,i=t.length;n<i&&t[n];n++){var o;if("number"==typeof t[n])o=t[n];else{var s=t[n].split(":"),r=a()("#".concat(s[0]));o=r.offset().top,s[1]&&"bottom"===s[1].toLowerCase()&&(o+=r[0].getBoundingClientRect().height)}e[n]=o}this.points=e}},{key:"_events",value:function(n){var i=this,t=this.scrollListener="scroll.zf.".concat(n);this.isOn||(this.canStick&&(this.isOn=!0,a()(window).off(t).on(t,function(t){0===i.scrollCount?(i.scrollCount=i.options.checkEvery,i._setSizes(function(){i._calc(!1,window.pageYOffset)})):(i.scrollCount--,i._calc(!1,window.pageYOffset))})),this.$element.off("resizeme.zf.trigger").on("resizeme.zf.trigger",function(t,e){i._eventsHandler(n)}),this.$element.on("mutateme.zf.trigger",function(t,e){i._eventsHandler(n)}),this.$anchor&&this.$anchor.on("mutateme.zf.trigger",function(t,e){i._eventsHandler(n)}))}},{key:"_eventsHandler",value:function(t){var e=this,n=this.scrollListener="scroll.zf.".concat(t);e._setSizes(function(){e._calc(!1),e.canStick?e.isOn||e._events(t):e.isOn&&e._pauseListeners(n)})}},{key:"_pauseListeners",value:function(t){this.isOn=!1,a()(window).off(t),this.$element.trigger("pause.zf.sticky")}},{key:"_calc",value:function(t,e){if(t&&this._setSizes(),!this.canStick)return this.isStuck&&this._removeSticky(!0),!1;e||(e=window.pageYOffset),e>=this.topPoint?e<=this.bottomPoint?this.isStuck||this._setSticky():this.isStuck&&this._removeSticky(!1):this.isStuck&&this._removeSticky(!0)}},{key:"_setSticky",value:function(){var t=this,e=this.options.stickTo,n="top"===e?"marginTop":"marginBottom",i="top"===e?"bottom":"top",o={};o[n]="".concat(this.options[n],"em"),o[e]=0,o[i]="auto",this.isStuck=!0,this.$element.removeClass("is-anchored is-at-".concat(i)).addClass("is-stuck is-at-".concat(e)).css(o).trigger("sticky.zf.stuckto:".concat(e)),this.$element.on("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",function(){t._setSizes()})}},{key:"_removeSticky",value:function(t){var e=this.options.stickTo,n="top"===e,i={},o=(this.points?this.points[1]-this.points[0]:this.anchorHeight)-this.elemHeight,s=t?"top":"bottom";i[n?"marginTop":"marginBottom"]=0,i.bottom="auto",i.top=t?0:o,this.isStuck=!1,this.$element.removeClass("is-stuck is-at-".concat(e)).addClass("is-anchored is-at-".concat(s)).css(i).trigger("sticky.zf.unstuckfrom:".concat(s))}},{key:"_setSizes",value:function(t){this.canStick=l.MediaQuery.is(this.options.stickyOn),this.canStick||t&&"function"==typeof t&&t();var e=this.$container[0].getBoundingClientRect().width,n=window.getComputedStyle(this.$container[0]),i=parseInt(n["padding-left"],10),o=parseInt(n["padding-right"],10);this.$anchor&&this.$anchor.length?this.anchorHeight=this.$anchor[0].getBoundingClientRect().height:this._parsePoints(),this.$element.css({"max-width":"".concat(e-i-o,"px")});var s=this.$element[0].getBoundingClientRect().height||this.containerHeight;if("none"==this.$element.css("display")&&(s=0),this.containerHeight=s,this.$container.css({height:s}),this.elemHeight=s,!this.isStuck&&this.$element.hasClass("is-at-bottom")){var r=(this.points?this.points[1]-this.$container.offset().top:this.anchorHeight)-this.elemHeight;this.$element.css("top",r)}this._setBreakPoints(s,function(){t&&"function"==typeof t&&t()})}},{key:"_setBreakPoints",value:function(t,e){if(!this.canStick){if(!e||"function"!=typeof e)return!1;e()}var n=p(this.options.marginTop),i=p(this.options.marginBottom),o=this.points?this.points[0]:this.$anchor.offset().top,s=this.points?this.points[1]:o+this.anchorHeight,r=window.innerHeight;"top"===this.options.stickTo?(o-=n,s-=t+n):"bottom"===this.options.stickTo&&(o-=r-(t+i),s-=r-i),this.topPoint=o,this.bottomPoint=s,e&&"function"==typeof e&&e()}},{key:"_destroy",value:function(){this._removeSticky(!0),this.$element.removeClass("".concat(this.options.stickyClass," is-anchored is-at-top")).css({height:"",top:"",bottom:"","max-width":""}).off("resizeme.zf.trigger").off("mutateme.zf.trigger"),this.$anchor&&this.$anchor.length&&this.$anchor.off("change.zf.sticky"),this.scrollListener&&a()(window).off(this.scrollListener),this.onLoadListener&&a()(window).off(this.onLoadListener),this.wasWrapped?this.$element.unwrap():this.$container.removeClass(this.options.containerClass).css({height:""})}}]),n}();function p(t){return parseInt(window.getComputedStyle(document.body,null).fontSize,10)*t}h.defaults={container:"<div data-sticky-container></div>",stickTo:"top",anchor:"",topAnchor:"",btmAnchor:"",marginTop:1,marginBottom:1,stickyOn:"medium",stickyClass:"sticky",containerClass:"sticky-container",checkEvery:-1}},"./js/foundation.tabs.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Tabs",function(){return h});var i=n("jquery"),a=n.n(i),l=n("./js/foundation.core.utils.js"),r=n("./js/foundation.util.keyboard.js"),o=n("./js/foundation.util.imageLoader.js"),s=n("./js/foundation.core.plugin.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=f(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,s.Plugin),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=a.a.extend({},n.defaults,this.$element.data(),e),this.className="Tabs",this._init(),r.Keyboard.register("Tabs",{ENTER:"open",SPACE:"open",ARROW_RIGHT:"next",ARROW_UP:"previous",ARROW_DOWN:"next",ARROW_LEFT:"previous"})}},{key:"_init",value:function(){var s=this,r=this;if(this._isInitializing=!0,this.$element.attr({role:"tablist"}),this.$tabTitles=this.$element.find(".".concat(this.options.linkClass)),this.$tabContent=a()('[data-tabs-content="'.concat(this.$element[0].id,'"]')),this.$tabTitles.each(function(){var t=a()(this),e=t.find("a"),n=t.hasClass("".concat(r.options.linkActiveClass)),i=e.attr("data-tabs-target")||e[0].hash.slice(1),o=e[0].id?e[0].id:"".concat(i,"-label"),s=a()("#".concat(i));t.attr({role:"presentation"}),e.attr({role:"tab","aria-controls":i,"aria-selected":n,id:o,tabindex:n?"0":"-1"}),s.attr({role:"tabpanel","aria-labelledby":o}),n&&(r._initialAnchor="#".concat(i)),n||s.attr("aria-hidden","true"),n&&r.options.autoFocus&&(r.onLoadListener=Object(l.onLoad)(a()(window),function(){a()("html, body").animate({scrollTop:t.offset().top},r.options.deepLinkSmudgeDelay,function(){e.focus()})}))}),this.options.matchHeight){var t=this.$tabContent.find("img");t.length?Object(o.onImagesLoaded)(t,this._setHeight.bind(this)):this._setHeight()}this._checkDeepLink=function(){var t=window.location.hash;if(!t.length){if(s._isInitializing)return;s._initialAnchor&&(t=s._initialAnchor)}var e=t&&a()(t),n=t&&s.$element.find('[href$="'+t+'"]'),i=!(!e.length||!n.length);if(e&&e.length&&n&&n.length?s.selectTab(e,!0):s._collapse(),i){if(s.options.deepLinkSmudge){var o=s.$element.offset();a()("html, body").animate({scrollTop:o.top},s.options.deepLinkSmudgeDelay)}s.$element.trigger("deeplink.zf.tabs",[n,e])}},this.options.deepLink&&this._checkDeepLink(),this._events(),this._isInitializing=!1}},{key:"_events",value:function(){this._addKeyHandler(),this._addClickHandler(),this._setHeightMqHandler=null,this.options.matchHeight&&(this._setHeightMqHandler=this._setHeight.bind(this),a()(window).on("changed.zf.mediaquery",this._setHeightMqHandler)),this.options.deepLink&&a()(window).on("hashchange",this._checkDeepLink)}},{key:"_addClickHandler",value:function(){var e=this;this.$element.off("click.zf.tabs").on("click.zf.tabs",".".concat(this.options.linkClass),function(t){t.preventDefault(),t.stopPropagation(),e._handleTabChange(a()(this))})}},{key:"_addKeyHandler",value:function(){var s=this;this.$tabTitles.off("keydown.zf.tabs").on("keydown.zf.tabs",function(t){if(9!==t.which){var e,n,i=a()(this),o=i.parent("ul").children("li");o.each(function(t){a()(this).is(i)&&(n=s.options.wrapOnKeys?(e=0===t?o.last():o.eq(t-1),t===o.length-1?o.first():o.eq(t+1)):(e=o.eq(Math.max(0,t-1)),o.eq(Math.min(t+1,o.length-1))))}),r.Keyboard.handleKey(t,"Tabs",{open:function(){i.find('[role="tab"]').focus(),s._handleTabChange(i)},previous:function(){e.find('[role="tab"]').focus(),s._handleTabChange(e)},next:function(){n.find('[role="tab"]').focus(),s._handleTabChange(n)},handled:function(){t.stopPropagation(),t.preventDefault()}})}})}},{key:"_handleTabChange",value:function(t,e){if(t.hasClass("".concat(this.options.linkActiveClass)))this.options.activeCollapse&&this._collapse();else{var n=this.$element.find(".".concat(this.options.linkClass,".").concat(this.options.linkActiveClass)),i=t.find('[role="tab"]'),o=i.attr("data-tabs-target"),s=o&&o.length?"#".concat(o):i[0].hash,r=this.$tabContent.find(s);this._collapseTab(n),this._openTab(t),this.options.deepLink&&!e&&(this.options.updateHistory?history.pushState({},"",s):history.replaceState({},"",s)),this.$element.trigger("change.zf.tabs",[t,r]),r.find("[data-mutate]").trigger("mutateme.zf.trigger")}}},{key:"_openTab",value:function(t){var e=t.find('[role="tab"]'),n=e.attr("data-tabs-target")||e[0].hash.slice(1),i=this.$tabContent.find("#".concat(n));t.addClass("".concat(this.options.linkActiveClass)),e.attr({"aria-selected":"true",tabindex:"0"}),i.addClass("".concat(this.options.panelActiveClass)).removeAttr("aria-hidden")}},{key:"_collapseTab",value:function(t){var e=t.removeClass("".concat(this.options.linkActiveClass)).find('[role="tab"]').attr({"aria-selected":"false",tabindex:-1});a()("#".concat(e.attr("aria-controls"))).removeClass("".concat(this.options.panelActiveClass)).attr({"aria-hidden":"true"})}},{key:"_collapse",value:function(){var t=this.$element.find(".".concat(this.options.linkClass,".").concat(this.options.linkActiveClass));t.length&&(this._collapseTab(t),this.$element.trigger("collapse.zf.tabs",[t]))}},{key:"selectTab",value:function(t,e){var n;(n="object"===u(t)?t[0].id:t).indexOf("#")<0&&(n="#".concat(n));var i=this.$tabTitles.has('[href$="'.concat(n,'"]'));this._handleTabChange(i,e)}},{key:"_setHeight",value:function(){var i=0,o=this;this.$tabContent.find(".".concat(this.options.panelClass)).css("height","").each(function(){var t=a()(this),e=t.hasClass("".concat(o.options.panelActiveClass));e||t.css({visibility:"hidden",display:"block"});var n=this.getBoundingClientRect().height;e||t.css({visibility:"",display:""}),i=i<n?n:i}).css("height","".concat(i,"px"))}},{key:"_destroy",value:function(){this.$element.find(".".concat(this.options.linkClass)).off(".zf.tabs").hide().end().find(".".concat(this.options.panelClass)).hide(),this.options.matchHeight&&null!=this._setHeightMqHandler&&a()(window).off("changed.zf.mediaquery",this._setHeightMqHandler),this.options.deepLink&&a()(window).off("hashchange",this._checkDeepLink),this.onLoadListener&&a()(window).off(this.onLoadListener)}}]),n}();h.defaults={deepLink:!1,deepLinkSmudge:!1,deepLinkSmudgeDelay:300,updateHistory:!1,autoFocus:!1,wrapOnKeys:!0,matchHeight:!1,activeCollapse:!1,linkClass:"tabs-title",linkActiveClass:"is-active",panelClass:"tabs-panel",panelActiveClass:"is-active"}},"./js/foundation.toggler.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Toggler",function(){return h});var i=n("jquery"),s=n.n(i),o=n("./js/foundation.util.motion.js"),r=n("./js/foundation.core.plugin.js"),a=n("./js/foundation.core.utils.js"),l=n("./js/foundation.util.triggers.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var h=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=f(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(n,r.Plugin),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=s.a.extend({},n.defaults,t.data(),e),this.className="",this.className="Toggler",l.Triggers.init(s.a),this._init(),this._events()}},{key:"_init",value:function(){var t;this.options.animate?(t=this.options.animate.split(" "),this.animationIn=t[0],this.animationOut=t[1]||null):(t=this.$element.data("toggler"),this.className="."===t[0]?t.slice(1):t);var o=this.$element[0].id,e=s()('[data-open~="'.concat(o,'"], [data-close~="').concat(o,'"], [data-toggle~="').concat(o,'"]'));e.attr("aria-expanded",!this.$element.is(":hidden")),e.each(function(t,e){var n=s()(e),i=n.attr("aria-controls")||"";new RegExp("\\b".concat(Object(a.RegExpEscape)(o),"\\b")).test(i)||n.attr("aria-controls",i?"".concat(i," ").concat(o):o)})}},{key:"_events",value:function(){this.$element.off("toggle.zf.trigger").on("toggle.zf.trigger",this.toggle.bind(this))}},{key:"toggle",value:function(){this[this.options.animate?"_toggleAnimate":"_toggleClass"]()}},{key:"_toggleClass",value:function(){this.$element.toggleClass(this.className);var t=this.$element.hasClass(this.className);t?this.$element.trigger("on.zf.toggler"):this.$element.trigger("off.zf.toggler"),this._updateARIA(t),this.$element.find("[data-mutate]").trigger("mutateme.zf.trigger")}},{key:"_toggleAnimate",value:function(){var t=this;this.$element.is(":hidden")?o.Motion.animateIn(this.$element,this.animationIn,function(){t._updateARIA(!0),this.trigger("on.zf.toggler"),this.find("[data-mutate]").trigger("mutateme.zf.trigger")}):o.Motion.animateOut(this.$element,this.animationOut,function(){t._updateARIA(!1),this.trigger("off.zf.toggler"),this.find("[data-mutate]").trigger("mutateme.zf.trigger")})}},{key:"_updateARIA",value:function(t){var e=this.$element[0].id;s()('[data-open="'.concat(e,'"], [data-close="').concat(e,'"], [data-toggle="').concat(e,'"]')).attr({"aria-expanded":!!t})}},{key:"_destroy",value:function(){this.$element.off(".zf.toggler")}}]),n}();h.defaults={animate:!1}},"./js/foundation.tooltip.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Tooltip",function(){return p});var i=n("jquery"),o=n.n(i),s=n("./js/foundation.core.utils.js"),r=n("./js/foundation.util.mediaQuery.js"),a=n("./js/foundation.util.triggers.js"),l=n("./js/foundation.positionable.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function f(t,e,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function n(){return function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),e=this,!(t=d(n).apply(this,arguments))||"object"!==u(t)&&"function"!=typeof t?function(t){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}():t;var e,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(n,l.Positionable),c(n.prototype,[{key:"_setup",value:function(t,e){this.$element=t,this.options=o.a.extend({},n.defaults,this.$element.data(),e),this.className="Tooltip",this.isActive=!1,this.isClick=!1,a.Triggers.init(o.a),this._init()}},{key:"_init",value:function(){r.MediaQuery._init();var t=this.$element.attr("aria-describedby")||Object(s.GetYoDigits)(6,"tooltip");this.options.tipText=this.options.tipText||this.$element.attr("title"),this.template=this.options.template?o()(this.options.template):this._buildTemplate(t),this.options.allowHtml?this.template.appendTo(document.body).html(this.options.tipText).hide():this.template.appendTo(document.body).text(this.options.tipText).hide(),this.$element.attr({title:"","aria-describedby":t,"data-yeti-box":t,"data-toggle":t,"data-resize":t}).addClass(this.options.triggerClass),f(d(n.prototype),"_init",this).call(this),this._events()}},{key:"_getDefaultPosition",value:function(){var t=this.$element[0].className.match(/\b(top|left|right|bottom)\b/g);return t?t[0]:"top"}},{key:"_getDefaultAlignment",value:function(){return"center"}},{key:"_getHOffset",value:function(){return"left"===this.position||"right"===this.position?this.options.hOffset+this.options.tooltipWidth:this.options.hOffset}},{key:"_getVOffset",value:function(){return"top"===this.position||"bottom"===this.position?this.options.vOffset+this.options.tooltipHeight:this.options.vOffset}},{key:"_buildTemplate",value:function(t){var e="".concat(this.options.tooltipClass," ").concat(this.options.templateClasses).trim();return o()("<div></div>").addClass(e).attr({role:"tooltip","aria-hidden":!0,"data-is-active":!1,"data-is-focus":!1,id:t})}},{key:"_setPosition",value:function(){f(d(n.prototype),"_setPosition",this).call(this,this.$element,this.template)}},{key:"show",value:function(){if("all"!==this.options.showOn&&!r.MediaQuery.is(this.options.showOn))return!1;this.template.css("visibility","hidden").show(),this._setPosition(),this.template.removeClass("top bottom left right").addClass(this.position),this.template.removeClass("align-top align-bottom align-left align-right align-center").addClass("align-"+this.alignment),this.$element.trigger("closeme.zf.tooltip",this.template.attr("id")),this.template.attr({"data-is-active":!0,"aria-hidden":!1}),this.isActive=!0,this.template.stop().hide().css("visibility","").fadeIn(this.options.fadeInDuration,function(){}),this.$element.trigger("show.zf.tooltip")}},{key:"hide",value:function(){var t=this;this.template.stop().attr({"aria-hidden":!0,"data-is-active":!1}).fadeOut(this.options.fadeOutDuration,function(){t.isActive=!1,t.isClick=!1}),this.$element.trigger("hide.zf.tooltip")}},{key:"_events",value:function(){var e=this,n=(this.template,!1);this.options.disableHover||this.$element.on("mouseenter.zf.tooltip",function(t){e.isActive||(e.timeout=setTimeout(function(){e.show()},e.options.hoverDelay))}).on("mouseleave.zf.tooltip",Object(s.ignoreMousedisappear)(function(t){clearTimeout(e.timeout),(!n||e.isClick&&!e.options.clickOpen)&&e.hide()})),this.options.clickOpen?this.$element.on("mousedown.zf.tooltip",function(t){t.stopImmediatePropagation(),e.isClick||(e.isClick=!0,!e.options.disableHover&&e.$element.attr("tabindex")||e.isActive||e.show())}):this.$element.on("mousedown.zf.tooltip",function(t){t.stopImmediatePropagation(),e.isClick=!0}),this.options.disableForTouch||this.$element.on("tap.zf.tooltip touchend.zf.tooltip",function(t){e.isActive?e.hide():e.show()}),this.$element.on({"close.zf.trigger":this.hide.bind(this)}),this.$element.on("focus.zf.tooltip",function(t){if(n=!0,e.isClick)return e.options.clickOpen||(n=!1),!1;e.show()}).on("focusout.zf.tooltip",function(t){n=!1,e.isClick=!1,e.hide()}).on("resizeme.zf.trigger",function(){e.isActive&&e._setPosition()})}},{key:"toggle",value:function(){this.isActive?this.hide():this.show()}},{key:"_destroy",value:function(){this.$element.attr("title",this.template.text()).off(".zf.trigger .zf.tooltip").removeClass(this.options.triggerClass).removeClass("top right left bottom").removeAttr("aria-describedby data-disable-hover data-resize data-toggle data-tooltip data-yeti-box"),this.template.remove()}}]),n}();p.defaults={disableForTouch:!1,hoverDelay:200,fadeInDuration:150,fadeOutDuration:150,disableHover:!1,templateClasses:"",tooltipClass:"tooltip",triggerClass:"has-tip",showOn:"small",template:"",tipText:"",touchCloseText:"Tap to close.",clickOpen:!0,position:"auto",alignment:"auto",allowOverlap:!1,allowBottomOverlap:!1,vOffset:0,hOffset:0,tooltipHeight:14,tooltipWidth:12,allowHtml:!1}},"./js/foundation.util.box.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Box",function(){return i});var r=n("./js/foundation.core.utils.js"),i={ImNotTouchingYou:function(t,e,n,i,o){return 0===s(t,e,n,i,o)},OverlapArea:s,GetDimensions:f,GetOffsets:function(t,e,n,i,o,s){switch(console.log("NOTE: GetOffsets is deprecated in favor of GetExplicitOffsets and will be removed in 6.5"),n){case"top":return Object(r.rtl)()?a(t,e,"top","left",i,o,s):a(t,e,"top","right",i,o,s);case"bottom":return Object(r.rtl)()?a(t,e,"bottom","left",i,o,s):a(t,e,"bottom","right",i,o,s);case"center top":return a(t,e,"top","center",i,o,s);case"center bottom":return a(t,e,"bottom","center",i,o,s);case"center left":return a(t,e,"left","center",i,o,s);case"center right":return a(t,e,"right","center",i,o,s);case"left bottom":return a(t,e,"bottom","left",i,o,s);case"right bottom":return a(t,e,"bottom","right",i,o,s);case"center":return{left:$eleDims.windowDims.offset.left+$eleDims.windowDims.width/2-$eleDims.width/2+o,top:$eleDims.windowDims.offset.top+$eleDims.windowDims.height/2-($eleDims.height/2+i)};case"reveal":return{left:($eleDims.windowDims.width-$eleDims.width)/2+o,top:$eleDims.windowDims.offset.top+i};case"reveal full":return{left:$eleDims.windowDims.offset.left,top:$eleDims.windowDims.offset.top};default:return{left:Object(r.rtl)()?$anchorDims.offset.left-$eleDims.width+$anchorDims.width-o:$anchorDims.offset.left+o,top:$anchorDims.offset.top+$anchorDims.height+i}}},GetExplicitOffsets:a};function s(t,e,n,i,o){var s,r,a,l,u=f(t);if(e){var c=f(e);r=c.height+c.offset.top-(u.offset.top+u.height),s=u.offset.top-c.offset.top,a=u.offset.left-c.offset.left,l=c.width+c.offset.left-(u.offset.left+u.width)}else r=u.windowDims.height+u.windowDims.offset.top-(u.offset.top+u.height),s=u.offset.top-u.windowDims.offset.top,a=u.offset.left-u.windowDims.offset.left,l=u.windowDims.width-(u.offset.left+u.width);return r=o?0:Math.min(r,0),s=Math.min(s,0),a=Math.min(a,0),l=Math.min(l,0),n?a+l:i?s+r:Math.sqrt(s*s+r*r+a*a+l*l)}function f(t){if((t=t.length?t[0]:t)===window||t===document)throw new Error("I'm sorry, Dave. I'm afraid I can't do that.");var e=t.getBoundingClientRect(),n=t.parentNode.getBoundingClientRect(),i=document.body.getBoundingClientRect(),o=window.pageYOffset,s=window.pageXOffset;return{width:e.width,height:e.height,offset:{top:e.top+o,left:e.left+s},parentDims:{width:n.width,height:n.height,offset:{top:n.top+o,left:n.left+s}},windowDims:{width:i.width,height:i.height,offset:{top:o,left:s}}}}function a(t,e,n,i,o,s,r){var a,l,u=f(t),c=e?f(e):null;switch(n){case"top":a=c.offset.top-(u.height+o);break;case"bottom":a=c.offset.top+c.height+o;break;case"left":l=c.offset.left-(u.width+s);break;case"right":l=c.offset.left+c.width+s}switch(n){case"top":case"bottom":switch(i){case"left":l=c.offset.left+s;break;case"right":l=c.offset.left-u.width+c.width-s;break;case"center":l=r?s:c.offset.left+c.width/2-u.width/2+s}break;case"right":case"left":switch(i){case"bottom":a=c.offset.top-o+c.height-u.height;break;case"top":a=c.offset.top+o;break;case"center":a=c.offset.top+o+c.height/2-u.height/2}}return{top:a,left:l}}},"./js/foundation.util.imageLoader.js":function(t,e,n){"use strict";n.r(e),n.d(e,"onImagesLoaded",function(){return s});var i=n("jquery"),o=n.n(i);function s(t,e){var n=t.length;function i(){0==--n&&e()}0===n&&e(),t.each(function(){if(this.complete&&void 0!==this.naturalWidth)i();else{var t=new Image,n="load.zf.images error.zf.images";o()(t).one(n,function t(e){o()(this).off(n,t),i()}),t.src=o()(this).attr("src")}})}},"./js/foundation.util.keyboard.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Keyboard",function(){return c});var i=n("jquery"),a=n.n(i),l=n("./js/foundation.core.utils.js"),o={9:"TAB",13:"ENTER",27:"ESCAPE",32:"SPACE",35:"END",36:"HOME",37:"ARROW_LEFT",38:"ARROW_UP",39:"ARROW_RIGHT",40:"ARROW_DOWN"},u={};function s(t){return!!t&&t.find("a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]").filter(function(){return!(!a()(this).is(":visible")||a()(this).attr("tabindex")<0)})}function r(t){var e=o[t.which||t.keyCode]||String.fromCharCode(t.which).toUpperCase();return e=e.replace(/\W+/,""),t.shiftKey&&(e="SHIFT_".concat(e)),t.ctrlKey&&(e="CTRL_".concat(e)),t.altKey&&(e="ALT_".concat(e)),e.replace(/_$/,"")}var c={keys:function(t){var e={};for(var n in t)e[t[n]]=t[n];return e}(o),parseKey:r,handleKey:function(t,e,n){var i,o=u[e],s=this.parseKey(t);if(!o)return console.warn("Component not defined!");if((i=n[(void 0===o.ltr?o:Object(l.rtl)()?a.a.extend({},o.ltr,o.rtl):a.a.extend({},o.rtl,o.ltr))[s]])&&"function"==typeof i){var r=i.apply();(n.handled||"function"==typeof n.handled)&&n.handled(r)}else(n.unhandled||"function"==typeof n.unhandled)&&n.unhandled()},findFocusable:s,register:function(t,e){u[t]=e},trapFocus:function(t){var e=s(t),n=e.eq(0),i=e.eq(-1);t.on("keydown.zf.trapfocus",function(t){t.target===i[0]&&"TAB"===r(t)?(t.preventDefault(),n.focus()):t.target===n[0]&&"SHIFT_TAB"===r(t)&&(t.preventDefault(),i.focus())})},releaseFocus:function(t){t.off("keydown.zf.trapfocus")}}},"./js/foundation.util.mediaQuery.js":function(t,e,n){"use strict";n.r(e),n.d(e,"MediaQuery",function(){return r});var i=n("jquery"),s=n.n(i);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}window.matchMedia||(window.matchMedia=function(){var e=window.styleMedia||window.media;if(!e){var n,i=document.createElement("style"),t=document.getElementsByTagName("script")[0];i.type="text/css",i.id="matchmediajs-test",t?t.parentNode.insertBefore(i,t):document.head.appendChild(i),n="getComputedStyle"in window&&window.getComputedStyle(i,null)||i.currentStyle,e={matchMedium:function(t){var e="@media "+t+"{ #matchmediajs-test { width: 1px; } }";return i.styleSheet?i.styleSheet.cssText=e:i.textContent=e,"1px"===n.width}}}return function(t){return{matches:e.matchMedium(t||"all"),media:t||"all"}}}());var r={queries:[],current:"",_init:function(){s()("meta.foundation-mq").length||s()('<meta class="foundation-mq">').appendTo(document.head);var t,e,n,i=s()(".foundation-mq").css("font-family");for(var o in n={},t="string"==typeof(e=i)&&(e=e.trim().slice(1,-1))?n=e.split("&").reduce(function(t,e){var n=e.replace(/\+/g," ").split("="),i=n[0],o=n[1];return i=decodeURIComponent(i),o=void 0===o?null:decodeURIComponent(o),t.hasOwnProperty(i)?Array.isArray(t[i])?t[i].push(o):t[i]=[t[i],o]:t[i]=o,t},{}):n)t.hasOwnProperty(o)&&this.queries.push({name:o,value:"only screen and (min-width: ".concat(t[o],")")});this.current=this._getCurrentSize(),this._watcher()},atLeast:function(t){var e=this.get(t);return!!e&&window.matchMedia(e).matches},is:function(t){return 1<(t=t.trim().split(" ")).length&&"only"===t[1]?t[0]===this._getCurrentSize():this.atLeast(t[0])},get:function(t){for(var e in this.queries)if(this.queries.hasOwnProperty(e)){var n=this.queries[e];if(t===n.name)return n.value}return null},_getCurrentSize:function(){for(var t,e=0;e<this.queries.length;e++){var n=this.queries[e];window.matchMedia(n.value).matches&&(t=n)}return"object"===o(t)?t.name:t},_watcher:function(){var n=this;s()(window).off("resize.zf.mediaquery").on("resize.zf.mediaquery",function(){var t=n._getCurrentSize(),e=n.current;t!==e&&(n.current=t,s()(window).trigger("changed.zf.mediaquery",[t,e]))})}}},"./js/foundation.util.motion.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Move",function(){return s}),n.d(e,"Motion",function(){return o});var i=n("jquery"),a=n.n(i),l=n("./js/foundation.core.utils.js"),u=["mui-enter","mui-leave"],c=["mui-enter-active","mui-leave-active"],o={animateIn:function(t,e,n){r(!0,t,e,n)},animateOut:function(t,e,n){r(!1,t,e,n)}};function s(n,i,o){var s,r,a=null;if(0===n)return o.apply(i),void i.trigger("finished.zf.animate",[i]).triggerHandler("finished.zf.animate",[i]);s=window.requestAnimationFrame(function t(e){a||(a=e),r=e-a,o.apply(i),r<n?s=window.requestAnimationFrame(t,i):(window.cancelAnimationFrame(s),i.trigger("finished.zf.animate",[i]).triggerHandler("finished.zf.animate",[i]))})}function r(t,e,n,i){if((e=a()(e).eq(0)).length){var o=t?u[0]:u[1],s=t?c[0]:c[1];r(),e.addClass(n).css("transition","none"),requestAnimationFrame(function(){e.addClass(o),t&&e.show()}),requestAnimationFrame(function(){e[0].offsetWidth,e.css("transition","").addClass(s)}),e.one(Object(l.transitionend)(e),function(){t||e.hide(),r(),i&&i.apply(e)})}function r(){e[0].style.transitionDuration=0,e.removeClass("".concat(o," ").concat(s," ").concat(n))}}},"./js/foundation.util.nest.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Nest",function(){return o});var i=n("jquery"),a=n.n(i),o={Feather:function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"zf";t.attr("role","menubar");var e=t.find("li").attr({role:"menuitem"}),i="is-".concat(n,"-submenu"),o="".concat(i,"-item"),s="is-".concat(n,"-submenu-parent"),r="accordion"!==n;e.each(function(){var t=a()(this),e=t.children("ul");e.length&&(t.addClass(s),e.addClass("submenu ".concat(i)).attr({"data-submenu":""}),r&&(t.attr({"aria-haspopup":!0,"aria-label":t.children("a:first").text()}),"drilldown"===n&&t.attr({"aria-expanded":!1})),e.addClass("submenu ".concat(i)).attr({"data-submenu":"",role:"menubar"}),"drilldown"===n&&e.attr({"aria-hidden":!0})),t.parent("[data-submenu]").length&&t.addClass("is-submenu-item ".concat(o))})},Burn:function(t,e){var n="is-".concat(e,"-submenu"),i="".concat(n,"-item"),o="is-".concat(e,"-submenu-parent");t.find(">li, > li > ul, .menu, .menu > li, [data-submenu] > li").removeClass("".concat(n," ").concat(i," ").concat(o," is-submenu-item submenu is-active")).removeAttr("data-submenu").css("display","")}}},"./js/foundation.util.timer.js":function(t,e,n){"use strict";function i(e,t,n){var i,o,s=this,r=t.duration,a=Object.keys(e.data())[0]||"timer",l=-1;this.isPaused=!1,this.restart=function(){l=-1,clearTimeout(o),this.start()},this.start=function(){this.isPaused=!1,clearTimeout(o),l=l<=0?r:l,e.data("paused",!1),i=Date.now(),o=setTimeout(function(){t.infinite&&s.restart(),n&&"function"==typeof n&&n()},l),e.trigger("timerstart.zf.".concat(a))},this.pause=function(){this.isPaused=!0,clearTimeout(o),e.data("paused",!0);var t=Date.now();l-=t-i,e.trigger("timerpaused.zf.".concat(a))}}n.r(e),n.d(e,"Timer",function(){return i}),n("jquery")},"./js/foundation.util.touch.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Touch",function(){return c});var i=n("jquery"),o=n.n(i);function s(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var r,a,l,u,c={},f=!1,d=!1;function h(t){if(this.removeEventListener("touchmove",p),this.removeEventListener("touchend",h),!d){var e=o.a.Event("tap",u||t);o()(this).trigger(e)}u=null,d=f=!1}function p(t){if(o.a.spotSwipe.preventDefault&&t.preventDefault(),f){var e,n=t.touches[0].pageX,i=(t.touches[0].pageY,r-n);d=!0,l=(new Date).getTime()-a,Math.abs(i)>=o.a.spotSwipe.moveThreshold&&l<=o.a.spotSwipe.timeThreshold&&(e=0<i?"left":"right"),e&&(t.preventDefault(),h.apply(this,arguments),o()(this).trigger(o.a.Event("swipe",t),e).trigger(o.a.Event("swipe".concat(e),t)))}}function m(t){1==t.touches.length&&(r=t.touches[0].pageX,t.touches[0].pageY,u=t,d=!(f=!0),a=(new Date).getTime(),this.addEventListener("touchmove",p,!1),this.addEventListener("touchend",h,!1))}function g(){this.addEventListener&&this.addEventListener("touchstart",m,!1)}var v=function(){function n(t){!function(t,e){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this),this.version="1.0.0",this.enabled="ontouchstart"in document.documentElement,this.preventDefault=!1,this.moveThreshold=75,this.timeThreshold=200,this.$=t,this._init()}return s(n.prototype,[{key:"_init",value:function(){var t=this.$;t.event.special.swipe={setup:g},t.event.special.tap={setup:g},t.each(["left","up","down","right"],function(){t.event.special["swipe".concat(this)]={setup:function(){t(this).on("swipe",t.noop)}}})}}]),n}();c.setupSpotSwipe=function(t){t.spotSwipe=new v(t)},c.setupTouchHandler=function(i){i.fn.addTouch=function(){this.each(function(t,e){i(e).bind("touchstart touchmove touchend touchcancel",function(t){n(t)})});var n=function(t){var e,n=t.changedTouches[0],i={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup"}[t.type];"MouseEvent"in window&&"function"==typeof window.MouseEvent?e=new window.MouseEvent(i,{bubbles:!0,cancelable:!0,screenX:n.screenX,screenY:n.screenY,clientX:n.clientX,clientY:n.clientY}):(e=document.createEvent("MouseEvent")).initMouseEvent(i,!0,!0,window,1,n.screenX,n.screenY,n.clientX,n.clientY,!1,!1,!1,!1,0,null),n.target.dispatchEvent(e)}}},c.init=function(t){void 0===t.spotSwipe&&(c.setupSpotSwipe(t),c.setupTouchHandler(t))}},"./js/foundation.util.triggers.js":function(t,e,n){"use strict";n.r(e),n.d(e,"Triggers",function(){return c});var i=n("jquery"),s=n.n(i),o=n("./js/foundation.core.utils.js"),r=n("./js/foundation.util.motion.js");function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var l=function(){for(var t=["WebKit","Moz","O","Ms",""],e=0;e<t.length;e++)if("".concat(t[e],"MutationObserver")in window)return window["".concat(t[e],"MutationObserver")];return!1}(),u=function(e,n){e.data(n).split(" ").forEach(function(t){s()("#".concat(t))["close"===n?"trigger":"triggerHandler"]("".concat(n,".zf.trigger"),[e])})},c={Listeners:{Basic:{},Global:{}},Initializers:{}};function f(e,t,n){var i,o=Array.prototype.slice.call(arguments,3);s()(window).off(t).on(t,function(t){i&&clearTimeout(i),i=setTimeout(function(){n.apply(null,o)},e||10)})}c.Listeners.Basic={openListener:function(){u(s()(this),"open")},closeListener:function(){s()(this).data("close")?u(s()(this),"close"):s()(this).trigger("close.zf.trigger")},toggleListener:function(){s()(this).data("toggle")?u(s()(this),"toggle"):s()(this).trigger("toggle.zf.trigger")},closeableListener:function(t){t.stopPropagation();var e=s()(this).data("closable");""!==e?r.Motion.animateOut(s()(this),e,function(){s()(this).trigger("closed.zf")}):s()(this).fadeOut().trigger("closed.zf")},toggleFocusListener:function(){var t=s()(this).data("toggle-focus");s()("#".concat(t)).triggerHandler("toggle.zf.trigger",[s()(this)])}},c.Initializers.addOpenListener=function(t){t.off("click.zf.trigger",c.Listeners.Basic.openListener),t.on("click.zf.trigger","[data-open]",c.Listeners.Basic.openListener)},c.Initializers.addCloseListener=function(t){t.off("click.zf.trigger",c.Listeners.Basic.closeListener),t.on("click.zf.trigger","[data-close]",c.Listeners.Basic.closeListener)},c.Initializers.addToggleListener=function(t){t.off("click.zf.trigger",c.Listeners.Basic.toggleListener),t.on("click.zf.trigger","[data-toggle]",c.Listeners.Basic.toggleListener)},c.Initializers.addCloseableListener=function(t){t.off("close.zf.trigger",c.Listeners.Basic.closeableListener),t.on("close.zf.trigger","[data-closeable], [data-closable]",c.Listeners.Basic.closeableListener)},c.Initializers.addToggleFocusListener=function(t){t.off("focus.zf.trigger blur.zf.trigger",c.Listeners.Basic.toggleFocusListener),t.on("focus.zf.trigger blur.zf.trigger","[data-toggle-focus]",c.Listeners.Basic.toggleFocusListener)},c.Listeners.Global={resizeListener:function(t){l||t.each(function(){s()(this).triggerHandler("resizeme.zf.trigger")}),t.attr("data-events","resize")},scrollListener:function(t){l||t.each(function(){s()(this).triggerHandler("scrollme.zf.trigger")}),t.attr("data-events","scroll")},closeMeListener:function(t,e){var n=t.namespace.split(".")[0];s()("[data-".concat(n,"]")).not('[data-yeti-box="'.concat(e,'"]')).each(function(){var t=s()(this);t.triggerHandler("close.zf.trigger",[t])})}},c.Initializers.addClosemeListener=function(t){var e=s()("[data-yeti-box]"),n=["dropdown","tooltip","reveal"];if(t&&("string"==typeof t?n.push(t):"object"===a(t)&&"string"==typeof t[0]?n.concat(t):console.error("Plugin names must be strings")),e.length){var i=n.map(function(t){return"closeme.zf.".concat(t)}).join(" ");s()(window).off(i).on(i,c.Listeners.Global.closeMeListener)}},c.Initializers.addResizeListener=function(t){var e=s()("[data-resize]");e.length&&f(t,"resize.zf.trigger",c.Listeners.Global.resizeListener,e)},c.Initializers.addScrollListener=function(t){var e=s()("[data-scroll]");e.length&&f(t,"scroll.zf.trigger",c.Listeners.Global.scrollListener,e)},c.Initializers.addMutationEventsListener=function(t){if(!l)return!1;var e=t.find("[data-resize], [data-scroll], [data-mutate]"),n=function(t){var e=s()(t[0].target);switch(t[0].type){case"attributes":"scroll"===e.attr("data-events")&&"data-events"===t[0].attributeName&&e.triggerHandler("scrollme.zf.trigger",[e,window.pageYOffset]),"resize"===e.attr("data-events")&&"data-events"===t[0].attributeName&&e.triggerHandler("resizeme.zf.trigger",[e]),"style"===t[0].attributeName&&(e.closest("[data-mutate]").attr("data-events","mutate"),e.closest("[data-mutate]").triggerHandler("mutateme.zf.trigger",[e.closest("[data-mutate]")]));break;case"childList":e.closest("[data-mutate]").attr("data-events","mutate"),e.closest("[data-mutate]").triggerHandler("mutateme.zf.trigger",[e.closest("[data-mutate]")]);break;default:return!1}};if(e.length)for(var i=0;i<=e.length-1;i++)new l(n).observe(e[i],{attributes:!0,childList:!0,characterData:!1,subtree:!0,attributeFilter:["data-events","style"]})},c.Initializers.addSimpleListeners=function(){var t=s()(document);c.Initializers.addOpenListener(t),c.Initializers.addCloseListener(t),c.Initializers.addToggleListener(t),c.Initializers.addCloseableListener(t),c.Initializers.addToggleFocusListener(t)},c.Initializers.addGlobalListeners=function(){var t=s()(document);c.Initializers.addMutationEventsListener(t),c.Initializers.addResizeListener(),c.Initializers.addScrollListener(),c.Initializers.addClosemeListener()},c.init=function(t,e){Object(o.onLoad)(t(window),function(){!0!==t.triggersInitialized&&(c.Initializers.addSimpleListeners(),c.Initializers.addGlobalListeners(),t.triggersInitialized=!0)}),e&&(e.Triggers=c,e.IHearYou=c.Initializers.addGlobalListeners)}},0:function(t,e,n){t.exports=n("./js/entries/foundation.js")},jquery:function(t,e){t.exports=n}})}),function(s){s.fn.ajaxEmailSender=function(t){var o=s.extend({action:"https://w59660nu6h.execute-api.us-west-2.amazonaws.com/prod/corpEmailSender",domain:window.location.hostname,errorText:"Error! The email has not been sent. Please try later.",messageContainer:s("#formMessage"),errorColor:"red",succesColor:"#04744B",submitBtn:s(this).find("[type='submit']"),event:"submit",autorizationToken:"",supportEmail:""},t);return this.on(o.event,function(t){var n=this,e=s(this).serializeArray(),i={};o.submitBtn.prop("disabled",!0),jQuery.each(e,function(){i[this.name]=this.value||""}),i.domainName=o.domain,i.supportEmail=o.supportEmail,t.preventDefault(),s.ajax({url:o.action,dataType:"json",data:JSON.stringify(i),crossDomain:!0,cache:!1,type:"post",beforeSend:function(t){t.setRequestHeader("AuthorizationToken",o.autorizationToken)}}).done(function(t){var e=JSON.parse(t);e&&(o.submitBtn.prop("disabled",!1),s(o.messageContainer).text(e.message),s(o.messageContainer).attr("data-csp","main-success-message"),s(o.messageContainer).css("color",o.succesColor),document.getElementById(s(n).attr("id")).reset())}).fail(function(t){o.submitBtn.prop("disabled",!1),s(o.messageContainer).text(o.errorText),s(o.messageContainer).attr("data-csp","main-error-message"),s(o.messageContainer).css("color",o.errorColor)})}),!1}}(jQuery),$(function(){var t="https://members."+getAddress.site+"/ajax/getCorpData?corp_id="+getAddress.corp_id+"&country_code="+getAddress.country_code;$.getJSON(t,function(t){null!==t.addressUS&&null!==t.corpName&&getAddress.addressContainer.empty().html(function(){return t.corpName+"<br />"+t.addressUS.replace(t.corpName+",","").replace(/, /g,"<br />")})})}),$(document).foundation(),function(){"use strict";for(var t=document.querySelectorAll(".phone-button"),e=t.length-1;0<=e;e--){var n=t[e];n.addEventListener("click",function(t){t.preventDefault(),!0===this.classList.contains("is-active")?this.classList.remove("is-active"):this.classList.add("is-active")})}}(),$(document).ready(function(){$(".menu-trigger").click(function(){$("nav ul").slideToggle(500)}),$(window).resize(function(){639<$(window).width()&&$("nav ul").removeAttr("style")})}),$(".smoothScroll").on("click",moveToSection),$(".send-email").delay(2e3).fadeOut(1e3),$("#contacts_form").on("submit",function(t,e){t.preventDefault()}),$("#contacts_form").ajaxEmailSender({domain:"yiltadlimited.com",autorizationToken:"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ5aWx0YWRsaW1pdGVkLmNvbSIsImlhdCI6MTU0ODg0NDAyNTYzNywiZXhwIjoxNTgwMzgwMDI1NjM3LCJhdWQiOiJ5aWx0YWRsaW1pdGVkLmNvbSIsInN1YiI6InlpbHRhZGxpbWl0ZWQuY29tIn0.TpycqJJdQz5BqUb-PQD98PA0i9suuwxocaOpOKPAl9c",event:"formvalid.zf.abide",supportEmail:"support@yiltadlimited.com"});var getAddress={site:"musetimes.com",corp_id:"638",country_code:"CY",addressContainer:$(".addressContainer")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibW92ZVRvU2VjdGlvbiIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCIkIiwiYXR0ciIsIm9mZnNldFRvcCIsIm9mZnNldCIsInRvcCIsImlzIiwicmVtb3ZlQ2xhc3MiLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImFyciIsInNsaWNlIiwiY29uY2F0IiwicHVzaCIsImluZGV4T2YiLCJjbGFzczJ0eXBlIiwidG9TdHJpbmciLCJoYXNPd24iLCJoYXNPd25Qcm9wZXJ0eSIsInN1cHBvcnQiLCJ2ZXJzaW9uIiwialF1ZXJ5Iiwic2VsZWN0b3IiLCJjb250ZXh0IiwiZm4iLCJpbml0IiwicnRyaW0iLCJybXNQcmVmaXgiLCJyZGFzaEFscGhhIiwiZmNhbWVsQ2FzZSIsImFsbCIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiaXNBcnJheUxpa2UiLCJvYmoiLCJsZW5ndGgiLCJ0eXBlIiwiaXNXaW5kb3ciLCJwcm90b3R5cGUiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJjYWxsIiwiZ2V0IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiaSIsImFwcGx5IiwiYXJndW1lbnRzIiwiZmlyc3QiLCJlcSIsImxhc3QiLCJsZW4iLCJqIiwiZW5kIiwic29ydCIsInNwbGljZSIsImV4dGVuZCIsIm9wdGlvbnMiLCJuYW1lIiwic3JjIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJkZWVwIiwiaXNGdW5jdGlvbiIsImlzUGxhaW5PYmplY3QiLCJpc0FycmF5IiwidW5kZWZpbmVkIiwiZXhwYW5kbyIsIk1hdGgiLCJyYW5kb20iLCJyZXBsYWNlIiwiaXNSZWFkeSIsImVycm9yIiwibXNnIiwibm9vcCIsIkFycmF5IiwiaXNOdW1lcmljIiwicmVhbFN0cmluZ09iaiIsInBhcnNlRmxvYXQiLCJrZXkiLCJub2RlVHlwZSIsImlzRW1wdHlPYmplY3QiLCJnbG9iYWxFdmFsIiwiY29kZSIsInNjcmlwdCIsImluZGlyZWN0IiwiZXZhbCIsInRyaW0iLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImNhbWVsQ2FzZSIsInN0cmluZyIsIm5vZGVOYW1lIiwidG9Mb3dlckNhc2UiLCJtYWtlQXJyYXkiLCJyZXN1bHRzIiwiT2JqZWN0IiwiaW5BcnJheSIsInNlY29uZCIsImdyZXAiLCJpbnZlcnQiLCJtYXRjaGVzIiwiY2FsbGJhY2tFeHBlY3QiLCJhcmciLCJ2YWx1ZSIsImd1aWQiLCJwcm94eSIsInRtcCIsImFyZ3MiLCJub3ciLCJEYXRlIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJzcGxpdCIsIlNpenpsZSIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwic2V0RG9jdW1lbnQiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJwcmVmZXJyZWREb2MiLCJkaXJydW5zIiwiZG9uZSIsImNsYXNzQ2FjaGUiLCJjcmVhdGVDYWNoZSIsInRva2VuQ2FjaGUiLCJjb21waWxlckNhY2hlIiwic29ydE9yZGVyIiwiYSIsImIiLCJwb3AiLCJwdXNoX25hdGl2ZSIsImxpc3QiLCJib29sZWFucyIsIndoaXRlc3BhY2UiLCJpZGVudGlmaWVyIiwiYXR0cmlidXRlcyIsInBzZXVkb3MiLCJyd2hpdGVzcGFjZSIsIlJlZ0V4cCIsInJjb21tYSIsInJjb21iaW5hdG9ycyIsInJhdHRyaWJ1dGVRdW90ZXMiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJxdWlja0V4cHIiLCJyc2libGluZyIsInJlc2NhcGUiLCJydW5lc2NhcGUiLCJmdW5lc2NhcGUiLCJfIiwiZXNjYXBlZCIsImVzY2FwZWRXaGl0ZXNwYWNlIiwiaGlnaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInVubG9hZEhhbmRsZXIiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJtIiwibmlkIiwibmlkc2VsZWN0IiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwidG9TZWxlY3RvciIsImpvaW4iLCJ0ZXN0Q29udGV4dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxc2FFcnJvciIsInJlbW92ZUF0dHJpYnV0ZSIsImtleXMiLCJjYWNoZSIsImNhY2hlTGVuZ3RoIiwic2hpZnQiLCJtYXJrRnVuY3Rpb24iLCJhc3NlcnQiLCJkaXYiLCJhZGRIYW5kbGUiLCJhdHRycyIsImhhbmRsZXIiLCJhdHRySGFuZGxlIiwic2libGluZ0NoZWNrIiwiY3VyIiwiZGlmZiIsInNvdXJjZUluZGV4IiwibmV4dFNpYmxpbmciLCJjcmVhdGVJbnB1dFBzZXVkbyIsImNyZWF0ZUJ1dHRvblBzZXVkbyIsImNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8iLCJhcmd1bWVudCIsIm1hdGNoSW5kZXhlcyIsImRvY3VtZW50RWxlbWVudCIsIm5vZGUiLCJoYXNDb21wYXJlIiwicGFyZW50IiwiZG9jIiwiZGVmYXVsdFZpZXciLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmluZCIsImZpbHRlciIsImF0dHJJZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJpbm5lckhUTUwiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsInZhbCIsInNwZWNpZmllZCIsInVuaXF1ZVNvcnQiLCJkdXBsaWNhdGVzIiwiZGV0ZWN0RHVwbGljYXRlcyIsInNvcnRTdGFibGUiLCJ0ZXh0Q29udGVudCIsImZpcnN0Q2hpbGQiLCJub2RlVmFsdWUiLCJzZWxlY3RvcnMiLCJjcmVhdGVQc2V1ZG8iLCJyZWxhdGl2ZSIsIj4iLCJkaXIiLCIgIiwiKyIsIn4iLCJwcmVGaWx0ZXIiLCJleGNlc3MiLCJ1bnF1b3RlZCIsIm5vZGVOYW1lU2VsZWN0b3IiLCJwYXR0ZXJuIiwib3BlcmF0b3IiLCJjaGVjayIsInJlc3VsdCIsIndoYXQiLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwieG1sIiwidW5pcXVlQ2FjaGUiLCJvdXRlckNhY2hlIiwibm9kZUluZGV4Iiwic3RhcnQiLCJ1c2VDYWNoZSIsImxhc3RDaGlsZCIsInVuaXF1ZUlEIiwicHNldWRvIiwic2V0RmlsdGVycyIsImlkeCIsIm1hdGNoZWQiLCJub3QiLCJtYXRjaGVyIiwidW5tYXRjaGVkIiwiaGFzIiwiaW5uZXJUZXh0IiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsImxvY2F0aW9uIiwicm9vdCIsImZvY3VzIiwiYWN0aXZlRWxlbWVudCIsImhhc0ZvY3VzIiwiaHJlZiIsInRhYkluZGV4IiwiZW5hYmxlZCIsImRpc2FibGVkIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwiaGVhZGVyIiwiYnV0dG9uIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImFkZENvbWJpbmF0b3IiLCJjb21iaW5hdG9yIiwiYmFzZSIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJlbGVtZW50TWF0Y2hlcnMiLCJzZXRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwidG9rZW4iLCJjb21waWxlZCIsImRpdjEiLCJkZWZhdWx0VmFsdWUiLCJ1bmlxdWUiLCJpc1hNTERvYyIsInVudGlsIiwidHJ1bmNhdGUiLCJzaWJsaW5ncyIsIm4iLCJybmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsInJpc1NpbXBsZSIsIndpbm5vdyIsInF1YWxpZmllciIsInNlbGYiLCJyb290alF1ZXJ5IiwicmVhZHkiLCJwYXJzZUhUTUwiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsIm5leHQiLCJwcmV2Iiwic2libGluZyIsInRhcmdldHMiLCJsIiwiY2xvc2VzdCIsInBvcyIsImluZGV4IiwicHJldkFsbCIsImFkZCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsImNvbnRlbnREb2N1bWVudCIsInJldmVyc2UiLCJyZWFkeUxpc3QiLCJybm90d2hpdGUiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiQ2FsbGJhY2tzIiwib2JqZWN0IiwiZmxhZyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJwcm9taXNlIiwiYWx3YXlzIiwiZGVmZXJyZWQiLCJmYWlsIiwidGhlbiIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5IiwicmVzb2x2ZSIsInJlamVjdCIsInBpcGUiLCJzdGF0ZVN0cmluZyIsIndoZW4iLCJzdWJvcmRpbmF0ZSIsInByb2dyZXNzVmFsdWVzIiwicHJvZ3Jlc3NDb250ZXh0cyIsInJlc29sdmVDb250ZXh0cyIsInJlc29sdmVWYWx1ZXMiLCJyZW1haW5pbmciLCJ1cGRhdGVGdW5jIiwidmFsdWVzIiwibm90aWZ5V2l0aCIsInJlc29sdmVXaXRoIiwicmVhZHlXYWl0IiwiaG9sZFJlYWR5IiwiaG9sZCIsIndhaXQiLCJ0cmlnZ2VySGFuZGxlciIsIm9mZiIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsInNldFRpbWVvdXQiLCJhY2Nlc3MiLCJjaGFpbmFibGUiLCJlbXB0eUdldCIsInJhdyIsImJ1bGsiLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwicmVnaXN0ZXIiLCJpbml0aWFsIiwiZGVmaW5lUHJvcGVydHkiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldCIsImRhdGEiLCJwcm9wIiwic3RvcmVkIiwiY2FtZWwiLCJoYXNEYXRhIiwiZGF0YVByaXYiLCJkYXRhVXNlciIsInJicmFjZSIsInJtdWx0aURhc2giLCJkYXRhQXR0ciIsInBhcnNlSlNPTiIsInJlbW92ZURhdGEiLCJfZGF0YSIsIl9yZW1vdmVEYXRhIiwiY2FtZWxLZXkiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0hpZGRlbiIsImVsIiwiY3NzIiwiYWRqdXN0Q1NTIiwidmFsdWVQYXJ0cyIsInR3ZWVuIiwiYWRqdXN0ZWQiLCJzY2FsZSIsIm1heEl0ZXJhdGlvbnMiLCJjdXJyZW50VmFsdWUiLCJ1bml0IiwiY3NzTnVtYmVyIiwiaW5pdGlhbEluVW5pdCIsInN0eWxlIiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwid3JhcE1hcCIsIm9wdGlvbiIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwiZ2V0QWxsIiwic2V0R2xvYmFsRXZhbCIsInJlZkVsZW1lbnRzIiwib3B0Z3JvdXAiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJyaHRtbCIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJub2RlcyIsImh0bWxQcmVmaWx0ZXIiLCJjcmVhdGVUZXh0Tm9kZSIsImNoZWNrQ2xvbmUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsInJrZXlFdmVudCIsInJtb3VzZUV2ZW50IiwicnR5cGVuYW1lc3BhY2UiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJzYWZlQWN0aXZlRWxlbWVudCIsImVyciIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJoYW5kbGVPYmpJbiIsImV2ZW50SGFuZGxlIiwiZXZlbnRzIiwidCIsImhhbmRsZU9iaiIsInNwZWNpYWwiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJkZWxlZ2F0ZVR5cGUiLCJiaW5kVHlwZSIsIm5hbWVzcGFjZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsImZpeCIsImhhbmRsZXJRdWV1ZSIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJzdG9wUHJvcGFnYXRpb24iLCJwb3N0RGlzcGF0Y2giLCJzZWwiLCJpc05hTiIsInByb3BzIiwiZml4SG9va3MiLCJrZXlIb29rcyIsIm9yaWdpbmFsIiwid2hpY2giLCJjaGFyQ29kZSIsImtleUNvZGUiLCJtb3VzZUhvb2tzIiwiZXZlbnREb2MiLCJib2R5IiwicGFnZVgiLCJjbGllbnRYIiwic2Nyb2xsTGVmdCIsImNsaWVudExlZnQiLCJwYWdlWSIsImNsaWVudFkiLCJjbGllbnRUb3AiLCJvcmlnaW5hbEV2ZW50IiwiZml4SG9vayIsIkV2ZW50IiwibG9hZCIsIm5vQnViYmxlIiwidHJpZ2dlciIsImJsdXIiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInRpbWVTdGFtcCIsImlzU2ltdWxhdGVkIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvcmlnIiwicmVsYXRlZCIsInJlbGF0ZWRUYXJnZXQiLCJyeGh0bWxUYWciLCJybm9Jbm5lcmh0bWwiLCJyY2hlY2tlZCIsInJzY3JpcHRUeXBlTWFza2VkIiwicmNsZWFuU2NyaXB0IiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiY29udGVudCIsImRpc2FibGVTY3JpcHQiLCJyZXN0b3JlU2NyaXB0IiwiY2xvbmVDb3B5RXZlbnQiLCJkZXN0IiwicGRhdGFPbGQiLCJwZGF0YUN1ciIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJkb21NYW5pcCIsImNvbGxlY3Rpb24iLCJoYXNTY3JpcHRzIiwiaU5vQ2xvbmUiLCJodG1sIiwiX2V2YWxVcmwiLCJrZWVwRGF0YSIsImNsZWFuRGF0YSIsImRhdGFBbmRFdmVudHMiLCJkZWVwRGF0YUFuZEV2ZW50cyIsInNyY0VsZW1lbnRzIiwiZGVzdEVsZW1lbnRzIiwiaW5QYWdlIiwiZGV0YWNoIiwiYXBwZW5kIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsImJlZm9yZSIsImFmdGVyIiwicmVwbGFjZVdpdGgiLCJyZXBsYWNlQ2hpbGQiLCJhcHBlbmRUbyIsInByZXBlbmRUbyIsImluc2VydEFmdGVyIiwicmVwbGFjZUFsbCIsImluc2VydCIsImlmcmFtZSIsImVsZW1kaXNwbGF5IiwiSFRNTCIsIkJPRFkiLCJhY3R1YWxEaXNwbGF5IiwiZGlzcGxheSIsImRlZmF1bHREaXNwbGF5Iiwid3JpdGUiLCJjbG9zZSIsInJtYXJnaW4iLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJ2aWV3Iiwib3BlbmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInN3YXAiLCJvbGQiLCJjdXJDU1MiLCJjb21wdXRlZCIsIndpZHRoIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJwaXhlbE1hcmdpblJpZ2h0IiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJwaXhlbFBvc2l0aW9uVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJwaXhlbE1hcmdpblJpZ2h0VmFsIiwicmVsaWFibGVNYXJnaW5MZWZ0VmFsIiwiY29udGFpbmVyIiwiY29tcHV0ZVN0eWxlVGVzdHMiLCJjc3NUZXh0IiwiZGl2U3R5bGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsInBpeGVsUG9zaXRpb24iLCJib3hTaXppbmdSZWxpYWJsZSIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInJlbGlhYmxlTWFyZ2luUmlnaHQiLCJtYXJnaW5EaXYiLCJyZGlzcGxheXN3YXAiLCJjc3NTaG93IiwicG9zaXRpb24iLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJ2ZW5kb3JQcm9wTmFtZSIsImNhcE5hbWUiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF4IiwiYXVnbWVudFdpZHRoT3JIZWlnaHQiLCJleHRyYSIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiZ2V0V2lkdGhPckhlaWdodCIsInZhbHVlSXNCb3JkZXJCb3giLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsInNob3dIaWRlIiwic2hvdyIsImhpZGRlbiIsIlR3ZWVuIiwiZWFzaW5nIiwiY3NzSG9va3MiLCJvcGFjaXR5IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJjb2x1bW5Db3VudCIsImZpbGxPcGFjaXR5IiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwibGluZUhlaWdodCIsIm9yZGVyIiwib3JwaGFucyIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJjc3NQcm9wcyIsImZsb2F0Iiwib3JpZ05hbWUiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsImhpZGUiLCJ0b2dnbGUiLCJwcm9wSG9va3MiLCJydW4iLCJwZXJjZW50IiwiZWFzZWQiLCJkdXJhdGlvbiIsInN0ZXAiLCJmeCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJ0aW1lcklkIiwib3B0IiwicmZ4dHlwZXMiLCJycnVuIiwiY3JlYXRlRnhOb3ciLCJnZW5GeCIsImluY2x1ZGVXaWR0aCIsImhlaWdodCIsImNyZWF0ZVR3ZWVuIiwiYW5pbWF0aW9uIiwiQW5pbWF0aW9uIiwidHdlZW5lcnMiLCJwcm9wZXJ0aWVzIiwic3RvcHBlZCIsInByZWZpbHRlcnMiLCJ0aWNrIiwiY3VycmVudFRpbWUiLCJzdGFydFRpbWUiLCJ0d2VlbnMiLCJvcHRzIiwic3BlY2lhbEVhc2luZyIsIm9yaWdpbmFsUHJvcGVydGllcyIsIm9yaWdpbmFsT3B0aW9ucyIsImdvdG9FbmQiLCJyZWplY3RXaXRoIiwicHJvcEZpbHRlciIsInRpbWVyIiwiYW5pbSIsImNvbXBsZXRlIiwiKiIsInR3ZWVuZXIiLCJvbGRmaXJlIiwiZGF0YVNob3ciLCJ1bnF1ZXVlZCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwicHJlZmlsdGVyIiwic3BlZWQiLCJzcGVlZHMiLCJmYWRlVG8iLCJ0byIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwic2xvdyIsImZhc3QiLCJkZWxheSIsInRpbWUiLCJ0aW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiY2hlY2tPbiIsIm9wdFNlbGVjdGVkIiwib3B0RGlzYWJsZWQiLCJyYWRpb1ZhbHVlIiwiYm9vbEhvb2siLCJyZW1vdmVBdHRyIiwiblR5cGUiLCJhdHRySG9va3MiLCJwcm9wTmFtZSIsImF0dHJOYW1lcyIsInByb3BGaXgiLCJnZXR0ZXIiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInJlbW92ZVByb3AiLCJ0YWJpbmRleCIsInBhcnNlSW50IiwiZm9yIiwiY2xhc3MiLCJyY2xhc3MiLCJnZXRDbGFzcyIsImFkZENsYXNzIiwiY2xhc3NlcyIsImN1clZhbHVlIiwiY2xhenoiLCJmaW5hbFZhbHVlIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJyc3BhY2VzIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJyZm9jdXNNb3JwaCIsIm9ubHlIYW5kbGVycyIsImJ1YmJsZVR5cGUiLCJvbnR5cGUiLCJldmVudFBhdGgiLCJpc1RyaWdnZXIiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJmb2N1c2luIiwiYXR0YWNoZXMiLCJub25jZSIsInJxdWVyeSIsIkpTT04iLCJwYXJzZSIsInBhcnNlWE1MIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicmhhc2giLCJydHMiLCJyaGVhZGVycyIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJyZXNwb25zZUZpZWxkcyIsImNvbnZlcnRlcnMiLCIqIHRleHQiLCJ0ZXh0IGh0bWwiLCJ0ZXh0IGpzb24iLCJ0ZXh0IHhtbCIsImFqYXhTZXR1cCIsInNldHRpbmdzIiwiYWpheFByZWZpbHRlciIsImFqYXhUcmFuc3BvcnQiLCJhamF4IiwidHJhbnNwb3J0IiwiY2FjaGVVUkwiLCJyZXNwb25zZUhlYWRlcnNTdHJpbmciLCJyZXNwb25zZUhlYWRlcnMiLCJ0aW1lb3V0VGltZXIiLCJ1cmxBbmNob3IiLCJmaXJlR2xvYmFscyIsInMiLCJjYWxsYmFja0NvbnRleHQiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwic3RhdHVzQ29kZSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdEhlYWRlcnNOYW1lcyIsInN0ckFib3J0IiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwibG5hbWUiLCJvdmVycmlkZU1pbWVUeXBlIiwibWltZVR5cGUiLCJzdGF0dXMiLCJhYm9ydCIsInN0YXR1c1RleHQiLCJmaW5hbFRleHQiLCJzdWNjZXNzIiwibWV0aG9kIiwiY3Jvc3NEb21haW4iLCJob3N0IiwicGFyYW0iLCJ0cmFkaXRpb25hbCIsImhhc0NvbnRlbnQiLCJpZk1vZGlmaWVkIiwiaGVhZGVycyIsImJlZm9yZVNlbmQiLCJzZW5kIiwibmF0aXZlU3RhdHVzVGV4dCIsInJlc3BvbnNlcyIsImlzU3VjY2VzcyIsInJlc3BvbnNlIiwibW9kaWZpZWQiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJmaXJzdERhdGFUeXBlIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJkYXRhRmlsdGVyIiwidGhyb3dzIiwiYWpheENvbnZlcnQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0Iiwid3JhcEFsbCIsImZpcnN0RWxlbWVudENoaWxkIiwid3JhcElubmVyIiwidW53cmFwIiwidmlzaWJsZSIsImdldENsaWVudFJlY3RzIiwicjIwIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidiIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJ4aHJTdWNjZXNzU3RhdHVzIiwiMCIsIjEyMjMiLCJ4aHJTdXBwb3J0ZWQiLCJjb3JzIiwiZXJyb3JDYWxsYmFjayIsIm9wZW4iLCJ1c2VybmFtZSIsInhockZpZWxkcyIsIm9ubG9hZCIsIm9uZXJyb3IiLCJvbmFib3J0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVzcG9uc2VUeXBlIiwicmVzcG9uc2VUZXh0IiwiYmluYXJ5IiwidGV4dCBzY3JpcHQiLCJjaGFyc2V0Iiwic2NyaXB0Q2hhcnNldCIsImV2dCIsIm9sZENhbGxiYWNrcyIsInJqc29ucCIsImpzb25wIiwianNvbnBDYWxsYmFjayIsIm9yaWdpbmFsU2V0dGluZ3MiLCJjYWxsYmFja05hbWUiLCJvdmVyd3JpdHRlbiIsInJlc3BvbnNlQ29udGFpbmVyIiwianNvblByb3AiLCJrZWVwU2NyaXB0cyIsInBhcnNlZCIsIl9sb2FkIiwiZ2V0V2luZG93IiwicGFyYW1zIiwiYW5pbWF0ZWQiLCJzZXRPZmZzZXQiLCJjdXJQb3NpdGlvbiIsImN1ckxlZnQiLCJjdXJDU1NUb3AiLCJjdXJUb3AiLCJjdXJPZmZzZXQiLCJjdXJDU1NMZWZ0IiwiY3VyRWxlbSIsInVzaW5nIiwid2luIiwiYm94IiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsImJpbmQiLCJ1bmJpbmQiLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJzaXplIiwiYW5kU2VsZiIsImRlZmluZSIsImFtZCIsIl9qUXVlcnkiLCJfJCIsIm5vQ29uZmxpY3QiLCJyZXF1aXJlIiwibyIsImMiLCJkIiwiZW51bWVyYWJsZSIsInIiLCJ0b1N0cmluZ1RhZyIsIl9fZXNNb2R1bGUiLCJjcmVhdGUiLCJkZWZhdWx0IiwiLi9qcy9lbnRyaWVzL2ZvdW5kYXRpb24uanMiLCJGb3VuZGF0aW9uIiwiQm94Iiwib25JbWFnZXNMb2FkZWQiLCJ1IiwiS2V5Ym9hcmQiLCJNZWRpYVF1ZXJ5IiwiTW90aW9uIiwiaCIsIk5lc3QiLCJmIiwiVGltZXIiLCJUb3VjaCIsIlRyaWdnZXJzIiwiZyIsIkFiaWRlIiwiQWNjb3JkaW9uIiwieSIsIkFjY29yZGlvbk1lbnUiLCJEcmlsbGRvd24iLCJEcm9wZG93biIsIkRyb3Bkb3duTWVudSIsIkVxdWFsaXplciIsIkludGVyY2hhbmdlIiwiayIsIk1hZ2VsbGFuIiwiTyIsIk9mZkNhbnZhcyIsIkMiLCJPcmJpdCIsInoiLCJSZXNwb25zaXZlTWVudSIsIlQiLCJSZXNwb25zaXZlVG9nZ2xlIiwiUyIsIlJldmVhbCIsIlAiLCJTbGlkZXIiLCJFIiwiU21vb3RoU2Nyb2xsIiwiQSIsIlN0aWNreSIsIngiLCJUYWJzIiwiTCIsIlRvZ2dsZXIiLCJSIiwiVG9vbHRpcCIsIk0iLCJSZXNwb25zaXZlQWNjb3JkaW9uVGFicyIsImFkZFRvSnF1ZXJ5IiwicnRsIiwiR2V0WW9EaWdpdHMiLCJ0cmFuc2l0aW9uZW5kIiwiUmVnRXhwRXNjYXBlIiwib25Mb2FkIiwiTW92ZSIsIl9pbml0IiwicGx1Z2luIiwiLi9qcy9mb3VuZGF0aW9uLmFiaWRlLmpzIiwic2V0UHJvdG90eXBlT2YiLCJnZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIlR5cGVFcnJvciIsIlJlZmVyZW5jZUVycm9yIiwiJGVsZW1lbnQiLCJkZWZhdWx0cyIsIiRpbnB1dHMiLCJhMTF5QXR0cmlidXRlcyIsImFkZEExMXlBdHRyaWJ1dGVzIiwiYWRkR2xvYmFsRXJyb3JBMTF5QXR0cmlidXRlcyIsIl9ldmVudHMiLCJyZXNldEZvcm0iLCJ2YWxpZGF0ZUZvcm0iLCJ2YWxpZGF0ZU9uIiwidmFsaWRhdGVJbnB1dCIsImxpdmVWYWxpZGF0ZSIsInZhbGlkYXRlT25CbHVyIiwiZm9ybUVycm9yU2VsZWN0b3IiLCJmaW5kTGFiZWwiLCJmaW5kRm9ybUVycm9yIiwibGFiZWxFcnJvckNsYXNzIiwiZm9ybUVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJkYXRhLWludmFsaWQiLCJhcmlhLWludmFsaWQiLCJhMTF5RXJyb3JMZXZlbCIsImZpbmRSYWRpb0xhYmVscyIsInJlbW92ZVJhZGlvRXJyb3JDbGFzc2VzIiwicmVxdWlyZWRDaGVjayIsInZhbGlkYXRlUmFkaW8iLCJ2YWxpZGF0ZVRleHQiLCJtYXRjaFZhbGlkYXRpb24iLCJ2YWxpZGF0b3JzIiwiZXF1YWxUbyIsInBhdHRlcm5zIiwicmVtb3ZlRXJyb3JDbGFzc2VzIiwiYWxwaGEiLCJhbHBoYV9udW1lcmljIiwiaW50ZWdlciIsIm51bWJlciIsImNhcmQiLCJjdnYiLCJlbWFpbCIsImRvbWFpbiIsImRhdGV0aW1lIiwiZGF0ZSIsImRhdGVJU08iLCJtb250aF9kYXlfeWVhciIsImRheV9tb250aF95ZWFyIiwiY29sb3IiLCJ3ZWJzaXRlIiwiLi9qcy9mb3VuZGF0aW9uLmFjY29yZGlvbi5qcyIsIkVOVEVSIiwiU1BBQ0UiLCJBUlJPV19ET1dOIiwiQVJST1dfVVAiLCJfaXNJbml0aWFsaXppbmciLCIkdGFicyIsImFyaWEtY29udHJvbHMiLCJyb2xlIiwiYXJpYS1leHBhbmRlZCIsImFyaWEtc2VsZWN0ZWQiLCJhcmlhLWxhYmVsbGVkYnkiLCJhcmlhLWhpZGRlbiIsIl9pbml0aWFsQW5jaG9yIiwiX29wZW5TaW5nbGVUYWIiLCJfY2hlY2tEZWVwTGluayIsIl9jbG9zZUFsbFRhYnMiLCJkZWVwTGlua1NtdWRnZSIsImRlZXBMaW5rU211ZGdlRGVsYXkiLCJkZWVwTGluayIsImhhbmRsZUtleSIsIm11bHRpRXhwYW5kIiwicHJldmlvdXMiLCJoYW5kbGVkIiwiY29uc29sZSIsImluZm8iLCJ1cCIsImRvd24iLCJ1cGRhdGVIaXN0b3J5IiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsInJlcGxhY2VTdGF0ZSIsIl9vcGVuVGFiIiwiYWxsb3dBbGxDbG9zZWQiLCJfY2xvc2VUYWIiLCJzbGlkZVNwZWVkIiwiLi9qcy9mb3VuZGF0aW9uLmFjY29yZGlvbk1lbnUuanMiLCJBUlJPV19SSUdIVCIsIkFSUk9XX0xFRlQiLCJFU0NBUEUiLCJGZWF0aGVyIiwiYXJpYS1tdWx0aXNlbGVjdGFibGUiLCJtdWx0aU9wZW4iLCIkbWVudUxpbmtzIiwicGFyZW50TGluayIsInN1Ym1lbnVUb2dnbGUiLCJzdWJtZW51VG9nZ2xlVGV4dCIsIm1pbiIsImNsb3NlQWxsIiwiaGlkZUFsbCIsIkJ1cm4iLCIuL2pzL2ZvdW5kYXRpb24uY29yZS5qcyIsIl9wbHVnaW5zIiwiX3V1aWRzIiwicmVnaXN0ZXJQbHVnaW4iLCJ1dWlkIiwidW5yZWdpc3RlclBsdWdpbiIsInJlSW5pdCIsImZvckVhY2giLCJmb3VuZGF0aW9uIiwicmVmbG93Iiwid2FybiIsImdldEZuTmFtZSIsIkZ1bmN0aW9uIiwidXRpbCIsInRocm90dGxlIiwiZ2V0VGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwicGVyZm9ybWFuY2UiLCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanMiLCJfc2V0dXAiLCJfZGVzdHJveSIsIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzIiwicm91bmQiLCJwb3ciLCJ0cmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb24iLCJPVHJhbnNpdGlvbiIsImlnbm9yZUxlYXZlV2luZG93IiwiaWdub3JlUmVhcHBlYXIiLCIuL2pzL2ZvdW5kYXRpb24uZHJpbGxkb3duLmpzIiwiVEFCIiwiU0hJRlRfVEFCIiwiYXV0b0FwcGx5Q2xhc3MiLCIkc3VibWVudUFuY2hvcnMiLCIkc3VibWVudXMiLCIkbWVudUl0ZW1zIiwiJGN1cnJlbnRNZW51IiwiX3ByZXBhcmVNZW51IiwiX3JlZ2lzdGVyRXZlbnRzIiwiX2tleWJvYXJkRXZlbnRzIiwiYmFja0J1dHRvblBvc2l0aW9uIiwiYmFja0J1dHRvbiIsIl9iYWNrIiwiYXV0b0hlaWdodCIsIiR3cmFwcGVyIiwid3JhcHBlciIsImFuaW1hdGVIZWlnaHQiLCJfZ2V0TWF4RGltcyIsIm1heC13aWR0aCIsIm1pbi1oZWlnaHQiLCJfc2hvdyIsImNsb3NlT25DbGljayIsIl9oaWRlQWxsIiwiX2JpbmRIYW5kbGVyIiwiX3Njcm9sbFRvcCIsIl9yZXNpemUiLCJzY3JvbGxUb3BFbGVtZW50Iiwic2Nyb2xsVG9wT2Zmc2V0IiwiYW5pbWF0aW9uRHVyYXRpb24iLCJhbmltYXRpb25FYXNpbmciLCJfaGlkZSIsIl9zZXRIaWRlU3ViTWVudUNsYXNzZXMiLCJfc2V0U2hvd1N1Yk1lbnVDbGFzc2VzIiwiR2V0RGltZW5zaW9ucyIsIi4vanMvZm91bmRhdGlvbi5kcm9wZG93bi5qcyIsIlJlZmxlY3QiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCIkYW5jaG9ycyIsImRhdGEtaXMtZm9jdXMiLCJkYXRhLXlldGktYm94IiwiYXJpYS1oYXNwb3B1cCIsIl9zZXRDdXJyZW50QW5jaG9yIiwicGFyZW50Q2xhc3MiLCIkcGFyZW50IiwiJGN1cnJlbnRBbmNob3IiLCJkYXRhLXJlc2l6ZSIsImFsaWdubWVudCIsIm9wZW4uemYudHJpZ2dlciIsImNsb3NlLnpmLnRyaWdnZXIiLCJ0b2dnbGUuemYudHJpZ2dlciIsInJlc2l6ZW1lLnpmLnRyaWdnZXIiLCJfc2V0UG9zaXRpb24iLCJ3aGF0aW5wdXQiLCJob3ZlckRlbGF5IiwiaWdub3JlTW91c2VkaXNhcHBlYXIiLCJob3ZlclBhbmUiLCJmaW5kRm9jdXNhYmxlIiwiYXV0b0ZvY3VzIiwiX2FkZEJvZHlIYW5kbGVyIiwidHJhcEZvY3VzIiwicmVsZWFzZUZvY3VzIiwidk9mZnNldCIsImhPZmZzZXQiLCJhbGxvd092ZXJsYXAiLCJhbGxvd0JvdHRvbU92ZXJsYXAiLCIuL2pzL2ZvdW5kYXRpb24uZHJvcGRvd25NZW51LmpzIiwidmVydGljYWxDbGFzcyIsInJpZ2h0Q2xhc3MiLCJjaGFuZ2VkIiwib250b3VjaHN0YXJ0IiwiY2xpY2tPcGVuIiwiZm9yY2VGb2xsb3ciLCJjbG9zZU9uQ2xpY2tJbnNpZGUiLCJkaXNhYmxlSG92ZXIiLCJhdXRvY2xvc2UiLCJjbG9zaW5nVGltZSIsIl9pc1ZlcnRpY2FsIiwiX2lzUnRsIiwiSW1Ob3RUb3VjaGluZ1lvdSIsImRhdGEtaXMtY2xpY2siLCIuL2pzL2ZvdW5kYXRpb24uZXF1YWxpemVyLmpzIiwiJHdhdGNoZWQiLCJoYXNOZXN0ZWQiLCJpc05lc3RlZCIsImlzT24iLCJvblJlc2l6ZU1lQm91bmQiLCJfb25SZXNpemVNZSIsIm9uUG9zdEVxdWFsaXplZEJvdW5kIiwiX29uUG9zdEVxdWFsaXplZCIsImVxdWFsaXplT24iLCJfY2hlY2tNUSIsIl9yZWZsb3ciLCIuemYuZXF1YWxpemVyIiwibXV0YXRlbWUuemYudHJpZ2dlciIsIl9wYXVzZUV2ZW50cyIsImVxdWFsaXplT25TdGFjayIsIl9pc1N0YWNrZWQiLCJlcXVhbGl6ZUJ5Um93IiwiZ2V0SGVpZ2h0c0J5Um93IiwiYXBwbHlIZWlnaHRCeVJvdyIsImdldEhlaWdodHMiLCJhcHBseUhlaWdodCIsIi4vanMvZm91bmRhdGlvbi5pbnRlcmNoYW5nZS5qcyIsInJ1bGVzIiwiY3VycmVudFBhdGgiLCJfYWRkQnJlYWtwb2ludHMiLCJfZ2VuZXJhdGVSdWxlcyIsIm1hdGNoTWVkaWEiLCJxdWVyeSIsInBhdGgiLCJxdWVyaWVzIiwiU1BFQ0lBTF9RVUVSSUVTIiwiYmFja2dyb3VuZC1pbWFnZSIsImxhbmRzY2FwZSIsInBvcnRyYWl0IiwicmV0aW5hIiwiLi9qcy9mb3VuZGF0aW9uLm1hZ2VsbGFuLmpzIiwiY2FsY1BvaW50cyIsIiR0YXJnZXRzIiwiJGxpbmtzIiwiZGF0YS1zY3JvbGwiLCIkYWN0aXZlIiwic2Nyb2xsUG9zIiwicG9pbnRzIiwid2luSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJkb2NIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJ0aHJlc2hvbGQiLCJ0YXJnZXRQb2ludCIsImRlZXBMaW5raW5nIiwic2Nyb2xsVG9Mb2MiLCJfdXBkYXRlQWN0aXZlIiwib25Mb2FkTGlzdGVuZXIiLCJzY3JvbGxtZS56Zi50cmlnZ2VyIiwiX2RlZXBMaW5rU2Nyb2xsIiwiX2luVHJhbnNpdGlvbiIsImFjdGl2ZUNsYXNzIiwicGF0aG5hbWUiLCJzZWFyY2giLCIuL2pzL2ZvdW5kYXRpb24ub2ZmY2FudmFzLmpzIiwiY29udGVudENsYXNzZXMiLCJyZXZlYWwiLCIkbGFzdFRyaWdnZXIiLCIkdHJpZ2dlcnMiLCIkY29udGVudCIsIm5lc3RlZCIsImNvbnRlbnRJZCIsImNvbnRlbnRPdmVybGF5IiwiJG92ZXJsYXkiLCJyZXZlYWxDbGFzcyIsImlzUmV2ZWFsZWQiLCJyZXZlYWxPbiIsIl9zZXRNUUNoZWNrZXIiLCJ0cmFuc2l0aW9uVGltZSIsIl9yZW1vdmVDb250ZW50Q2xhc3NlcyIsImtleWRvd24uemYub2ZmY2FudmFzIiwiX2hhbmRsZUtleWJvYXJkIiwiY2xpY2suemYub2ZmY2FudmFzIiwiYXRMZWFzdCIsIl9hZGRDb250ZW50Q2xhc3NlcyIsImFsbG93VXAiLCJhbGxvd0Rvd24iLCJsYXN0WSIsImZvcmNlVG8iLCJjb250ZW50U2Nyb2xsIiwiX3N0b3BTY3JvbGxpbmciLCJfcmVjb3JkU2Nyb2xsYWJsZSIsIl9zdG9wU2Nyb2xsUHJvcGFnYXRpb24iLCIuL2pzL2ZvdW5kYXRpb24ub3JiaXQuanMiLCJsdHIiLCJfcmVzZXQiLCJjb250YWluZXJDbGFzcyIsIiRzbGlkZXMiLCJzbGlkZUNsYXNzIiwidXNlTVVJIiwiX3ByZXBhcmVGb3JPcmJpdCIsImJ1bGxldHMiLCJfbG9hZEJ1bGxldHMiLCJhdXRvUGxheSIsImdlb1N5bmMiLCJhY2Nlc3NpYmxlIiwiJGJ1bGxldHMiLCJib3hPZkJ1bGxldHMiLCJ0aW1lckRlbGF5IiwiaW5maW5pdGUiLCJjaGFuZ2VTbGlkZSIsIl9zZXRXcmFwcGVySGVpZ2h0Iiwic3dpcGUiLCJwYXVzZU9uSG92ZXIiLCJwYXVzZSIsIm5hdkJ1dHRvbnMiLCJuZXh0Q2xhc3MiLCJwcmV2Q2xhc3MiLCJyZXN0YXJ0IiwiX3VwZGF0ZUJ1bGxldHMiLCJpbmZpbml0ZVdyYXAiLCJhbmltYXRlSW4iLCJhbmltYXRlT3V0IiwiaXNQYXVzZWQiLCJhbmltSW5Gcm9tUmlnaHQiLCJhbmltT3V0VG9SaWdodCIsImFuaW1JbkZyb21MZWZ0IiwiYW5pbU91dFRvTGVmdCIsIi4vanMvZm91bmRhdGlvbi5wb3NpdGlvbmFibGUuanMiLCJyaWdodCIsImJvdHRvbSIsInRyaWVkUG9zaXRpb25zIiwiX2dldERlZmF1bHRQb3NpdGlvbiIsIl9nZXREZWZhdWx0QWxpZ25tZW50Iiwib3JpZ2luYWxQb3NpdGlvbiIsIm9yaWdpbmFsQWxpZ25tZW50IiwiX2FsaWdubWVudHNFeGhhdXN0ZWQiLCJfcmVhbGlnbiIsIl9hZGRUcmllZFBvc2l0aW9uIiwiR2V0RXhwbGljaXRPZmZzZXRzIiwiX2dldFZPZmZzZXQiLCJfZ2V0SE9mZnNldCIsIl9wb3NpdGlvbnNFeGhhdXN0ZWQiLCJPdmVybGFwQXJlYSIsIl9yZXBvc2l0aW9uIiwiLi9qcy9mb3VuZGF0aW9uLnJlc3BvbnNpdmVBY2NvcmRpb25UYWJzLmpzIiwidGFicyIsImNzc0NsYXNzIiwiYWNjb3JkaW9uIiwiY3VycmVudE1xIiwiY3VycmVudFBsdWdpbiIsIl9nZXRBbGxPcHRpb25zIiwiX2NoZWNrTWVkaWFRdWVyaWVzIiwiYWxsT3B0aW9ucyIsImRlc3Ryb3kiLCJfY2hhbmdlZFpmTWVkaWFRdWVyeUhhbmRsZXIiLCJzdG9yZXpmRGF0YSIsIl9oYW5kbGVNYXJrdXAiLCJsaW5rQ2xhc3MiLCJwYW5lbENsYXNzIiwiLi9qcy9mb3VuZGF0aW9uLnJlc3BvbnNpdmVNZW51LmpzIiwiZHJvcGRvd24iLCJkcmlsbGRvd24iLCIuL2pzL2ZvdW5kYXRpb24ucmVzcG9uc2l2ZVRvZ2dsZS5qcyIsIiR0YXJnZXRNZW51IiwiJHRvZ2dsZXIiLCJhbmltYXRpb25JbiIsImFuaW1hdGlvbk91dCIsIl91cGRhdGUiLCJfdXBkYXRlTXFIYW5kbGVyIiwidG9nZ2xlTWVudSIsImhpZGVGb3IiLCIuL2pzL2ZvdW5kYXRpb24ucmV2ZWFsLmpzIiwiaXNBY3RpdmUiLCJtcSIsIiRhbmNob3IiLCJmdWxsU2NyZWVuIiwib3ZlcmxheSIsIl9tYWtlT3ZlcmxheSIsImFkZGl0aW9uYWxPdmVybGF5Q2xhc3NlcyIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsIl91cGRhdGVQb3NpdGlvbiIsIl9oYW5kbGVTdGF0ZSIsIiRhY3RpdmVBbmNob3IiLCJtdWx0aXBsZU9wZW5lZCIsIl9kaXNhYmxlU2Nyb2xsIiwiZm9jdXNhYmxlRWxlbWVudHMiLCJfYWRkR2xvYmFsQ2xhc3NlcyIsInNob3dEZWxheSIsIl9hZGRHbG9iYWxMaXN0ZW5lcnMiLCJjbG9zZU9uRXNjIiwiX3JlbW92ZUdsb2JhbENsYXNzZXMiLCJfZW5hYmxlU2Nyb2xsIiwiaGlkZURlbGF5IiwicmVzZXRPbkNsb3NlIiwidGl0bGUiLCIuL2pzL2ZvdW5kYXRpb24uc2xpZGVyLmpzIiwiU0hJRlRfQVJST1dfUklHSFQiLCJTSElGVF9BUlJPV19VUCIsIlNISUZUX0FSUk9XX0RPV04iLCJTSElGVF9BUlJPV19MRUZUIiwiSE9NRSIsIkVORCIsImlucHV0cyIsImhhbmRsZXMiLCIkaGFuZGxlIiwiJGlucHV0IiwiJGZpbGwiLCJ2ZXJ0aWNhbCIsImRpc2FibGVkQ2xhc3MiLCJiaW5kaW5nIiwiX3NldEluaXRBdHRyIiwiZG91YmxlU2lkZWQiLCIkaGFuZGxlMiIsIiRpbnB1dDIiLCJzZXRIYW5kbGVzIiwiX3NldEhhbmRsZVBvcyIsInBvc2l0aW9uVmFsdWVGdW5jdGlvbiIsIl9sb2dUcmFuc2Zvcm0iLCJfcG93VHJhbnNmb3JtIiwidG9GaXhlZCIsIm5vbkxpbmVhckJhc2UiLCJsb2ciLCJfcGN0T2ZCYXIiLCJkZWNpbWFsIiwiX3NldFZhbHVlcyIsImluaXRpYWxTdGFydCIsIm1vdmVUaW1lIiwiY2hhbmdlZERlbGF5IiwiaW5pdGlhbEVuZCIsImFyaWEtdmFsdWVtYXgiLCJhcmlhLXZhbHVlbWluIiwiYXJpYS12YWx1ZW5vdyIsImFyaWEtb3JpZW50YXRpb24iLCJfYWRqdXN0VmFsdWUiLCJfdmFsdWUiLCJfZXZlbnRzRm9ySGFuZGxlIiwiX2hhbmRsZUV2ZW50IiwiY2xpY2tTZWxlY3QiLCJkcmFnZ2FibGUiLCJhZGRUb3VjaCIsImRlY3JlYXNlIiwiaW5jcmVhc2UiLCJkZWNyZWFzZV9mYXN0IiwiaW5jcmVhc2VfZmFzdCIsImFicyIsImludmVydFZlcnRpY2FsIiwiLi9qcy9mb3VuZGF0aW9uLnNtb290aFNjcm9sbC5qcyIsIl9oYW5kbGVMaW5rQ2xpY2siLCIuL2pzL2ZvdW5kYXRpb24uc3RpY2t5LmpzIiwiJGNvbnRhaW5lciIsIndhc1dyYXBwZWQiLCJzdGlja3lDbGFzcyIsImRhdGEtbXV0YXRlIiwiYW5jaG9yIiwic2Nyb2xsQ291bnQiLCJjaGVja0V2ZXJ5IiwiaXNTdHVjayIsImNvbnRhaW5lckhlaWdodCIsImVsZW1IZWlnaHQiLCJfcGFyc2VQb2ludHMiLCJfc2V0U2l6ZXMiLCJfY2FsYyIsIl9yZW1vdmVTdGlja3kiLCJ0b3BQb2ludCIsInRvcEFuY2hvciIsImJ0bUFuY2hvciIsInNjcm9sbExpc3RlbmVyIiwiY2FuU3RpY2siLCJfZXZlbnRzSGFuZGxlciIsIl9wYXVzZUxpc3RlbmVycyIsImJvdHRvbVBvaW50IiwiX3NldFN0aWNreSIsInN0aWNrVG8iLCJhbmNob3JIZWlnaHQiLCJzdGlja3lPbiIsIl9zZXRCcmVha1BvaW50cyIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsImZvbnRTaXplIiwiLi9qcy9mb3VuZGF0aW9uLnRhYnMuanMiLCIkdGFiVGl0bGVzIiwiJHRhYkNvbnRlbnQiLCJsaW5rQWN0aXZlQ2xhc3MiLCJtYXRjaEhlaWdodCIsIl9zZXRIZWlnaHQiLCJzZWxlY3RUYWIiLCJfY29sbGFwc2UiLCJfYWRkS2V5SGFuZGxlciIsIl9hZGRDbGlja0hhbmRsZXIiLCJfc2V0SGVpZ2h0TXFIYW5kbGVyIiwiX2hhbmRsZVRhYkNoYW5nZSIsIndyYXBPbktleXMiLCJhY3RpdmVDb2xsYXBzZSIsIl9jb2xsYXBzZVRhYiIsInBhbmVsQWN0aXZlQ2xhc3MiLCIuL2pzL2ZvdW5kYXRpb24udG9nZ2xlci5qcyIsIl91cGRhdGVBUklBIiwiLi9qcy9mb3VuZGF0aW9uLnRvb2x0aXAuanMiLCJpc0NsaWNrIiwidGlwVGV4dCIsInRlbXBsYXRlIiwiX2J1aWxkVGVtcGxhdGUiLCJhbGxvd0h0bWwiLCJhcmlhLWRlc2NyaWJlZGJ5IiwiZGF0YS10b2dnbGUiLCJ0cmlnZ2VyQ2xhc3MiLCJ0b29sdGlwV2lkdGgiLCJ0b29sdGlwSGVpZ2h0IiwidG9vbHRpcENsYXNzIiwidGVtcGxhdGVDbGFzc2VzIiwiZGF0YS1pcy1hY3RpdmUiLCJzaG93T24iLCJmYWRlSW5EdXJhdGlvbiIsImZhZGVPdXREdXJhdGlvbiIsImRpc2FibGVGb3JUb3VjaCIsInRvdWNoQ2xvc2VUZXh0IiwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuYm94LmpzIiwiR2V0T2Zmc2V0cyIsIiRlbGVEaW1zIiwid2luZG93RGltcyIsIiRhbmNob3JEaW1zIiwic3FydCIsInBhcmVudERpbXMiLCIuL2pzL2ZvdW5kYXRpb24udXRpbC5pbWFnZUxvYWRlci5qcyIsIm5hdHVyYWxXaWR0aCIsIkltYWdlIiwiLi9qcy9mb3VuZGF0aW9uLnV0aWwua2V5Ym9hcmQuanMiLCI5IiwiMTMiLCIyNyIsIjMyIiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwic2hpZnRLZXkiLCJjdHJsS2V5IiwiYWx0S2V5IiwicGFyc2VLZXkiLCJ1bmhhbmRsZWQiLCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tZWRpYVF1ZXJ5LmpzIiwic3R5bGVNZWRpYSIsIm1lZGlhIiwiY3VycmVudFN0eWxlIiwibWF0Y2hNZWRpdW0iLCJzdHlsZVNoZWV0IiwicmVkdWNlIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiX2dldEN1cnJlbnRTaXplIiwiX3dhdGNoZXIiLCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tb3Rpb24uanMiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCIuL2pzL2ZvdW5kYXRpb24udXRpbC5uZXN0LmpzIiwiZGF0YS1zdWJtZW51IiwiYXJpYS1sYWJlbCIsIi4vanMvZm91bmRhdGlvbi51dGlsLnRpbWVyLmpzIiwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudG91Y2guanMiLCJzcG90U3dpcGUiLCJ0b3VjaGVzIiwibW92ZVRocmVzaG9sZCIsInRpbWVUaHJlc2hvbGQiLCJ0YXAiLCJzZXR1cFNwb3RTd2lwZSIsInNldHVwVG91Y2hIYW5kbGVyIiwiY2hhbmdlZFRvdWNoZXMiLCJ0b3VjaHN0YXJ0IiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJNb3VzZUV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNyZWF0ZUV2ZW50IiwiaW5pdE1vdXNlRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudHJpZ2dlcnMuanMiLCJMaXN0ZW5lcnMiLCJCYXNpYyIsIkdsb2JhbCIsIkluaXRpYWxpemVycyIsIm9wZW5MaXN0ZW5lciIsImNsb3NlTGlzdGVuZXIiLCJ0b2dnbGVMaXN0ZW5lciIsImNsb3NlYWJsZUxpc3RlbmVyIiwidG9nZ2xlRm9jdXNMaXN0ZW5lciIsImFkZE9wZW5MaXN0ZW5lciIsImFkZENsb3NlTGlzdGVuZXIiLCJhZGRUb2dnbGVMaXN0ZW5lciIsImFkZENsb3NlYWJsZUxpc3RlbmVyIiwiYWRkVG9nZ2xlRm9jdXNMaXN0ZW5lciIsInJlc2l6ZUxpc3RlbmVyIiwiY2xvc2VNZUxpc3RlbmVyIiwiYWRkQ2xvc2VtZUxpc3RlbmVyIiwiYWRkUmVzaXplTGlzdGVuZXIiLCJhZGRTY3JvbGxMaXN0ZW5lciIsImFkZE11dGF0aW9uRXZlbnRzTGlzdGVuZXIiLCJhdHRyaWJ1dGVOYW1lIiwib2JzZXJ2ZSIsImNoaWxkTGlzdCIsImNoYXJhY3RlckRhdGEiLCJzdWJ0cmVlIiwiYXR0cmlidXRlRmlsdGVyIiwiYWRkU2ltcGxlTGlzdGVuZXJzIiwiYWRkR2xvYmFsTGlzdGVuZXJzIiwidHJpZ2dlcnNJbml0aWFsaXplZCIsIklIZWFyWW91IiwiYWpheEVtYWlsU2VuZGVyIiwiYWN0aW9uIiwiaG9zdG5hbWUiLCJlcnJvclRleHQiLCJtZXNzYWdlQ29udGFpbmVyIiwiZXJyb3JDb2xvciIsInN1Y2Nlc0NvbG9yIiwic3VibWl0QnRuIiwiYXV0b3JpemF0aW9uVG9rZW4iLCJzdXBwb3J0RW1haWwiLCJmb3JtIiwiZm9ybURhdGEiLCJmb3JtRGF0YUpzb24iLCJkb21haW5OYW1lIiwic3RyaW5naWZ5IiwicmVxdWVzdCIsIm1lc3NhZ2UiLCJnZXRBZGRyZXNzIiwic2l0ZSIsImNvcnBfaWQiLCJjb3VudHJ5X2NvZGUiLCJhZGRyZXNzVVMiLCJjb3JwTmFtZSIsImFkZHJlc3NDb250YWluZXIiLCJ0b2dnbGVzIiwiY2xhc3NMaXN0IiwicmVzaXplIiwiZXYiXSwibWFwcGluZ3MiOiJBQW90VEEsU0FBU0EsY0FBY0MsR0FDbkJBLEVBQU1DLGlCQUVOLElBQUlDLEVBQVNDLEVBQUVILEVBQU1FLFFBQVFFLEtBQUssUUFDOUJDLEVBQVlGLEVBQUVELEdBQVFJLFNBQVNDLElBRS9C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QUN2QjFwQixFQUFFLFVBQVVxM0IsWUFBWSxPQUUxQnIzQixFQUFFZ0IsUUFBUWd6RCxPQUFPLFdBQ1MsSUFBcEJoMEQsRUFBRWdCLFFBQVFxdEIsU0FDWnJ1QixFQUFFLFVBQVV1NEIsV0FBVyxhQXNCN0J2NEIsRUFBRSxpQkFBaUI0bEIsR0FBRyxRQUFTaG1CLGVBRS9CSSxFQUFFLGVBQWU4M0IsTUFBTSxLQUFNUCxRQUFRLEtBRXJDdjNCLEVBQUUsa0JBQWtCNGxCLEdBQUcsU0FBVSxTQUFVcXVDLEVBQUlud0QsR0FDM0Ntd0QsRUFBR24wRCxtQkFFUEUsRUFBRSxrQkFBa0JzeUQsZ0JBQWdCLENBQ2hDcmtCLE9BQVEsb0JBQ1I2a0Isa0JBQW1CLDBQQUNuQmp6RCxNQUFPLHFCQUNQa3pELGFBQWMsOEJBR2xCLElBQUlRLFdBQWEsQ0FDYkMsS0FBTSxnQkFDTkMsUUFBUyxNQUNUQyxhQUFjLEtBQ2RHLGlCQUFrQjd6RCxFQUFFIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjIuMi40XG4gKiBodHRwOi8vanF1ZXJ5LmNvbS9cbiAqXG4gKiBJbmNsdWRlcyBTaXp6bGUuanNcbiAqIGh0dHA6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTYtMDUtMjBUMTc6MjNaXG4gKi9cblxuKGZ1bmN0aW9uKCBnbG9iYWwsIGZhY3RvcnkgKSB7XG5cblx0aWYgKCB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHQvLyBGb3IgQ29tbW9uSlMgYW5kIENvbW1vbkpTLWxpa2UgZW52aXJvbm1lbnRzIHdoZXJlIGEgcHJvcGVyIGB3aW5kb3dgXG5cdFx0Ly8gaXMgcHJlc2VudCwgZXhlY3V0ZSB0aGUgZmFjdG9yeSBhbmQgZ2V0IGpRdWVyeS5cblx0XHQvLyBGb3IgZW52aXJvbm1lbnRzIHRoYXQgZG8gbm90IGhhdmUgYSBgd2luZG93YCB3aXRoIGEgYGRvY3VtZW50YFxuXHRcdC8vIChzdWNoIGFzIE5vZGUuanMpLCBleHBvc2UgYSBmYWN0b3J5IGFzIG1vZHVsZS5leHBvcnRzLlxuXHRcdC8vIFRoaXMgYWNjZW50dWF0ZXMgdGhlIG5lZWQgZm9yIHRoZSBjcmVhdGlvbiBvZiBhIHJlYWwgYHdpbmRvd2AuXG5cdFx0Ly8gZS5nLiB2YXIgalF1ZXJ5ID0gcmVxdWlyZShcImpxdWVyeVwiKSh3aW5kb3cpO1xuXHRcdC8vIFNlZSB0aWNrZXQgIzE0NTQ5IGZvciBtb3JlIGluZm8uXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgP1xuXHRcdFx0ZmFjdG9yeSggZ2xvYmFsLCB0cnVlICkgOlxuXHRcdFx0ZnVuY3Rpb24oIHcgKSB7XG5cdFx0XHRcdGlmICggIXcuZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCBcImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnRcIiApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBmYWN0b3J5KCB3ICk7XG5cdFx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdGZhY3RvcnkoIGdsb2JhbCApO1xuXHR9XG5cbi8vIFBhc3MgdGhpcyBpZiB3aW5kb3cgaXMgbm90IGRlZmluZWQgeWV0XG59KHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiggd2luZG93LCBub0dsb2JhbCApIHtcblxuLy8gU3VwcG9ydDogRmlyZWZveCAxOCtcbi8vIENhbid0IGJlIGluIHN0cmljdCBtb2RlLCBzZXZlcmFsIGxpYnMgaW5jbHVkaW5nIEFTUC5ORVQgdHJhY2Vcbi8vIHRoZSBzdGFjayB2aWEgYXJndW1lbnRzLmNhbGxlci5jYWxsZWUgYW5kIEZpcmVmb3ggZGllcyBpZlxuLy8geW91IHRyeSB0byB0cmFjZSB0aHJvdWdoIFwidXNlIHN0cmljdFwiIGNhbGwgY2hhaW5zLiAoIzEzMzM1KVxuLy9cInVzZSBzdHJpY3RcIjtcbnZhciBhcnIgPSBbXTtcblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XG5cbnZhciBjb25jYXQgPSBhcnIuY29uY2F0O1xuXG52YXIgcHVzaCA9IGFyci5wdXNoO1xuXG52YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mO1xuXG52YXIgY2xhc3MydHlwZSA9IHt9O1xuXG52YXIgdG9TdHJpbmcgPSBjbGFzczJ0eXBlLnRvU3RyaW5nO1xuXG52YXIgaGFzT3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxuXG5cbnZhclxuXHR2ZXJzaW9uID0gXCIyLjIuNFwiLFxuXG5cdC8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5XG5cdGpRdWVyeSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblxuXHRcdC8vIFRoZSBqUXVlcnkgb2JqZWN0IGlzIGFjdHVhbGx5IGp1c3QgdGhlIGluaXQgY29uc3RydWN0b3IgJ2VuaGFuY2VkJ1xuXHRcdC8vIE5lZWQgaW5pdCBpZiBqUXVlcnkgaXMgY2FsbGVkIChqdXN0IGFsbG93IGVycm9yIHRvIGJlIHRocm93biBpZiBub3QgaW5jbHVkZWQpXG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKTtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMVxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1Bcblx0cnRyaW0gPSAvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2csXG5cblx0Ly8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG5cdHJtc1ByZWZpeCA9IC9eLW1zLS8sXG5cdHJkYXNoQWxwaGEgPSAvLShbXFxkYS16XSkvZ2ksXG5cblx0Ly8gVXNlZCBieSBqUXVlcnkuY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2UoKVxuXHRmY2FtZWxDYXNlID0gZnVuY3Rpb24oIGFsbCwgbGV0dGVyICkge1xuXHRcdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcblx0fTtcblxualF1ZXJ5LmZuID0galF1ZXJ5LnByb3RvdHlwZSA9IHtcblxuXHQvLyBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIGpRdWVyeSBiZWluZyB1c2VkXG5cdGpxdWVyeTogdmVyc2lvbixcblxuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LFxuXG5cdC8vIFN0YXJ0IHdpdGggYW4gZW1wdHkgc2VsZWN0b3Jcblx0c2VsZWN0b3I6IFwiXCIsXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXHRcdHJldHVybiBudW0gIT0gbnVsbCA/XG5cblx0XHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRcdCggbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXSApIDpcblxuXHRcdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdFx0c2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblx0XHRyZXQuY29udGV4dCA9IHRoaXMuY29udGV4dDtcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFqUXVlcnkuaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAoICggb3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdICkgIT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRzcmMgPSB0YXJnZXRbIG5hbWUgXTtcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICggdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fFxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBqUXVlcnkuaXNBcnJheSggY29weSApICkgKSApIHtcblxuXHRcdFx0XHRcdGlmICggY29weUlzQXJyYXkgKSB7XG5cdFx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzQXJyYXkoIHNyYyApID8gc3JjIDogW107XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApID8gc3JjIDoge307XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApO1xuXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0fSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXG5cblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcblx0aXNSZWFkeTogdHJ1ZSxcblxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xuXHR9LFxuXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXG5cblx0aXNGdW5jdGlvbjogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LnR5cGUoIG9iaiApID09PSBcImZ1bmN0aW9uXCI7XG5cdH0sXG5cblx0aXNBcnJheTogQXJyYXkuaXNBcnJheSxcblxuXHRpc1dpbmRvdzogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRyZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqID09PSBvYmoud2luZG93O1xuXHR9LFxuXG5cdGlzTnVtZXJpYzogZnVuY3Rpb24oIG9iaiApIHtcblxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChudWxsfHRydWV8ZmFsc2V8XCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0Ly8gYWRkaW5nIDEgY29ycmVjdHMgbG9zcyBvZiBwcmVjaXNpb24gZnJvbSBwYXJzZUZsb2F0ICgjMTUxMDApXG5cdFx0dmFyIHJlYWxTdHJpbmdPYmogPSBvYmogJiYgb2JqLnRvU3RyaW5nKCk7XG5cdFx0cmV0dXJuICFqUXVlcnkuaXNBcnJheSggb2JqICkgJiYgKCByZWFsU3RyaW5nT2JqIC0gcGFyc2VGbG9hdCggcmVhbFN0cmluZ09iaiApICsgMSApID49IDA7XG5cdH0sXG5cblx0aXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIga2V5O1xuXG5cdFx0Ly8gTm90IHBsYWluIG9iamVjdHM6XG5cdFx0Ly8gLSBBbnkgb2JqZWN0IG9yIHZhbHVlIHdob3NlIGludGVybmFsIFtbQ2xhc3NdXSBwcm9wZXJ0eSBpcyBub3QgXCJbb2JqZWN0IE9iamVjdF1cIlxuXHRcdC8vIC0gRE9NIG5vZGVzXG5cdFx0Ly8gLSB3aW5kb3dcblx0XHRpZiAoIGpRdWVyeS50eXBlKCBvYmogKSAhPT0gXCJvYmplY3RcIiB8fCBvYmoubm9kZVR5cGUgfHwgalF1ZXJ5LmlzV2luZG93KCBvYmogKSApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBOb3Qgb3duIGNvbnN0cnVjdG9yIHByb3BlcnR5IG11c3QgYmUgT2JqZWN0XG5cdFx0aWYgKCBvYmouY29uc3RydWN0b3IgJiZcblx0XHRcdFx0IWhhc093bi5jYWxsKCBvYmosIFwiY29uc3RydWN0b3JcIiApICYmXG5cdFx0XHRcdCFoYXNPd24uY2FsbCggb2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSB8fCB7fSwgXCJpc1Byb3RvdHlwZU9mXCIgKSApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBPd24gcHJvcGVydGllcyBhcmUgZW51bWVyYXRlZCBmaXJzdGx5LCBzbyB0byBzcGVlZCB1cCxcblx0XHQvLyBpZiBsYXN0IG9uZSBpcyBvd24sIHRoZW4gYWxsIHByb3BlcnRpZXMgYXJlIG93blxuXHRcdGZvciAoIGtleSBpbiBvYmogKSB7fVxuXG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkIHx8IGhhc093bi5jYWxsKCBvYmosIGtleSApO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdHR5cGU6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBvYmogKyBcIlwiO1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wLCBpT1M8NiAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRcdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XG5cdFx0XHRjbGFzczJ0eXBlWyB0b1N0cmluZy5jYWxsKCBvYmogKSBdIHx8IFwib2JqZWN0XCIgOlxuXHRcdFx0dHlwZW9mIG9iajtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dFxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSApIHtcblx0XHR2YXIgc2NyaXB0LFxuXHRcdFx0aW5kaXJlY3QgPSBldmFsO1xuXG5cdFx0Y29kZSA9IGpRdWVyeS50cmltKCBjb2RlICk7XG5cblx0XHRpZiAoIGNvZGUgKSB7XG5cblx0XHRcdC8vIElmIHRoZSBjb2RlIGluY2x1ZGVzIGEgdmFsaWQsIHByb2xvZ3VlIHBvc2l0aW9uXG5cdFx0XHQvLyBzdHJpY3QgbW9kZSBwcmFnbWEsIGV4ZWN1dGUgY29kZSBieSBpbmplY3RpbmcgYVxuXHRcdFx0Ly8gc2NyaXB0IHRhZyBpbnRvIHRoZSBkb2N1bWVudC5cblx0XHRcdGlmICggY29kZS5pbmRleE9mKCBcInVzZSBzdHJpY3RcIiApID09PSAxICkge1xuXHRcdFx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cdFx0XHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgYXZvaWQgdGhlIERPTSBub2RlIGNyZWF0aW9uLCBpbnNlcnRpb25cblx0XHRcdFx0Ly8gYW5kIHJlbW92YWwgYnkgdXNpbmcgYW4gaW5kaXJlY3QgZ2xvYmFsIGV2YWxcblxuXHRcdFx0XHRpbmRpcmVjdCggY29kZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG5cdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0Ly8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKVxuXHRjYW1lbENhc2U6IGZ1bmN0aW9uKCBzdHJpbmcgKSB7XG5cdFx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XG5cdH0sXG5cblx0bm9kZU5hbWU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXHR9LFxuXG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrICkge1xuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xuXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggb2JqICkgKSB7XG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBvYmo7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjFcblx0dHJpbTogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XHRcIlwiIDpcblx0XHRcdCggdGV4dCArIFwiXCIgKS5yZXBsYWNlKCBydHJpbSwgXCJcIiApO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG5cdC8vIGFyZ3VtZW50cy5cblx0cHJveHk6IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0XHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcblxuXHRcdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdFx0Y29udGV4dCA9IGZuO1xuXHRcdFx0Zm4gPSB0bXA7XG5cdFx0fVxuXG5cdFx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0XHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxuXHRcdGlmICggIWpRdWVyeS5pc0Z1bmN0aW9uKCBmbiApICkge1xuXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBTaW11bGF0ZWQgYmluZFxuXHRcdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0XHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGZuLmFwcGx5KCBjb250ZXh0IHx8IHRoaXMsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7XG5cdFx0fTtcblxuXHRcdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRcdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xuXG5cdFx0cmV0dXJuIHByb3h5O1xuXHR9LFxuXG5cdG5vdzogRGF0ZS5ub3csXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuLy8gSlNIaW50IHdvdWxkIGVycm9yIG9uIHRoaXMgY29kZSBkdWUgdG8gdGhlIFN5bWJvbCBub3QgYmVpbmcgZGVmaW5lZCBpbiBFUzUuXG4vLyBEZWZpbmluZyB0aGlzIGdsb2JhbCBpbiAuanNoaW50cmMgd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcbi8vIHVuZ3VhcmRlZCBpbiBhbm90aGVyIHBsYWNlLCBpdCBzZWVtcyBzYWZlciB0byBqdXN0IGRpc2FibGUgSlNIaW50IGZvciB0aGVzZVxuLy8gdGhyZWUgbGluZXMuXG4vKiBqc2hpbnQgaWdub3JlOiBzdGFydCAqL1xuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuLyoganNoaW50IGlnbm9yZTogZW5kICovXG5cbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxualF1ZXJ5LmVhY2goIFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdCggXCIgXCIgKSxcbmZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbn0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiBpT1MgOC4yIChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0galF1ZXJ5LnR5cGUoIG9iaiApO1xuXG5cdGlmICggdHlwZSA9PT0gXCJmdW5jdGlvblwiIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjIuMVxuICogaHR0cDovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlXG4gKlxuICogRGF0ZTogMjAxNS0xMC0xN1xuICovXG4oZnVuY3Rpb24oIHdpbmRvdyApIHtcblxudmFyIGksXG5cdHN1cHBvcnQsXG5cdEV4cHIsXG5cdGdldFRleHQsXG5cdGlzWE1MLFxuXHR0b2tlbml6ZSxcblx0Y29tcGlsZSxcblx0c2VsZWN0LFxuXHRvdXRlcm1vc3RDb250ZXh0LFxuXHRzb3J0SW5wdXQsXG5cdGhhc0R1cGxpY2F0ZSxcblxuXHQvLyBMb2NhbCBkb2N1bWVudCB2YXJzXG5cdHNldERvY3VtZW50LFxuXHRkb2N1bWVudCxcblx0ZG9jRWxlbSxcblx0ZG9jdW1lbnRJc0hUTUwsXG5cdHJidWdneVFTQSxcblx0cmJ1Z2d5TWF0Y2hlcyxcblx0bWF0Y2hlcyxcblx0Y29udGFpbnMsXG5cblx0Ly8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YVxuXHRleHBhbmRvID0gXCJzaXp6bGVcIiArIDEgKiBuZXcgRGF0ZSgpLFxuXHRwcmVmZXJyZWREb2MgPSB3aW5kb3cuZG9jdW1lbnQsXG5cdGRpcnJ1bnMgPSAwLFxuXHRkb25lID0gMCxcblx0Y2xhc3NDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHRva2VuQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRjb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gR2VuZXJhbC1wdXJwb3NlIGNvbnN0YW50c1xuXHRNQVhfTkVHQVRJVkUgPSAxIDw8IDMxLFxuXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcblx0aGFzT3duID0gKHt9KS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hfbmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cdC8vIFVzZSBhIHN0cmlwcGVkLWRvd24gaW5kZXhPZiBhcyBpdCdzIGZhc3RlciB0aGFuIG5hdGl2ZVxuXHQvLyBodHRwOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0W2ldID09PSBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9LFxuXG5cdGJvb2xlYW5zID0gXCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLFxuXG5cdC8vIFJlZ3VsYXIgZXhwcmVzc2lvbnNcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCN2YWx1ZS1kZWYtaWRlbnRpZmllclxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXFxceDAwLVxcXFx4YTBdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBPcGVyYXRvciAoY2FwdHVyZSAyKVxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgKyB3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblxuXHRyYXR0cmlidXRlUXVvdGVzID0gbmV3IFJlZ0V4cCggXCI9XCIgKyB3aGl0ZXNwYWNlICsgXCIqKFteXFxcXF0nXFxcIl0qPylcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLCBcImdcIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cdHJlc2NhcGUgPSAvJ3xcXFxcL2csXG5cblx0Ly8gQ1NTIGVzY2FwZXMgaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3woXCIgKyB3aGl0ZXNwYWNlICsgXCIpfC4pXCIsIFwiaWdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBlZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcblx0XHQvLyBOYU4gbWVhbnMgbm9uLWNvZGVwb2ludFxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjRcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcblx0XHRyZXR1cm4gaGlnaCAhPT0gaGlnaCB8fCBlc2NhcGVkV2hpdGVzcGFjZSA/XG5cdFx0XHRlc2NhcGVkIDpcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0Ly8gQk1QIGNvZGVwb2ludFxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9O1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaF9uYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbChlbHMpICk7XG5cdFx0fSA6XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHZhciBqID0gdGFyZ2V0Lmxlbmd0aCxcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKHRhcmdldFtqKytdID0gZWxzW2krK10pICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG5pZHNlbGVjdCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXG5cdFx0bmV3Q29udGV4dCA9IGNvbnRleHQgJiYgY29udGV4dC5vd25lckRvY3VtZW50LFxuXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxuXHRcdG5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5O1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxuXHRcdG5vZGVUeXBlICE9PSAxICYmIG5vZGVUeXBlICE9PSA5ICYmIG5vZGVUeXBlICE9PSAxMSApIHtcblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xuXHRpZiAoICFzZWVkICkge1xuXG5cdFx0aWYgKCAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IHByZWZlcnJlZERvYyApICE9PSBkb2N1bWVudCApIHtcblx0XHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdFx0fVxuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAobSA9IG1hdGNoWzFdKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcblx0XHRcdFx0XHRcdFx0ZWxlbS5pZCA9PT0gbSApIHtcblxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbMl0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbFxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxuXHRcdFx0XHQhY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXG5cdFx0XHRcdCghcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXG5cdFx0XHRcdC8vIHFTQSBsb29rcyBvdXRzaWRlIEVsZW1lbnQgY29udGV4dCwgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudFxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB3b3JrYXJvdW5kIHRlY2huaXF1ZVxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PThcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0fSBlbHNlIGlmICggY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRpZiAoIChuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkpICkge1xuXHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJlc2NhcGUsIFwiXFxcXCQmXCIgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKG5pZCA9IGV4cGFuZG8pICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0bmlkc2VsZWN0ID0gcmlkZW50aWZpZXIudGVzdCggbmlkICkgPyBcIiNcIiArIG5pZCA6IFwiW2lkPSdcIiArIG5pZCArIFwiJ11cIjtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IG5pZHNlbGVjdCArIFwiIFwiICsgdG9TZWxlY3RvciggZ3JvdXBzW2ldICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIG5ld1NlbGVjdG9yICkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxuXHRcdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0XHRjb250ZXh0LnJlbW92ZUF0dHJpYnV0ZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWxsIG90aGVyc1xuXHRyZXR1cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVkIHNpemVcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcbiAqXHRwcm9wZXJ0eSBuYW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJnZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKVxuICpcdGRlbGV0aW5nIHRoZSBvbGRlc3QgZW50cnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7XG5cdHZhciBrZXlzID0gW107XG5cblx0ZnVuY3Rpb24gY2FjaGUoIGtleSwgdmFsdWUgKSB7XG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSk7XG5cdH1cblx0cmV0dXJuIGNhY2hlO1xufVxuXG4vKipcbiAqIE1hcmsgYSBmdW5jdGlvbiBmb3Igc3BlY2lhbCB1c2UgYnkgU2l6emxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFya1xuICovXG5mdW5jdGlvbiBtYXJrRnVuY3Rpb24oIGZuICkge1xuXHRmblsgZXhwYW5kbyBdID0gdHJ1ZTtcblx0cmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBQYXNzZWQgdGhlIGNyZWF0ZWQgZGl2IGFuZCBleHBlY3RzIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZGl2ICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBkaXYucGFyZW50Tm9kZSApIHtcblx0XHRcdGRpdi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBkaXYgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRkaXYgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbaV0gXSA9IGhhbmRsZXI7XG5cdH1cbn1cblxuLyoqXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGFcbiAqIEBwYXJhbSB7RWxlbWVudH0gYlxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXG4gKi9cbmZ1bmN0aW9uIHNpYmxpbmdDaGVjayggYSwgYiApIHtcblx0dmFyIGN1ciA9IGIgJiYgYSxcblx0XHRkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYgYi5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0KCB+Yi5zb3VyY2VJbmRleCB8fCBNQVhfTkVHQVRJVkUgKSAtXG5cdFx0XHQoIH5hLnNvdXJjZUluZGV4IHx8IE1BWF9ORUdBVElWRSApO1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIubmV4dFNpYmxpbmcpICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIChuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIikgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3Rcblx0Ly8gKHN1Y2ggYXMgbG9hZGluZyBpZnJhbWVzIGluIElFIC0gIzQ4MzMpXG5cdHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBwYXJlbnQsXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIChwYXJlbnQgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgcGFyZW50LnRvcCAhPT0gcGFyZW50ICkge1xuXHRcdC8vIFN1cHBvcnQ6IElFIDExXG5cdFx0aWYgKCBwYXJlbnQuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHBhcmVudC5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBwYXJlbnQuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRwYXJlbnQuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFkaXYuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoXCJcIikgKTtcblx0XHRyZXR1cm4gIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaWQgPSBleHBhbmRvO1xuXHRcdHJldHVybiAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCBleHBhbmRvICkubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBJRCBmaW5kIGFuZCBmaWx0ZXJcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBtID8gWyBtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHQvLyBTdXBwb3J0OiBJRTYvN1xuXHRcdC8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXRcblx0XHRkZWxldGUgRXhwci5maW5kW1wiSURcIl07XG5cblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gIGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHR9XG5cblx0Ly8gVGFnXG5cdEV4cHIuZmluZFtcIlRBR1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyApO1xuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHR0bXAgPSBbXSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdHRtcC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRtcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0Ly8gQ2xhc3Ncblx0RXhwci5maW5kW1wiQ0xBU1NcIl0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlsqXiRdPVwiICsgd2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCBcInZhbHVlXCIgYXJlIG5vdCB0cmVhdGVkIGNvcnJlY3RseVxuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbc2VsZWN0ZWRdXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFkaXYucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiOmNoZWNrZWRcIik7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIi4jLitbK35dXCIpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdFx0XHQvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHNcblx0XHRcdC8vIFRoZSB0eXBlIGFuZCBuYW1lIGF0dHJpYnV0ZXMgYXJlIHJlc3RyaWN0ZWQgZHVyaW5nIC5pbm5lckhUTUwgYXNzaWdubWVudFxuXHRcdFx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZW5hYmxlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3Ncblx0XHRcdGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZGl2LCBcImRpdlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZGl2LCBcIltzIT0nJ106eFwiICk7XG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xuXHRcdH0pO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbihcInxcIikgKTtcblx0cmJ1Z2d5TWF0Y2hlcyA9IHJidWdneU1hdGNoZXMubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneU1hdGNoZXMuam9pbihcInxcIikgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXG5cdGNvbnRhaW5zID0gaGFzQ29tcGFyZSB8fCBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29udGFpbnMgKSA/XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkpO1xuXHRcdH0gOlxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0aWYgKCBiICkge1xuXHRcdFx0XHR3aGlsZSAoIChiID0gYi5wYXJlbnROb2RlKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PT0gKCBiLm93bmVyRG9jdW1lbnQgfHwgYiApID9cblx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGIgKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSB3ZSBrbm93IHRoZXkgYXJlIGRpc2Nvbm5lY3RlZFxuXHRcdFx0MTtcblxuXHRcdC8vIERpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdGlmICggY29tcGFyZSAmIDEgfHxcblx0XHRcdCghc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHRpZiAoIGEgPT09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYSkgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHRcdGlmICggYiA9PT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBiKSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXG5cdFx0XHRyZXR1cm4gc29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXHRcdH1cblxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcblx0fSA6XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXHRcdFx0cmV0dXJuIGEgPT09IGRvY3VtZW50ID8gLTEgOlxuXHRcdFx0XHRiID09PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRhcC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cdFx0Y3VyID0gYjtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRicC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cblx0XHQvLyBXYWxrIGRvd24gdGhlIHRyZWUgbG9va2luZyBmb3IgYSBkaXNjcmVwYW5jeVxuXHRcdHdoaWxlICggYXBbaV0gPT09IGJwW2ldICkge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHJldHVybiBpID9cblx0XHRcdC8vIERvIGEgc2libGluZyBjaGVjayBpZiB0aGUgbm9kZXMgaGF2ZSBhIGNvbW1vbiBhbmNlc3RvclxuXHRcdFx0c2libGluZ0NoZWNrKCBhcFtpXSwgYnBbaV0gKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxuXHRcdFx0YXBbaV0gPT09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwW2ldID09PSBwcmVmZXJyZWREb2MgPyAxIDpcblx0XHRcdDA7XG5cdH07XG5cblx0cmV0dXJuIGRvY3VtZW50O1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZFxuXHRleHByID0gZXhwci5yZXBsYWNlKCByYXR0cmlidXRlUXVvdGVzLCBcIj0nJDEnXVwiICk7XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCFjb21waWxlckNhY2hlWyBleHByICsgXCIgXCIgXSAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cdFx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlKSB7fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XG59O1xuXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxuXHRcdHZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID9cblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XG5cdFx0XHR1bmRlZmluZWQ7XG5cblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cblx0XHR2YWwgOlxuXHRcdHN1cHBvcnQuYXR0cmlidXRlcyB8fCAhZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XG5cdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xufTtcblxuLyoqXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXG4gKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0c1xuICovXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRkdXBsaWNhdGVzID0gW10sXG5cdFx0aiA9IDAsXG5cdFx0aSA9IDA7XG5cblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxuXHRoYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzO1xuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcblxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcblx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblx0XHQvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVxuXHRcdHdoaWxlICggKG5vZGUgPSBlbGVtW2krK10pICkge1xuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcblx0XHRcdHJldCArPSBnZXRUZXh0KCBub2RlICk7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xuXG5cdHJldHVybiByZXQ7XG59O1xuXG5FeHByID0gU2l6emxlLnNlbGVjdG9ycyA9IHtcblxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcblx0Y2FjaGVMZW5ndGg6IDUwLFxuXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxuXG5cdG1hdGNoOiBtYXRjaEV4cHIsXG5cblx0YXR0ckhhbmRsZToge30sXG5cblx0ZmluZDoge30sXG5cblx0cmVsYXRpdmU6IHtcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiIFwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIgfSxcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cblx0fSxcblxuXHRwcmVGaWx0ZXI6IHtcblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbM10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzJdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWzNdID0gXCIgXCIgKyBtYXRjaFszXSArIFwiIFwiO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzFdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWzNdICkge1xuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSBcImV2ZW5cIiB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWzZdICYmIG1hdGNoWzJdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwcltcIkNISUxEXCJdLnRlc3QoIG1hdGNoWzBdICkgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xuXHRcdFx0aWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0bWF0Y2hbMl0gPSBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdChleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSkgJiZcblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdChleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGgpICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsyXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9IDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZTtcblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xuXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxuXHRcdFx0XHQocGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkpICYmXG5cdFx0XHRcdGNsYXNzQ2FjaGUoIGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdCggdHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIgKTtcblx0XHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XG5cdFx0XHR2YXIgc2ltcGxlID0gdHlwZS5zbGljZSggMCwgMyApICE9PSBcIm50aFwiLFxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xuXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XG5cblx0XHRcdFx0Ly8gU2hvcnRjdXQgZm9yIDpudGgtKihuKVxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRcdH0gOlxuXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwgbm9kZSwgbm9kZUluZGV4LCBzdGFydCxcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXG5cdFx0XHRcdFx0XHRuYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIDooZmlyc3R8bGFzdHxvbmx5KS0oY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gbm9kZVsgZGlyIF0pICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleCAmJiBjYWNoZVsgMiBdO1xuXHRcdFx0XHRcdFx0XHRub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBub2RlSW5kZXggXTtcblxuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHByZXZpb3VzbHktY2FjaGVkIGVsZW1lbnQgaW5kZXggaWYgYXZhaWxhYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdC8vIHhtbCA6bnRoLWNoaWxkKC4uLilcblx0XHRcdFx0XHRcdFx0Ly8gb3IgOm50aC1sYXN0LWNoaWxkKC4uLikgb3IgOm50aCgtbGFzdCk/LW9mLXR5cGUoLi4uKVxuXHRcdFx0XHRcdFx0XHRpZiAoIGRpZmYgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCsrZGlmZiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFjaCBlbmNvdW50ZXJlZCBlbGVtZW50XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXHRcdFx0Ly8gcHNldWRvLWNsYXNzIG5hbWVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xuXHRcdFx0Ly8gUmVtZW1iZXIgdGhhdCBzZXRGaWx0ZXJzIGluaGVyaXRzIGZyb20gcHNldWRvc1xuXHRcdFx0dmFyIGFyZ3MsXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIiArIHBzZXVkbyApO1xuXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XG5cdFx0XHQvLyBhcmd1bWVudHMgYXJlIG5lZWRlZCB0byBjcmVhdGUgdGhlIGZpbHRlciBmdW5jdGlvblxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRyZXR1cm4gZm4oIGFyZ3VtZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1dCBtYWludGFpbiBzdXBwb3J0IGZvciBvbGQgc2lnbmF0dXJlc1xuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcblx0XHRcdFx0cmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pIDpcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmbjtcblx0XHR9XG5cdH0sXG5cblx0cHNldWRvczoge1xuXHRcdC8vIFBvdGVudGlhbGx5IGNvbXBsZXggcHNldWRvc1xuXHRcdFwibm90XCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHQvLyBUcmltIHRoZSBzZWxlY3RvciBwYXNzZWQgdG8gY29tcGlsZVxuXHRcdFx0Ly8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmdcblx0XHRcdC8vIHNwYWNlcyBhcyBjb21iaW5hdG9yc1xuXHRcdFx0dmFyIGlucHV0ID0gW10sXG5cdFx0XHRcdHJlc3VsdHMgPSBbXSxcblx0XHRcdFx0bWF0Y2hlciA9IGNvbXBpbGUoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSApO1xuXG5cdFx0XHRyZXR1cm4gbWF0Y2hlclsgZXhwYW5kbyBdID9cblx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcblx0XHRcdFx0XHRcdFx0c2VlZFtpXSA9ICEobWF0Y2hlc1tpXSA9IGVsZW0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSkgOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WzBdID0gZWxlbTtcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XG5cdFx0XHRcdFx0Ly8gRG9uJ3Qga2VlcCB0aGUgZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdFx0XHRpbnB1dFswXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0XCJoYXNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xuXHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS50ZXh0Q29udGVudCB8fCBlbGVtLmlubmVyVGV4dCB8fCBnZXRUZXh0KCBlbGVtICkgKS5pbmRleE9mKCB0ZXh0ICkgPiAtMTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3Jcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxuXHRcdC8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cblx0XHQvLyBUaGUgaWRlbnRpZmllciBDIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB2YWxpZCBsYW5ndWFnZSBuYW1lLlwiXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xuXHRcdFx0Ly8gbGFuZyB2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgaWRlbnRpZmllclxuXHRcdFx0aWYgKCAhcmlkZW50aWZpZXIudGVzdChsYW5nIHx8IFwiXCIpICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKGVsZW1MYW5nID0gZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0XHRcdFx0ZWxlbS5sYW5nIDpcblx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKFwieG1sOmxhbmdcIikgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoIChlbGVtID0gZWxlbS5wYXJlbnROb2RlKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiAoIWRvY3VtZW50Lmhhc0ZvY3VzIHx8IGRvY3VtZW50Lmhhc0ZvY3VzKCkpICYmICEhKGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXgpO1xuXHRcdH0sXG5cblx0XHQvLyBCb29sZWFuIHByb3BlcnRpZXNcblx0XHRcImVuYWJsZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2U7XG5cdFx0fSxcblxuXHRcdFwiZGlzYWJsZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIChub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmICEhZWxlbS5jaGVja2VkKSB8fCAobm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkKTtcblx0XHR9LFxuXG5cdFx0XCJzZWxlY3RlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRlbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIENvbnRlbnRzXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jZW1wdHktcHNldWRvXG5cdFx0XHQvLyA6ZW1wdHkgaXMgbmVnYXRlZCBieSBlbGVtZW50ICgxKSBvciBjb250ZW50IG5vZGVzICh0ZXh0OiAzOyBjZGF0YTogNDsgZW50aXR5IHJlZjogNSksXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxuXHRcdFx0Ly8gbm9kZVR5cGUgPCA2IHdvcmtzIGJlY2F1c2UgYXR0cmlidXRlcyAoMikgZG8gbm90IGFwcGVhciBhcyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJwYXJlbnRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gIUV4cHIucHNldWRvc1tcImVtcHR5XCJdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRcdC8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCBcInNlYXJjaFwiKSBhcHBlYXIgd2l0aCBlbGVtLnR5cGUgPT09IFwidGV4dFwiXG5cdFx0XHRcdCggKGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZShcInR5cGVcIikpID09IG51bGwgfHwgYXR0ci50b0xvd2VyQ2FzZSgpID09PSBcInRleHRcIiApO1xuXHRcdH0sXG5cblx0XHQvLyBQb3NpdGlvbi1pbi1jb2xsZWN0aW9uXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIFsgMCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIFsgbGVuZ3RoIC0gMSBdO1xuXHRcdH0pLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XG5cdFx0fSksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcIm9kZFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwibHRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7ICsraSA8IGxlbmd0aDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pXG5cdH1cbn07XG5cbkV4cHIucHNldWRvc1tcIm50aFwiXSA9IEV4cHIucHNldWRvc1tcImVxXCJdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAobWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRpZiAoIG1hdGNoICkge1xuXHRcdFx0XHQvLyBEb24ndCBjb25zdW1lIHRyYWlsaW5nIGNvbW1hcyBhcyB2YWxpZFxuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFswXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAodG9rZW5zID0gW10pICk7XG5cdFx0fVxuXG5cdFx0bWF0Y2hlZCA9IGZhbHNlO1xuXG5cdFx0Ly8gQ29tYmluYXRvcnNcblx0XHRpZiAoIChtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApKSApIHtcblx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0Ly8gQ2FzdCBkZXNjZW5kYW50IGNvbWJpbmF0b3JzIHRvIHNwYWNlXG5cdFx0XHRcdHR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9KTtcblx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmlsdGVyc1xuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XG5cdFx0XHRpZiAoIChtYXRjaCA9IG1hdGNoRXhwclsgdHlwZSBdLmV4ZWMoIHNvRmFyICkpICYmICghcHJlRmlsdGVyc1sgdHlwZSBdIHx8XG5cdFx0XHRcdChtYXRjaCA9IHByZUZpbHRlcnNbIHR5cGUgXSggbWF0Y2ggKSkpICkge1xuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdFx0bWF0Y2hlczogbWF0Y2hcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblx0XHRcdC8vIENhY2hlIHRoZSB0b2tlbnNcblx0XHRcdHRva2VuQ2FjaGUoIHNlbGVjdG9yLCBncm91cHMgKS5zbGljZSggMCApO1xufTtcblxuZnVuY3Rpb24gdG9TZWxlY3RvciggdG9rZW5zICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRzZWxlY3RvciA9IFwiXCI7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdHNlbGVjdG9yICs9IHRva2Vuc1tpXS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gc2VsZWN0b3I7XG59XG5cbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XG5cdHZhciBkaXIgPSBjb21iaW5hdG9yLmRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBkaXIgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsgZGlyIF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBkaXIgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRzdXBwb3J0LmdldEJ5SWQgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdFx0XHRFeHByLnJlbGF0aXZlWyB0b2tlbnNbMV0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbXCJJRFwiXSggdG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKHJ1bmVzY2FwZSwgZnVuZXNjYXBlKSwgY29udGV4dCApIHx8IFtdIClbMF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByW1wibmVlZHNDb250ZXh0XCJdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zW2ldO1xuXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICh0eXBlID0gdG9rZW4udHlwZSkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkge1xuXHRcdFx0XHQvLyBTZWFyY2gsIGV4cGFuZGluZyBjb250ZXh0IGZvciBsZWFkaW5nIHNpYmxpbmcgY29tYmluYXRvcnNcblx0XHRcdFx0aWYgKCAoc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxuXHRcdFx0XHRcdHJzaWJsaW5nLnRlc3QoIHRva2Vuc1swXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0XHRcdFx0KSkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoXCJcIikuc29ydCggc29ydE9yZGVyICkuam9pbihcIlwiKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdjEgKSB7XG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZGl2MS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSApICYgMTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdGRpdi5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcblx0cmV0dXJuIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIikgPT09IFwiI1wiIDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcbmlmICggIXN1cHBvcnQuYXR0cmlidXRlcyB8fCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdGRpdi5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGRpdi5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XG5cdHJldHVybiBkaXYuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdHJldHVybiBkaXYuZ2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIikgPT0gbnVsbDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRcdCh2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcblx0XHR9XG5cdH0pO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59KSggd2luZG93ICk7XG5cblxuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW1xcdy1dKylcXHMqXFwvPz4oPzo8XFwvXFwxPnwpJC8gKTtcblxuXG5cbnZhciByaXNTaW1wbGUgPSAvXi5bXjojXFxbXFwuLF0qJC87XG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cblx0fVxuXG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cblx0fVxuXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRpZiAoIHJpc1NpbXBsZS50ZXN0KCBxdWFsaWZpZXIgKSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcblx0XHR9XG5cblx0XHRxdWFsaWZpZXIgPSBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzICk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gKCBpbmRleE9mLmNhbGwoIHF1YWxpZmllciwgZWxlbSApID4gLTEgKSAhPT0gbm90O1xuXHR9ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRyZXR1cm4gZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgP1xuXHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXSA6XG5cdFx0alF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHRcdH0gKSApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0c2VsZiA9IHRoaXM7XG5cblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5KCBzZWxlY3RvciApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9ICkgKTtcblx0XHR9XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdC8vIE5lZWRlZCBiZWNhdXNlICQoIHNlbGVjdG9yLCBjb250ZXh0ICkgYmVjb21lcyAkKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKVxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZSggcmV0ICkgOiByZXQgKTtcblx0XHRyZXQuc2VsZWN0b3IgPSB0aGlzLnNlbGVjdG9yID8gdGhpcy5zZWxlY3RvciArIFwiIFwiICsgc2VsZWN0b3IgOiBzZWxlY3Rvcjtcblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0qKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHRoaXNbIG1hdGNoIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzWyBtYXRjaCBdKCBjb250ZXh0WyBtYXRjaCBdICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gLi4uYW5kIG90aGVyd2lzZSBzZXQgYXMgYXR0cmlidXRlc1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuYXR0ciggbWF0Y2gsIGNvbnRleHRbIG1hdGNoIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJCgjaWQpXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsgMiBdICk7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBCbGFja2JlcnJ5IDQuNlxuXHRcdFx0XHRcdC8vIGdFQklEIHJldHVybnMgbm9kZXMgbm8gbG9uZ2VyIGluIHRoZSBkb2N1bWVudCAoIzY5NjMpXG5cdFx0XHRcdFx0aWYgKCBlbGVtICYmIGVsZW0ucGFyZW50Tm9kZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dGhpcy5jb250ZXh0ID0gZG9jdW1lbnQ7XG5cdFx0XHRcdFx0dGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpcy5jb250ZXh0ID0gdGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggc2VsZWN0b3IgKSApIHtcblx0XHRcdHJldHVybiByb290LnJlYWR5ICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRyb290LnJlYWR5KCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBFeGVjdXRlIGltbWVkaWF0ZWx5IGlmIHJlYWR5IGlzIG5vdCBwcmVzZW50XG5cdFx0XHRcdHNlbGVjdG9yKCBqUXVlcnkgKTtcblx0XHR9XG5cblx0XHRpZiAoIHNlbGVjdG9yLnNlbGVjdG9yICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3Iuc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmNvbnRleHQgPSBzZWxlY3Rvci5jb250ZXh0O1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0cG9zID0gcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvcnMgKSB8fCB0eXBlb2Ygc2VsZWN0b3JzICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvcnMsIGNvbnRleHQgfHwgdGhpcy5jb250ZXh0ICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0Zm9yICggY3VyID0gdGhpc1sgaSBdOyBjdXIgJiYgY3VyICE9PSBjb250ZXh0OyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblxuXHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHBvcyA/XG5cdFx0XHRcdFx0cG9zLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdGN1ci5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIsIHVudGlsICk7XG5cdH0sXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRwcmV2VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgalF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGR1cGxpY2F0ZXNcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcblx0XHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59ICk7XG52YXIgcm5vdHdoaXRlID0gKCAvXFxTKy9nICk7XG5cblxuXG4vLyBDb252ZXJ0IFN0cmluZy1mb3JtYXR0ZWQgb3B0aW9ucyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lc1xuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IHt9O1xuXHRqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdHdoaXRlICkgfHwgW10sIGZ1bmN0aW9uKCBfLCBmbGFnICkge1xuXHRcdG9iamVjdFsgZmxhZyBdID0gdHJ1ZTtcblx0fSApO1xuXHRyZXR1cm4gb2JqZWN0O1xufVxuXG4vKlxuICogQ3JlYXRlIGEgY2FsbGJhY2sgbGlzdCB1c2luZyB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnM6XG4gKlxuICpcdG9wdGlvbnM6IGFuIG9wdGlvbmFsIGxpc3Qgb2Ygc3BhY2Utc2VwYXJhdGVkIG9wdGlvbnMgdGhhdCB3aWxsIGNoYW5nZSBob3dcbiAqXHRcdFx0dGhlIGNhbGxiYWNrIGxpc3QgYmVoYXZlcyBvciBhIG1vcmUgdHJhZGl0aW9uYWwgb3B0aW9uIG9iamVjdFxuICpcbiAqIEJ5IGRlZmF1bHQgYSBjYWxsYmFjayBsaXN0IHdpbGwgYWN0IGxpa2UgYW4gZXZlbnQgY2FsbGJhY2sgbGlzdCBhbmQgY2FuIGJlXG4gKiBcImZpcmVkXCIgbXVsdGlwbGUgdGltZXMuXG4gKlxuICogUG9zc2libGUgb3B0aW9uczpcbiAqXG4gKlx0b25jZTpcdFx0XHR3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdG1lbW9yeTpcdFx0XHR3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkXG4gKlx0XHRcdFx0XHRhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCBcIm1lbW9yaXplZFwiXG4gKlx0XHRcdFx0XHR2YWx1ZXMgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0dW5pcXVlOlx0XHRcdHdpbGwgZW5zdXJlIGEgY2FsbGJhY2sgY2FuIG9ubHkgYmUgYWRkZWQgb25jZSAobm8gZHVwbGljYXRlIGluIHRoZSBsaXN0KVxuICpcbiAqXHRzdG9wT25GYWxzZTpcdGludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZVxuICpcbiAqL1xualF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdC8vIENvbnZlcnQgb3B0aW9ucyBmcm9tIFN0cmluZy1mb3JtYXR0ZWQgdG8gT2JqZWN0LWZvcm1hdHRlZCBpZiBuZWVkZWRcblx0Ly8gKHdlIGNoZWNrIGluIGNhY2hlIGZpcnN0KVxuXHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgP1xuXHRcdGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSA6XG5cdFx0alF1ZXJ5LmV4dGVuZCgge30sIG9wdGlvbnMgKTtcblxuXHR2YXIgLy8gRmxhZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZ1xuXHRcdGZpcmluZyxcblxuXHRcdC8vIExhc3QgZmlyZSB2YWx1ZSBmb3Igbm9uLWZvcmdldHRhYmxlIGxpc3RzXG5cdFx0bWVtb3J5LFxuXG5cdFx0Ly8gRmxhZyB0byBrbm93IGlmIGxpc3Qgd2FzIGFscmVhZHkgZmlyZWRcblx0XHRmaXJlZCxcblxuXHRcdC8vIEZsYWcgdG8gcHJldmVudCBmaXJpbmdcblx0XHRsb2NrZWQsXG5cblx0XHQvLyBBY3R1YWwgY2FsbGJhY2sgbGlzdFxuXHRcdGxpc3QgPSBbXSxcblxuXHRcdC8vIFF1ZXVlIG9mIGV4ZWN1dGlvbiBkYXRhIGZvciByZXBlYXRhYmxlIGxpc3RzXG5cdFx0cXVldWUgPSBbXSxcblxuXHRcdC8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJhY2sgKG1vZGlmaWVkIGJ5IGFkZC9yZW1vdmUgYXMgbmVlZGVkKVxuXHRcdGZpcmluZ0luZGV4ID0gLTEsXG5cblx0XHQvLyBGaXJlIGNhbGxiYWNrc1xuXHRcdGZpcmUgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5mb3JjZSBzaW5nbGUtZmlyaW5nXG5cdFx0XHRsb2NrZWQgPSBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoICFvcHRpb25zLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKCBhcmcgKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGFyZyAmJiBhcmcubGVuZ3RoICYmIGpRdWVyeS50eXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0bG9ja2VkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhbG9ja2VkO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZVdpdGg6IGZ1bmN0aW9uKCBjb250ZXh0LCBhcmdzICkge1xuXHRcdFx0XHRpZiAoICFsb2NrZWQgKSB7XG5cdFx0XHRcdFx0YXJncyA9IGFyZ3MgfHwgW107XG5cdFx0XHRcdFx0YXJncyA9IFsgY29udGV4dCwgYXJncy5zbGljZSA/IGFyZ3Muc2xpY2UoKSA6IGFyZ3MgXTtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBhcmdzICk7XG5cdFx0XHRcdFx0aWYgKCAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGwgYWxsIHRoZSBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gYXJndW1lbnRzXG5cdFx0XHRmaXJlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0c2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiB0aGUgY2FsbGJhY2tzIGhhdmUgYWxyZWFkeSBiZWVuIGNhbGxlZCBhdCBsZWFzdCBvbmNlXG5cdFx0XHRmaXJlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhIWZpcmVkO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0cmV0dXJuIHNlbGY7XG59O1xuXG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHREZWZlcnJlZDogZnVuY3Rpb24oIGZ1bmMgKSB7XG5cdFx0dmFyIHR1cGxlcyA9IFtcblxuXHRcdFx0XHQvLyBhY3Rpb24sIGFkZCBsaXN0ZW5lciwgbGlzdGVuZXIgbGlzdCwgZmluYWwgc3RhdGVcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIFwicmVqZWN0ZWRcIiBdLFxuXHRcdFx0XHRbIFwibm90aWZ5XCIsIFwicHJvZ3Jlc3NcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApIF1cblx0XHRcdF0sXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxuXHRcdFx0cHJvbWlzZSA9IHtcblx0XHRcdFx0c3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcblx0XHRcdFx0fSxcblx0XHRcdFx0YWx3YXlzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIC8qIGZuRG9uZSwgZm5GYWlsLCBmblByb2dyZXNzICovICkge1xuXHRcdFx0XHRcdHZhciBmbnMgPSBhcmd1bWVudHM7XG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0XHRcdFx0XHR2YXIgZm4gPSBqUXVlcnkuaXNGdW5jdGlvbiggZm5zWyBpIF0gKSAmJiBmbnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZFsgZG9uZSB8IGZhaWwgfCBwcm9ncmVzcyBdIGZvciBmb3J3YXJkaW5nIGFjdGlvbnMgdG8gbmV3RGVmZXJcblx0XHRcdFx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAxIF0gXSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkID0gZm4gJiYgZm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMgPT09IHByb21pc2UgPyBuZXdEZWZlci5wcm9taXNlKCkgOiB0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdHByb21pc2UucGlwZSA9IHByb21pc2UudGhlbjtcblxuXHRcdC8vIEFkZCBsaXN0LXNwZWNpZmljIG1ldGhvZHNcblx0XHRqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7XG5cdFx0XHR2YXIgbGlzdCA9IHR1cGxlWyAyIF0sXG5cdFx0XHRcdHN0YXRlU3RyaW5nID0gdHVwbGVbIDMgXTtcblxuXHRcdFx0Ly8gcHJvbWlzZVsgZG9uZSB8IGZhaWwgfCBwcm9ncmVzcyBdID0gbGlzdC5hZGRcblx0XHRcdHByb21pc2VbIHR1cGxlWyAxIF0gXSA9IGxpc3QuYWRkO1xuXG5cdFx0XHQvLyBIYW5kbGUgc3RhdGVcblx0XHRcdGlmICggc3RhdGVTdHJpbmcgKSB7XG5cdFx0XHRcdGxpc3QuYWRkKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdC8vIHN0YXRlID0gWyByZXNvbHZlZCB8IHJlamVjdGVkIF1cblx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXG5cdFx0XHRcdC8vIFsgcmVqZWN0X2xpc3QgfCByZXNvbHZlX2xpc3QgXS5kaXNhYmxlOyBwcm9ncmVzc19saXN0LmxvY2tcblx0XHRcdFx0fSwgdHVwbGVzWyBpIF4gMSBdWyAyIF0uZGlzYWJsZSwgdHVwbGVzWyAyIF1bIDIgXS5sb2NrICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGRlZmVycmVkWyByZXNvbHZlIHwgcmVqZWN0IHwgbm90aWZ5IF1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHByb21pc2UgOiB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9O1xuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdID0gbGlzdC5maXJlV2l0aDtcblx0XHR9ICk7XG5cblx0XHQvLyBNYWtlIHRoZSBkZWZlcnJlZCBhIHByb21pc2Vcblx0XHRwcm9taXNlLnByb21pc2UoIGRlZmVycmVkICk7XG5cblx0XHQvLyBDYWxsIGdpdmVuIGZ1bmMgaWYgYW55XG5cdFx0aWYgKCBmdW5jICkge1xuXHRcdFx0ZnVuYy5jYWxsKCBkZWZlcnJlZCwgZGVmZXJyZWQgKTtcblx0XHR9XG5cblx0XHQvLyBBbGwgZG9uZSFcblx0XHRyZXR1cm4gZGVmZXJyZWQ7XG5cdH0sXG5cblx0Ly8gRGVmZXJyZWQgaGVscGVyXG5cdHdoZW46IGZ1bmN0aW9uKCBzdWJvcmRpbmF0ZSAvKiAsIC4uLiwgc3Vib3JkaW5hdGVOICovICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblx0XHRcdGxlbmd0aCA9IHJlc29sdmVWYWx1ZXMubGVuZ3RoLFxuXG5cdFx0XHQvLyB0aGUgY291bnQgb2YgdW5jb21wbGV0ZWQgc3Vib3JkaW5hdGVzXG5cdFx0XHRyZW1haW5pbmcgPSBsZW5ndGggIT09IDEgfHxcblx0XHRcdFx0KCBzdWJvcmRpbmF0ZSAmJiBqUXVlcnkuaXNGdW5jdGlvbiggc3Vib3JkaW5hdGUucHJvbWlzZSApICkgPyBsZW5ndGggOiAwLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkLlxuXHRcdFx0Ly8gSWYgcmVzb2x2ZVZhbHVlcyBjb25zaXN0IG9mIG9ubHkgYSBzaW5nbGUgRGVmZXJyZWQsIGp1c3QgdXNlIHRoYXQuXG5cdFx0XHRkZWZlcnJlZCA9IHJlbWFpbmluZyA9PT0gMSA/IHN1Ym9yZGluYXRlIDogalF1ZXJ5LkRlZmVycmVkKCksXG5cblx0XHRcdC8vIFVwZGF0ZSBmdW5jdGlvbiBmb3IgYm90aCByZXNvbHZlIGFuZCBwcm9ncmVzcyB2YWx1ZXNcblx0XHRcdHVwZGF0ZUZ1bmMgPSBmdW5jdGlvbiggaSwgY29udGV4dHMsIHZhbHVlcyApIHtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRjb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHR2YWx1ZXNbIGkgXSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gc2xpY2UuY2FsbCggYXJndW1lbnRzICkgOiB2YWx1ZTtcblx0XHRcdFx0XHRpZiAoIHZhbHVlcyA9PT0gcHJvZ3Jlc3NWYWx1ZXMgKSB7XG5cdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBjb250ZXh0cywgdmFsdWVzICk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICggISggLS1yZW1haW5pbmcgKSApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjb250ZXh0cywgdmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fSxcblxuXHRcdFx0cHJvZ3Jlc3NWYWx1ZXMsIHByb2dyZXNzQ29udGV4dHMsIHJlc29sdmVDb250ZXh0cztcblxuXHRcdC8vIEFkZCBsaXN0ZW5lcnMgdG8gRGVmZXJyZWQgc3Vib3JkaW5hdGVzOyB0cmVhdCBvdGhlcnMgYXMgcmVzb2x2ZWRcblx0XHRpZiAoIGxlbmd0aCA+IDEgKSB7XG5cdFx0XHRwcm9ncmVzc1ZhbHVlcyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XG5cdFx0XHRwcm9ncmVzc0NvbnRleHRzID0gbmV3IEFycmF5KCBsZW5ndGggKTtcblx0XHRcdHJlc29sdmVDb250ZXh0cyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHJlc29sdmVWYWx1ZXNbIGkgXS5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0cmVzb2x2ZVZhbHVlc1sgaSBdLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0LnByb2dyZXNzKCB1cGRhdGVGdW5jKCBpLCBwcm9ncmVzc0NvbnRleHRzLCBwcm9ncmVzc1ZhbHVlcyApIClcblx0XHRcdFx0XHRcdC5kb25lKCB1cGRhdGVGdW5jKCBpLCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKSApXG5cdFx0XHRcdFx0XHQuZmFpbCggZGVmZXJyZWQucmVqZWN0ICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0LS1yZW1haW5pbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBJZiB3ZSdyZSBub3Qgd2FpdGluZyBvbiBhbnl0aGluZywgcmVzb2x2ZSB0aGUgbWFzdGVyXG5cdFx0aWYgKCAhcmVtYWluaW5nICkge1xuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3Q7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHQvLyBBZGQgdGhlIGNhbGxiYWNrXG5cdGpRdWVyeS5yZWFkeS5wcm9taXNlKCkuZG9uZSggZm4gKTtcblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBJcyB0aGUgRE9NIHJlYWR5IHRvIGJlIHVzZWQ/IFNldCB0byB0cnVlIG9uY2UgaXQgb2NjdXJzLlxuXHRpc1JlYWR5OiBmYWxzZSxcblxuXHQvLyBBIGNvdW50ZXIgdG8gdHJhY2sgaG93IG1hbnkgaXRlbXMgdG8gd2FpdCBmb3IgYmVmb3JlXG5cdC8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2NzgxXG5cdHJlYWR5V2FpdDogMSxcblxuXHQvLyBIb2xkIChvciByZWxlYXNlKSB0aGUgcmVhZHkgZXZlbnRcblx0aG9sZFJlYWR5OiBmdW5jdGlvbiggaG9sZCApIHtcblx0XHRpZiAoIGhvbGQgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlXYWl0Kys7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHRcdH1cblx0fSxcblxuXHQvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5XG5cdHJlYWR5OiBmdW5jdGlvbiggd2FpdCApIHtcblxuXHRcdC8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHlcblx0XHRpZiAoIHdhaXQgPT09IHRydWUgPyAtLWpRdWVyeS5yZWFkeVdhaXQgOiBqUXVlcnkuaXNSZWFkeSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHlcblx0XHRqUXVlcnkuaXNSZWFkeSA9IHRydWU7XG5cblx0XHQvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZVxuXHRcdGlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4ZWN1dGVcblx0XHRyZWFkeUxpc3QucmVzb2x2ZVdpdGgoIGRvY3VtZW50LCBbIGpRdWVyeSBdICk7XG5cblx0XHQvLyBUcmlnZ2VyIGFueSBib3VuZCByZWFkeSBldmVudHNcblx0XHRpZiAoIGpRdWVyeS5mbi50cmlnZ2VySGFuZGxlciApIHtcblx0XHRcdGpRdWVyeSggZG9jdW1lbnQgKS50cmlnZ2VySGFuZGxlciggXCJyZWFkeVwiICk7XG5cdFx0XHRqUXVlcnkoIGRvY3VtZW50ICkub2ZmKCBcInJlYWR5XCIgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxuLyoqXG4gKiBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuICovXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbmpRdWVyeS5yZWFkeS5wcm9taXNlID0gZnVuY3Rpb24oIG9iaiApIHtcblx0aWYgKCAhcmVhZHlMaXN0ICkge1xuXG5cdFx0cmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cblx0XHQvLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3VtZW50KS5yZWFkeSgpIGlzIGNhbGxlZFxuXHRcdC8vIGFmdGVyIHRoZSBicm93c2VyIGV2ZW50IGhhcyBhbHJlYWR5IG9jY3VycmVkLlxuXHRcdC8vIFN1cHBvcnQ6IElFOS0xMCBvbmx5XG5cdFx0Ly8gT2xkZXIgSUUgc29tZXRpbWVzIHNpZ25hbHMgXCJpbnRlcmFjdGl2ZVwiIHRvbyBzb29uXG5cdFx0aWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0XHRcdCggZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkge1xuXG5cdFx0XHQvLyBIYW5kbGUgaXQgYXN5bmNocm9ub3VzbHkgdG8gYWxsb3cgc2NyaXB0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gZGVsYXkgcmVhZHlcblx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHRcdFx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcblx0XHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZWFkeUxpc3QucHJvbWlzZSggb2JqICk7XG59O1xuXG4vLyBLaWNrIG9mZiB0aGUgRE9NIHJlYWR5IGNoZWNrIGV2ZW4gaWYgdGhlIHVzZXIgZG9lcyBub3RcbmpRdWVyeS5yZWFkeS5wcm9taXNlKCk7XG5cblxuXG5cbi8vIE11bHRpZnVuY3Rpb25hbCBtZXRob2QgdG8gZ2V0IGFuZCBzZXQgdmFsdWVzIG9mIGEgY29sbGVjdGlvblxuLy8gVGhlIHZhbHVlL3MgY2FuIG9wdGlvbmFsbHkgYmUgZXhlY3V0ZWQgaWYgaXQncyBhIGZ1bmN0aW9uXG52YXIgYWNjZXNzID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwgcmF3ICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gZWxlbXMubGVuZ3RoLFxuXHRcdGJ1bGsgPSBrZXkgPT0gbnVsbDtcblxuXHQvLyBTZXRzIG1hbnkgdmFsdWVzXG5cdGlmICggalF1ZXJ5LnR5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRhY2Nlc3MoIGVsZW1zLCBmbiwgaSwga2V5WyBpIF0sIHRydWUsIGVtcHR5R2V0LCByYXcgKTtcblx0XHR9XG5cblx0Ly8gU2V0cyBvbmUgdmFsdWVcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXG5cdFx0aWYgKCAhalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyYXcgPSB0cnVlO1xuXHRcdH1cblxuXHRcdGlmICggYnVsayApIHtcblxuXHRcdFx0Ly8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0XG5cdFx0XHRpZiAoIHJhdyApIHtcblx0XHRcdFx0Zm4uY2FsbCggZWxlbXMsIHZhbHVlICk7XG5cdFx0XHRcdGZuID0gbnVsbDtcblxuXHRcdFx0Ly8gLi4uZXhjZXB0IHdoZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YnVsayA9IGZuO1xuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBlbGVtLCBrZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xuXHRcdFx0XHRcdHZhbHVlIDpcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCBlbGVtc1sgaSBdLCBpLCBmbiggZWxlbXNbIGkgXSwga2V5ICkgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBjaGFpbmFibGUgP1xuXHRcdGVsZW1zIDpcblxuXHRcdC8vIEdldHNcblx0XHRidWxrID9cblx0XHRcdGZuLmNhbGwoIGVsZW1zICkgOlxuXHRcdFx0bGVuID8gZm4oIGVsZW1zWyAwIF0sIGtleSApIDogZW1wdHlHZXQ7XG59O1xudmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0Ly8gQWNjZXB0cyBvbmx5OlxuXHQvLyAgLSBOb2RlXG5cdC8vICAgIC0gTm9kZS5FTEVNRU5UX05PREVcblx0Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREVcblx0Ly8gIC0gT2JqZWN0XG5cdC8vICAgIC0gQW55XG5cdC8qIGpzaGludCAtVzAxOCAqL1xuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0cmVnaXN0ZXI6IGZ1bmN0aW9uKCBvd25lciwgaW5pdGlhbCApIHtcblx0XHR2YXIgdmFsdWUgPSBpbml0aWFsIHx8IHt9O1xuXG5cdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdC8vIHVzZSBwbGFpbiBhc3NpZ25tZW50XG5cdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0Ly8gT3RoZXJ3aXNlIHNlY3VyZSBpdCBpbiBhIG5vbi1lbnVtZXJhYmxlLCBub24td3JpdGFibGUgcHJvcGVydHlcblx0XHQvLyBjb25maWd1cmFiaWxpdHkgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdC8vIGRlbGV0ZWQgd2l0aCB0aGUgZGVsZXRlIG9wZXJhdG9yXG5cdFx0fSBlbHNlIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdH0gKTtcblx0XHR9XG5cdFx0cmV0dXJuIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0fSxcblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxuXHRcdC8vIGJ1dCB3ZSBzaG91bGQgbm90LCBzZWUgIzgzMzUuXG5cdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0aWYgKCAhYWNjZXB0RGF0YSggb3duZXIgKSApIHtcblx0XHRcdHJldHVybiB7fTtcblx0XHR9XG5cblx0XHQvLyBDaGVjayBpZiB0aGUgb3duZXIgb2JqZWN0IGFscmVhZHkgaGFzIGEgY2FjaGVcblx0XHR2YXIgdmFsdWUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHQvLyBJZiBub3QsIGNyZWF0ZSBvbmVcblx0XHRpZiAoICF2YWx1ZSApIHtcblx0XHRcdHZhbHVlID0ge307XG5cblx0XHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxuXHRcdFx0Ly8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAjODMzNS5cblx0XHRcdC8vIEFsd2F5cyByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LlxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xuXG5cdFx0XHRcdC8vIElmIGl0IGlzIGEgbm9kZSB1bmxpa2VseSB0byBiZSBzdHJpbmdpZnktZWQgb3IgbG9vcGVkIG92ZXJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcblx0XHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHlcblx0XHRcdFx0Ly8gY29uZmlndXJhYmxlIG11c3QgYmUgdHJ1ZSB0byBhbGxvdyB0aGUgcHJvcGVydHkgdG8gYmVcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XG5cdFx0dmFyIHByb3AsXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGUoIG93bmVyICk7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBkYXRhIF0gPSB2YWx1ZTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwgeyBwcm9wZXJ0aWVzIH0gXSBhcmdzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29weSB0aGUgcHJvcGVydGllcyBvbmUtYnktb25lIHRvIHRoZSBjYWNoZSBvYmplY3Rcblx0XHRcdGZvciAoIHByb3AgaW4gZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVbIHByb3AgXSA9IGRhdGFbIHByb3AgXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSAmJiBvd25lclsgdGhpcy5leHBhbmRvIF1bIGtleSBdO1xuXHR9LFxuXHRhY2Nlc3M6IGZ1bmN0aW9uKCBvd25lciwga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgc3RvcmVkO1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRzdG9yZWQgPSB0aGlzLmdldCggb3duZXIsIGtleSApO1xuXG5cdFx0XHRyZXR1cm4gc3RvcmVkICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRzdG9yZWQgOiB0aGlzLmdldCggb3duZXIsIGpRdWVyeS5jYW1lbENhc2UoIGtleSApICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLCBuYW1lLCBjYW1lbCxcblx0XHRcdGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0aWYgKCBjYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0aGlzLnJlZ2lzdGVyKCBvd25lciApO1xuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXNcblx0XHRcdGlmICggalF1ZXJ5LmlzQXJyYXkoIGtleSApICkge1xuXG5cdFx0XHRcdC8vIElmIFwibmFtZVwiIGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2hlbiBkYXRhIGlzIGluaXRpYWxseSBjcmVhdGVkLCB2aWEgKFwia2V5XCIsIFwidmFsXCIpIHNpZ25hdHVyZSxcblx0XHRcdFx0Ly8ga2V5cyB3aWxsIGJlIGNvbnZlcnRlZCB0byBjYW1lbENhc2UuXG5cdFx0XHRcdC8vIFNpbmNlIHRoZXJlIGlzIG5vIHdheSB0byB0ZWxsIF9ob3dfIGEga2V5IHdhcyBhZGRlZCwgcmVtb3ZlXG5cdFx0XHRcdC8vIGJvdGggcGxhaW4ga2V5IGFuZCBjYW1lbENhc2Uga2V5LiAjMTI3ODZcblx0XHRcdFx0Ly8gVGhpcyB3aWxsIG9ubHkgcGVuYWxpemUgdGhlIGFycmF5IGFyZ3VtZW50IHBhdGguXG5cdFx0XHRcdG5hbWUgPSBrZXkuY29uY2F0KCBrZXkubWFwKCBqUXVlcnkuY2FtZWxDYXNlICkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNhbWVsID0galF1ZXJ5LmNhbWVsQ2FzZSgga2V5ICk7XG5cblx0XHRcdFx0Ly8gVHJ5IHRoZSBzdHJpbmcgYXMgYSBrZXkgYmVmb3JlIGFueSBtYW5pcHVsYXRpb25cblx0XHRcdFx0aWYgKCBrZXkgaW4gY2FjaGUgKSB7XG5cdFx0XHRcdFx0bmFtZSA9IFsga2V5LCBjYW1lbCBdO1xuXHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0Ly8gSWYgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cywgdXNlIGl0LlxuXHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgY3JlYXRlIGFuIGFycmF5IGJ5IG1hdGNoaW5nIG5vbi13aGl0ZXNwYWNlXG5cdFx0XHRcdFx0bmFtZSA9IGNhbWVsO1xuXHRcdFx0XHRcdG5hbWUgPSBuYW1lIGluIGNhY2hlID9cblx0XHRcdFx0XHRcdFsgbmFtZSBdIDogKCBuYW1lLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGkgPSBuYW1lLmxlbmd0aDtcblxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSBjYWNoZVsgbmFtZVsgaSBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIHRoZXJlJ3Mgbm8gbW9yZSBkYXRhXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fCBqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKSApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9IDM1LTQ1K1xuXHRcdFx0Ly8gV2Via2l0ICYgQmxpbmsgcGVyZm9ybWFuY2Ugc3VmZmVycyB3aGVuIGRlbGV0aW5nIHByb3BlcnRpZXNcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcblx0XHRcdC8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzg2MDdcblx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRoYXNEYXRhOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdHJldHVybiBjYWNoZSAhPT0gdW5kZWZpbmVkICYmICFqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKTtcblx0fVxufTtcbnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XG5cblxuXG4vL1x0SW1wbGVtZW50YXRpb24gU3VtbWFyeVxuLy9cbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXG4vL1x0Mi4gSW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9yYWdlXG4vL1x0XHRwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cbi8vXHQ0LiBfTmV2ZXJfIGV4cG9zZSBcInByaXZhdGVcIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpXG4vL1x0NS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XG5cbnZhciByYnJhY2UgPSAvXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcblxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcblx0dmFyIG5hbWU7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQmXCIgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdGRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApO1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhID09PSBcInRydWVcIiA/IHRydWUgOlxuXHRcdFx0XHRcdGRhdGEgPT09IFwiZmFsc2VcIiA/IGZhbHNlIDpcblx0XHRcdFx0XHRkYXRhID09PSBcIm51bGxcIiA/IG51bGwgOlxuXG5cdFx0XHRcdFx0Ly8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmdcblx0XHRcdFx0XHQrZGF0YSArIFwiXCIgPT09IGRhdGEgPyArZGF0YSA6XG5cdFx0XHRcdFx0cmJyYWNlLnRlc3QoIGRhdGEgKSA/IGpRdWVyeS5wYXJzZUpTT04oIGRhdGEgKSA6XG5cdFx0XHRcdFx0ZGF0YTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZGF0YTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuaGFzRGF0YSggZWxlbSApIHx8IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH0sXG5cblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcblx0Ly8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuXG5cdF9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIgKSApIHtcblx0XHRcdFx0XHRpID0gYXR0cnMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTExK1xuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGEsIGNhbWVsS2V5O1xuXG5cdFx0XHQvLyBUaGUgY2FsbGluZyBqUXVlcnkgb2JqZWN0IChlbGVtZW50IG1hdGNoZXMpIGlzIG5vdCBlbXB0eVxuXHRcdFx0Ly8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0aGlzWyAwIF0pIGFuZCB0aGVcblx0XHRcdC8vIGB2YWx1ZWAgcGFyYW1ldGVyIHdhcyBub3QgdW5kZWZpbmVkLiBBbiBlbXB0eSBqUXVlcnkgb2JqZWN0XG5cdFx0XHQvLyB3aWxsIHJlc3VsdCBpbiBgdW5kZWZpbmVkYCBmb3IgZWxlbSA9IHRoaXNbIDAgXSB3aGljaCB3aWxsXG5cdFx0XHQvLyB0aHJvdyBhbiBleGNlcHRpb24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLlxuXHRcdFx0aWYgKCBlbGVtICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxuXHRcdFx0XHQvLyB3aXRoIHRoZSBrZXkgYXMtaXNcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICkgfHxcblxuXHRcdFx0XHRcdC8vIFRyeSB0byBmaW5kIGRhc2hlZCBrZXkgaWYgaXQgZXhpc3RzIChnaC0yNzc5KVxuXHRcdFx0XHRcdC8vIFRoaXMgaXMgZm9yIDIuMi54IG9ubHlcblx0XHRcdFx0XHRkYXRhVXNlci5nZXQoIGVsZW0sIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKSApO1xuXG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FtZWxLZXkgPSBqUXVlcnkuY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIHdpdGggdGhlIGtleSBjYW1lbGl6ZWRcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwgY2FtZWxLZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIFwiZGlzY292ZXJcIiB0aGUgZGF0YSBpblxuXHRcdFx0XHQvLyBIVE1MNSBjdXN0b20gZGF0YS0qIGF0dHJzXG5cdFx0XHRcdGRhdGEgPSBkYXRhQXR0ciggZWxlbSwgY2FtZWxLZXksIHVuZGVmaW5lZCApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgdGhlIGRhdGEuLi5cblx0XHRcdGNhbWVsS2V5ID0galF1ZXJ5LmNhbWVsQ2FzZSgga2V5ICk7XG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIEZpcnN0LCBhdHRlbXB0IHRvIHN0b3JlIGEgY29weSBvciByZWZlcmVuY2Ugb2YgYW55XG5cdFx0XHRcdC8vIGRhdGEgdGhhdCBtaWdodCd2ZSBiZWVuIHN0b3JlIHdpdGggYSBjYW1lbENhc2VkIGtleS5cblx0XHRcdFx0dmFyIGRhdGEgPSBkYXRhVXNlci5nZXQoIHRoaXMsIGNhbWVsS2V5ICk7XG5cblx0XHRcdFx0Ly8gRm9yIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGUgaW50ZXJvcCwgd2UgaGF2ZSB0b1xuXHRcdFx0XHQvLyBzdG9yZSBwcm9wZXJ0eSBuYW1lcyB3aXRoIGRhc2hlcyBpbiBhIGNhbWVsQ2FzZSBmb3JtLlxuXHRcdFx0XHQvLyBUaGlzIG1pZ2h0IG5vdCBhcHBseSB0byBhbGwgcHJvcGVydGllcy4uLipcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBjYW1lbEtleSwgdmFsdWUgKTtcblxuXHRcdFx0XHQvLyAqLi4uIEluIHRoZSBjYXNlIG9mIHByb3BlcnRpZXMgdGhhdCBtaWdodCBfYWN0dWFsbHlfXG5cdFx0XHRcdC8vIGhhdmUgZGFzaGVzLCB3ZSBuZWVkIHRvIGFsc28gc3RvcmUgYSBjb3B5IG9mIHRoYXRcblx0XHRcdFx0Ly8gdW5jaGFuZ2VkIHByb3BlcnR5LlxuXHRcdFx0XHRpZiAoIGtleS5pbmRleE9mKCBcIi1cIiApID4gLTEgJiYgZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5LCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgalF1ZXJ5LmlzQXJyYXkoIGRhdGEgKSApIHtcblx0XHRcdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcblx0XHRcdGVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKS5hZGQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgc2V0dGVyID0gMjtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRkYXRhID0gdHlwZTtcblx0XHRcdHR5cGUgPSBcImZ4XCI7XG5cdFx0XHRzZXR0ZXItLTtcblx0XHR9XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBkYXRhICk7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHR9LFxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0fSApO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcblx0cHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHtcblx0XHR2YXIgdG1wLFxuXHRcdFx0Y291bnQgPSAxLFxuXHRcdFx0ZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJlc29sdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRvYmogPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0bXAgPSBkYXRhUHJpdi5nZXQoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xuXHRcdFx0XHRjb3VudCsrO1xuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlc29sdmUoKTtcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XG5cdH1cbn0gKTtcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcblxudmFyIHJjc3NOdW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApO1xuXG5cbnZhciBjc3NFeHBhbmQgPSBbIFwiVG9wXCIsIFwiUmlnaHRcIiwgXCJCb3R0b21cIiwgXCJMZWZ0XCIgXTtcblxudmFyIGlzSGlkZGVuID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xuXG5cdFx0Ly8gaXNIaWRkZW4gbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcblx0XHQvLyBpbiB0aGF0IGNhc2UsIGVsZW1lbnQgd2lsbCBiZSBzZWNvbmQgYXJndW1lbnRcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcblx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCIgfHxcblx0XHRcdCFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXHR9O1xuXG5cblxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcblx0dmFyIGFkanVzdGVkLFxuXHRcdHNjYWxlID0gMSxcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xuXHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0d2Vlbi5jdXIoKTsgfSA6XG5cdFx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTsgfSxcblx0XHRpbml0aWFsID0gY3VycmVudFZhbHVlKCksXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxuXG5cdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRpbml0aWFsSW5Vbml0ID0gKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XG5cblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXG5cdFx0dmFsdWVQYXJ0cyA9IHZhbHVlUGFydHMgfHwgW107XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0ZG8ge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyBpdGVyYXRpb24gemVyb2VkIG91dCwgZG91YmxlIHVudGlsIHdlIGdldCAqc29tZXRoaW5nKi5cblx0XHRcdC8vIFVzZSBzdHJpbmcgZm9yIGRvdWJsaW5nIHNvIHdlIGRvbid0IGFjY2lkZW50YWxseSBzZWUgc2NhbGUgYXMgdW5jaGFuZ2VkIGJlbG93XG5cdFx0XHRzY2FsZSA9IHNjYWxlIHx8IFwiLjVcIjtcblxuXHRcdFx0Ly8gQWRqdXN0IGFuZCBhcHBseVxuXHRcdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTtcblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIFVwZGF0ZSBzY2FsZSwgdG9sZXJhdGluZyB6ZXJvIG9yIE5hTiBmcm9tIHR3ZWVuLmN1cigpXG5cdFx0Ly8gQnJlYWsgdGhlIGxvb3AgaWYgc2NhbGUgaXMgdW5jaGFuZ2VkIG9yIHBlcmZlY3QsIG9yIGlmIHdlJ3ZlIGp1c3QgaGFkIGVub3VnaC5cblx0XHR9IHdoaWxlIChcblx0XHRcdHNjYWxlICE9PSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsICkgJiYgc2NhbGUgIT09IDEgJiYgLS1tYXhJdGVyYXRpb25zXG5cdFx0KTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG52YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7XG5cbnZhciBydGFnTmFtZSA9ICggLzwoW1xcdzotXSspLyApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRTlcblx0b3B0aW9uOiBbIDEsIFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLCBcIjwvc2VsZWN0PlwiIF0sXG5cblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcblx0Ly8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlblxuXHQvLyB0aGlzIGJ5IG9taXR0aW5nIDx0Ym9keT4gb3Igb3RoZXIgcmVxdWlyZWQgZWxlbWVudHMuXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcblx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0dHI6IFsgMiwgXCI8dGFibGU+PHRib2R5PlwiLCBcIjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXG5cblx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG59O1xuXG4vLyBTdXBwb3J0OiBJRTlcbndyYXBNYXAub3B0Z3JvdXAgPSB3cmFwTWFwLm9wdGlvbjtcblxud3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFwLmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDtcbndyYXBNYXAudGggPSB3cmFwTWFwLnRkO1xuXG5cbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0Ly8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3VtZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAoIzE1MTUxKVxuXHR2YXIgcmV0ID0gdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgP1xuXHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnIHx8IFwiKlwiICkgOlxuXHRcdFx0dHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiA/XG5cdFx0XHRcdGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnIHx8IFwiKlwiICkgOlxuXHRcdFx0W107XG5cblx0cmV0dXJuIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRhZyAmJiBqUXVlcnkubm9kZU5hbWUoIGNvbnRleHQsIHRhZyApID9cblx0XHRqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKSA6XG5cdFx0cmV0O1xufVxuXG5cbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxuZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZGF0YVByaXYuc2V0KFxuXHRcdFx0ZWxlbXNbIGkgXSxcblx0XHRcdFwiZ2xvYmFsRXZhbFwiLFxuXHRcdFx0IXJlZkVsZW1lbnRzIHx8IGRhdGFQcml2LmdldCggcmVmRWxlbWVudHNbIGkgXSwgXCJnbG9iYWxFdmFsXCIgKVxuXHRcdCk7XG5cdH1cbn1cblxuXG52YXIgcmh0bWwgPSAvPHwmIz9cXHcrOy87XG5cbmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7XG5cdHZhciBlbGVtLCB0bXAsIHRhZywgd3JhcCwgY29udGFpbnMsIGosXG5cdFx0ZnJhZ21lbnQgPSBjb250ZXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRub2RlcyA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGVsZW0gPSBlbGVtc1sgaSBdO1xuXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XG5cblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0aWYgKCBqUXVlcnkudHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4xLCBQaGFudG9tSlM8MlxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjEsIFBoYW50b21KUzwyXG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0dG1wLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50XG5cdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRpID0gMDtcblx0d2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHtcblxuXHRcdC8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpXG5cdFx0aWYgKCBzZWxlY3Rpb24gJiYgalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7XG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XG5cdFx0XHRcdGlnbm9yZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y29udGFpbnMgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBjb250YWlucyApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wLTQuMywgU2FmYXJpPD01LjFcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IFNhZmFyaTw9NS4xLCBBbmRyb2lkPDQuMlxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFPD0xMStcblx0Ly8gTWFrZSBzdXJlIHRleHRhcmVhIChhbmQgY2hlY2tib3gpIGRlZmF1bHRWYWx1ZSBpcyBwcm9wZXJseSBjbG9uZWRcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcbn0gKSgpO1xuXG5cbnZhclxuXHRya2V5RXZlbnQgPSAvXmtleS8sXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRTlcbi8vIFNlZSAjMTMzOTMgZm9yIG1vcmUgaW5mb1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHQvLyBEb24ndCBhdHRhY2ggZXZlbnRzIHRvIG5vRGF0YSBvciB0ZXh0L2NvbW1lbnQgbm9kZXMgKGJ1dCBhbGxvdyBwbGFpbiBvYmplY3RzKVxuXHRcdGlmICggIWVsZW1EYXRhICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUgaGFuZGxlclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xuXHRcdFx0aGFuZGxlciA9IGhhbmRsZU9iakluLmhhbmRsZXI7XG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSB7fTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFRoZXJlICptdXN0KiBiZSBhIHR5cGUsIG5vIGF0dGFjaGluZyBuYW1lc3BhY2Utb25seSBoYW5kbGVyc1xuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGV2ZW50IGNoYW5nZXMgaXRzIHR5cGUsIHVzZSB0aGUgc3BlY2lhbCBldmVudCBoYW5kbGVycyBmb3IgdGhlIGNoYW5nZWQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIElmIHNlbGVjdG9yIGRlZmluZWQsIGRldGVybWluZSBzcGVjaWFsIGV2ZW50IGFwaSB0eXBlLCBvdGhlcndpc2UgZ2l2ZW4gdHlwZVxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBVcGRhdGUgc3BlY2lhbCBiYXNlZCBvbiBuZXdseSByZXNldCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gaGFuZGxlT2JqIGlzIHBhc3NlZCB0byBhbGwgZXZlbnQgaGFuZGxlcnNcblx0XHRcdGhhbmRsZU9iaiA9IGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0b3JpZ1R5cGU6IG9yaWdUeXBlLFxuXHRcdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0XHRoYW5kbGVyOiBoYW5kbGVyLFxuXHRcdFx0XHRndWlkOiBoYW5kbGVyLmd1aWQsXG5cdFx0XHRcdHNlbGVjdG9yOiBzZWxlY3Rvcixcblx0XHRcdFx0bmVlZHNDb250ZXh0OiBzZWxlY3RvciAmJiBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSxcblx0XHRcdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiIClcblx0XHRcdH0sIGhhbmRsZU9iakluICk7XG5cblx0XHRcdC8vIEluaXQgdGhlIGV2ZW50IGhhbmRsZXIgcXVldWUgaWYgd2UncmUgdGhlIGZpcnN0XG5cdFx0XHRpZiAoICEoIGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gKSApIHtcblx0XHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSA9IFtdO1xuXHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50ID0gMDtcblxuXHRcdFx0XHQvLyBPbmx5IHVzZSBhZGRFdmVudExpc3RlbmVyIGlmIHRoZSBzcGVjaWFsIGV2ZW50cyBoYW5kbGVyIHJldHVybnMgZmFsc2Vcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC5zZXR1cCB8fFxuXHRcdFx0XHRcdHNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGVsZW0uYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdFx0XHRcdGVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzcGVjaWFsLmFkZCApIHtcblx0XHRcdFx0c3BlY2lhbC5hZGQuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cblx0XHRcdFx0aWYgKCAhaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlci5ndWlkID0gaGFuZGxlci5ndWlkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XG5cdFx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywgMCwgaGFuZGxlT2JqICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRoYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gS2VlcCB0cmFjayBvZiB3aGljaCBldmVudHMgaGF2ZSBldmVyIGJlZW4gdXNlZCwgZm9yIGV2ZW50IG9wdGltaXphdGlvblxuXHRcdFx0alF1ZXJ5LmV2ZW50Lmdsb2JhbFsgdHlwZSBdID0gdHJ1ZTtcblx0XHR9XG5cblx0fSxcblxuXHQvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnRcblx0cmVtb3ZlOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApIHtcblxuXHRcdHZhciBqLCBvcmlnQ291bnQsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICkgJiYgZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHRpZiAoICFlbGVtRGF0YSB8fCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBPbmNlIGZvciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRlZCkgZm9yIHRoZSBlbGVtZW50XG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQgXSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xuXHRcdFx0dG1wID0gdG1wWyAyIF0gJiZcblx0XHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICk7XG5cblx0XHRcdC8vIFJlbW92ZSBtYXRjaGluZyBldmVudHNcblx0XHRcdG9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTtcblxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXG5cdFx0XHRcdFx0KCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiZcblx0XHRcdFx0XHQoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxuXHRcdFx0XHRcdFx0c2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fFxuXHRcdFx0XHRcdHNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRlbGV0ZSBldmVudHNbIHR5cGUgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgZGF0YSBhbmQgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZFxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xuXHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImhhbmRsZSBldmVudHNcIiApO1xuXHRcdH1cblx0fSxcblxuXHRkaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0ZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApO1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICksXG5cdFx0XHRoYW5kbGVycyA9ICggZGF0YVByaXYuZ2V0KCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXHRcdGV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpcztcblxuXHRcdC8vIENhbGwgdGhlIHByZURpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZSwgYW5kIGxldCBpdCBiYWlsIGlmIGRlc2lyZWRcblx0XHRpZiAoIHNwZWNpYWwucHJlRGlzcGF0Y2ggJiYgc3BlY2lhbC5wcmVEaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcblx0XHRoYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7XG5cblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBtYXRjaGVkID0gaGFuZGxlclF1ZXVlWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcblxuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxuXHRcdFx0XHQhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblxuXHRcdFx0XHQvLyBUcmlnZ2VyZWQgZXZlbnQgbXVzdCBlaXRoZXIgMSkgaGF2ZSBubyBuYW1lc3BhY2UsIG9yIDIpIGhhdmUgbmFtZXNwYWNlKHMpXG5cdFx0XHRcdC8vIGEgc3Vic2V0IG9yIGVxdWFsIHRvIHRob3NlIGluIHRoZSBib3VuZCBldmVudCAoYm90aCBjYW4gaGF2ZSBubyBuYW1lc3BhY2UpLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBtYXRjaGVzLCBzZWwsIGhhbmRsZU9iaixcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBTdXBwb3J0IChhdCBsZWFzdCk6IENocm9tZSwgSUU5XG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xuXHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICgjMTMxODApXG5cdFx0Ly9cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PD00Mitcblx0XHQvLyBBdm9pZCBub24tbGVmdC1jbGljayBpbiBGRiBidXQgZG9uJ3QgYmxvY2sgSUUgcmFkaW8gZXZlbnRzICgjMzg2MSwgZ2gtMjM0Mylcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiYgY3VyLm5vZGVUeXBlICYmXG5cdFx0XHQoIGV2ZW50LnR5cGUgIT09IFwiY2xpY2tcIiB8fCBpc05hTiggZXZlbnQuYnV0dG9uICkgfHwgZXZlbnQuYnV0dG9uIDwgMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICggY3VyLmRpc2FibGVkICE9PSB0cnVlIHx8IGV2ZW50LnR5cGUgIT09IFwiY2xpY2tcIiApICkge1xuXHRcdFx0XHRcdG1hdGNoZXMgPSBbXTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcblx0XHRcdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBpIF07XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICgjMTMyMDMpXG5cdFx0XHRcdFx0XHRzZWwgPSBoYW5kbGVPYmouc2VsZWN0b3IgKyBcIiBcIjtcblxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVzWyBzZWwgXSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVzWyBzZWwgXSA9IGhhbmRsZU9iai5uZWVkc0NvbnRleHQgP1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeSggc2VsLCB0aGlzICkuaW5kZXgoIGN1ciApID4gLTEgOlxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kKCBzZWwsIHRoaXMsIG51bGwsIFsgY3VyIF0gKS5sZW5ndGg7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXNbIHNlbCBdICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZXMubGVuZ3RoICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlcyB9ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHRoZSByZW1haW5pbmcgKGRpcmVjdGx5LWJvdW5kKSBoYW5kbGVyc1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IHRoaXMsIGhhbmRsZXJzOiBoYW5kbGVycy5zbGljZSggZGVsZWdhdGVDb3VudCApIH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xuXHR9LFxuXG5cdC8vIEluY2x1ZGVzIHNvbWUgZXZlbnQgcHJvcHMgc2hhcmVkIGJ5IEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50XG5cdHByb3BzOiAoIFwiYWx0S2V5IGJ1YmJsZXMgY2FuY2VsYWJsZSBjdHJsS2V5IGN1cnJlbnRUYXJnZXQgZGV0YWlsIGV2ZW50UGhhc2UgXCIgK1xuXHRcdFwibWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaFwiICkuc3BsaXQoIFwiIFwiICksXG5cblx0Zml4SG9va3M6IHt9LFxuXG5cdGtleUhvb2tzOiB7XG5cdFx0cHJvcHM6IFwiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZVwiLnNwbGl0KCBcIiBcIiApLFxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcblxuXHRcdFx0Ly8gQWRkIHdoaWNoIGZvciBrZXkgZXZlbnRzXG5cdFx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgKSB7XG5cdFx0XHRcdGV2ZW50LndoaWNoID0gb3JpZ2luYWwuY2hhckNvZGUgIT0gbnVsbCA/IG9yaWdpbmFsLmNoYXJDb2RlIDogb3JpZ2luYWwua2V5Q29kZTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH1cblx0fSxcblxuXHRtb3VzZUhvb2tzOiB7XG5cdFx0cHJvcHM6ICggXCJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VYIHBhZ2VZIFwiICtcblx0XHRcdFwic2NyZWVuWCBzY3JlZW5ZIHRvRWxlbWVudFwiICkuc3BsaXQoIFwiIFwiICksXG5cdFx0ZmlsdGVyOiBmdW5jdGlvbiggZXZlbnQsIG9yaWdpbmFsICkge1xuXHRcdFx0dmFyIGV2ZW50RG9jLCBkb2MsIGJvZHksXG5cdFx0XHRcdGJ1dHRvbiA9IG9yaWdpbmFsLmJ1dHRvbjtcblxuXHRcdFx0Ly8gQ2FsY3VsYXRlIHBhZ2VYL1kgaWYgbWlzc2luZyBhbmQgY2xpZW50WC9ZIGF2YWlsYWJsZVxuXHRcdFx0aWYgKCBldmVudC5wYWdlWCA9PSBudWxsICYmIG9yaWdpbmFsLmNsaWVudFggIT0gbnVsbCApIHtcblx0XHRcdFx0ZXZlbnREb2MgPSBldmVudC50YXJnZXQub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcblx0XHRcdFx0ZG9jID0gZXZlbnREb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0XHRib2R5ID0gZXZlbnREb2MuYm9keTtcblxuXHRcdFx0XHRldmVudC5wYWdlWCA9IG9yaWdpbmFsLmNsaWVudFggK1xuXHRcdFx0XHRcdCggZG9jICYmIGRvYy5zY3JvbGxMZWZ0IHx8IGJvZHkgJiYgYm9keS5zY3JvbGxMZWZ0IHx8IDAgKSAtXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCApO1xuXHRcdFx0XHRldmVudC5wYWdlWSA9IG9yaWdpbmFsLmNsaWVudFkgK1xuXHRcdFx0XHRcdCggZG9jICYmIGRvYy5zY3JvbGxUb3AgIHx8IGJvZHkgJiYgYm9keS5zY3JvbGxUb3AgIHx8IDAgKSAtXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudFRvcCAgfHwgYm9keSAmJiBib2R5LmNsaWVudFRvcCAgfHwgMCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0XG5cdFx0XHQvLyBOb3RlOiBidXR0b24gaXMgbm90IG5vcm1hbGl6ZWQsIHNvIGRvbid0IHVzZSBpdFxuXHRcdFx0aWYgKCAhZXZlbnQud2hpY2ggJiYgYnV0dG9uICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdGV2ZW50LndoaWNoID0gKCBidXR0b24gJiAxID8gMSA6ICggYnV0dG9uICYgMiA/IDMgOiAoIGJ1dHRvbiAmIDQgPyAyIDogMCApICkgKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH1cblx0fSxcblxuXHRmaXg6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRpZiAoIGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH1cblxuXHRcdC8vIENyZWF0ZSBhIHdyaXRhYmxlIGNvcHkgb2YgdGhlIGV2ZW50IG9iamVjdCBhbmQgbm9ybWFsaXplIHNvbWUgcHJvcGVydGllc1xuXHRcdHZhciBpLCBwcm9wLCBjb3B5LFxuXHRcdFx0dHlwZSA9IGV2ZW50LnR5cGUsXG5cdFx0XHRvcmlnaW5hbEV2ZW50ID0gZXZlbnQsXG5cdFx0XHRmaXhIb29rID0gdGhpcy5maXhIb29rc1sgdHlwZSBdO1xuXG5cdFx0aWYgKCAhZml4SG9vayApIHtcblx0XHRcdHRoaXMuZml4SG9va3NbIHR5cGUgXSA9IGZpeEhvb2sgPVxuXHRcdFx0XHRybW91c2VFdmVudC50ZXN0KCB0eXBlICkgPyB0aGlzLm1vdXNlSG9va3MgOlxuXHRcdFx0XHRya2V5RXZlbnQudGVzdCggdHlwZSApID8gdGhpcy5rZXlIb29rcyA6XG5cdFx0XHRcdHt9O1xuXHRcdH1cblx0XHRjb3B5ID0gZml4SG9vay5wcm9wcyA/IHRoaXMucHJvcHMuY29uY2F0KCBmaXhIb29rLnByb3BzICkgOiB0aGlzLnByb3BzO1xuXG5cdFx0ZXZlbnQgPSBuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cblx0XHRpID0gY29weS5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRwcm9wID0gY29weVsgaSBdO1xuXHRcdFx0ZXZlbnRbIHByb3AgXSA9IG9yaWdpbmFsRXZlbnRbIHByb3AgXTtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBDb3Jkb3ZhIDIuNSAoV2ViS2l0KSAoIzEzMjU1KVxuXHRcdC8vIEFsbCBldmVudHMgc2hvdWxkIGhhdmUgYSB0YXJnZXQ7IENvcmRvdmEgZGV2aWNlcmVhZHkgZG9lc24ndFxuXHRcdGlmICggIWV2ZW50LnRhcmdldCApIHtcblx0XHRcdGV2ZW50LnRhcmdldCA9IGRvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA2LjArLCBDaHJvbWU8Mjhcblx0XHQvLyBUYXJnZXQgc2hvdWxkIG5vdCBiZSBhIHRleHQgbm9kZSAoIzUwNCwgIzEzMTQzKVxuXHRcdGlmICggZXZlbnQudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZXZlbnQudGFyZ2V0LnBhcmVudE5vZGU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZpeEhvb2suZmlsdGVyID8gZml4SG9vay5maWx0ZXIoIGV2ZW50LCBvcmlnaW5hbEV2ZW50ICkgOiBldmVudDtcblx0fSxcblxuXHRzcGVjaWFsOiB7XG5cdFx0bG9hZDoge1xuXG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Zm9jdXM6IHtcblxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzICE9PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuZm9jdXMgKSB7XG5cdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c2luXCJcblx0XHR9LFxuXHRcdGJsdXI6IHtcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgJiYgdGhpcy5ibHVyICkge1xuXHRcdFx0XHRcdHRoaXMuYmx1cigpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c291dFwiXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBGb3IgY2hlY2tib3gsIGZpcmUgbmF0aXZlIGV2ZW50IHNvIGNoZWNrZWQgc3RhdGUgd2lsbCBiZSByaWdodFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayAmJiBqUXVlcnkubm9kZU5hbWUoIHRoaXMsIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHRoaXMuY2xpY2soKTtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdC8vIEZvciBjcm9zcy1icm93c2VyIGNvbnNpc3RlbmN5LCBkb24ndCBmaXJlIG5hdGl2ZSAuY2xpY2soKSBvbiBsaW5rc1xuXHRcdFx0X2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5ub2RlTmFtZSggZXZlbnQudGFyZ2V0LCBcImFcIiApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRiZWZvcmV1bmxvYWQ6IHtcblx0XHRcdHBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggMjArXG5cdFx0XHRcdC8vIEZpcmVmb3ggZG9lc24ndCBhbGVydCBpZiB0aGUgcmV0dXJuVmFsdWUgZmllbGQgaXMgbm90IHNldC5cblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgIT09IHVuZGVmaW5lZCAmJiBldmVudC5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdGV2ZW50Lm9yaWdpbmFsRXZlbnQucmV0dXJuVmFsdWUgPSBldmVudC5yZXN1bHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XG5cblx0Ly8gVGhpcyBcImlmXCIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzXG5cdGlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkge1xuXHRcdGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgaGFuZGxlICk7XG5cdH1cbn07XG5cbmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkge1xuXG5cdC8vIEFsbG93IGluc3RhbnRpYXRpb24gd2l0aG91dCB0aGUgJ25ldycga2V5d29yZFxuXHRpZiAoICEoIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQgKSApIHtcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gRXZlbnQgb2JqZWN0XG5cdGlmICggc3JjICYmIHNyYy50eXBlICkge1xuXHRcdHRoaXMub3JpZ2luYWxFdmVudCA9IHNyYztcblx0XHR0aGlzLnR5cGUgPSBzcmMudHlwZTtcblxuXHRcdC8vIEV2ZW50cyBidWJibGluZyB1cCB0aGUgZG9jdW1lbnQgbWF5IGhhdmUgYmVlbiBtYXJrZWQgYXMgcHJldmVudGVkXG5cdFx0Ly8gYnkgYSBoYW5kbGVyIGxvd2VyIGRvd24gdGhlIHRyZWU7IHJlZmxlY3QgdGhlIGNvcnJlY3QgdmFsdWUuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBzcmMuZGVmYXVsdFByZXZlbnRlZCB8fFxuXHRcdFx0XHRzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0XHRcdFx0c3JjLnJldHVyblZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRyZXR1cm5UcnVlIDpcblx0XHRcdHJldHVybkZhbHNlO1xuXG5cdC8vIEV2ZW50IHR5cGVcblx0fSBlbHNlIHtcblx0XHR0aGlzLnR5cGUgPSBzcmM7XG5cdH1cblxuXHQvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdFxuXHRpZiAoIHByb3BzICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxuXHR0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTtcblxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xufTtcblxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXG4vLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NzAyNThcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXG5qUXVlcnkuZWFjaCgge1xuXHRtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXG5cdHBvaW50ZXJlbnRlcjogXCJwb2ludGVyb3ZlclwiLFxuXHRwb2ludGVybGVhdmU6IFwicG9pbnRlcm91dFwiXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0ge1xuXHRcdGRlbGVnYXRlVHlwZTogZml4LFxuXHRcdGJpbmRUeXBlOiBmaXgsXG5cblx0XHRoYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdHRhcmdldCA9IHRoaXMsXG5cdFx0XHRcdHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0LFxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XG5cblx0XHRcdC8vIEZvciBtb3VzZWVudGVyL2xlYXZlIGNhbGwgdGhlIGhhbmRsZXIgaWYgcmVsYXRlZCBpcyBvdXRzaWRlIHRoZSB0YXJnZXQuXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xuXHRcdFx0aWYgKCAhcmVsYXRlZCB8fCAoIHJlbGF0ZWQgIT09IHRhcmdldCAmJiAhalF1ZXJ5LmNvbnRhaW5zKCB0YXJnZXQsIHJlbGF0ZWQgKSApICkge1xuXHRcdFx0XHRldmVudC50eXBlID0gaGFuZGxlT2JqLm9yaWdUeXBlO1xuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBmaXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdG9uZTogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XG5cdH0sXG5cdG9mZjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZm4gKSB7XG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcblx0XHRpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHtcblxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxuXHRcdFx0aGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqO1xuXHRcdFx0alF1ZXJ5KCB0eXBlcy5kZWxlZ2F0ZVRhcmdldCApLm9mZihcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlICsgXCIuXCIgKyBoYW5kbGVPYmoubmFtZXNwYWNlIDpcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUsXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3Rvcixcblx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXJcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApXG5cdFx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxuXHRcdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgdHlwZXMsIGZuLCBzZWxlY3RvciApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXFx3Oi1dKylbXj5dKilcXC8+L2dpLFxuXG5cdC8vIFN1cHBvcnQ6IElFIDEwLTExLCBFZGdlIDEwMjQwK1xuXHQvLyBJbiBJRS9FZGdlIHVzaW5nIHJlZ2V4IGdyb3VwcyBoZXJlIGNhdXNlcyBzZXZlcmUgc2xvd2Rvd25zLlxuXHQvLyBTZWUgaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy8xNzM2NTEyL1xuXHRybm9Jbm5lcmh0bWwgPSAvPHNjcmlwdHw8c3R5bGV8PGxpbmsvaSxcblxuXHQvLyBjaGVja2VkPVwiY2hlY2tlZFwiIG9yIGNoZWNrZWRcblx0cmNoZWNrZWQgPSAvY2hlY2tlZFxccyooPzpbXj1dfD1cXHMqLmNoZWNrZWQuKS9pLFxuXHRyc2NyaXB0VHlwZU1hc2tlZCA9IC9edHJ1ZVxcLyguKikvLFxuXHRyY2xlYW5TY3JpcHQgPSAvXlxccyo8ISg/OlxcW0NEQVRBXFxbfC0tKXwoPzpcXF1cXF18LS0pPlxccyokL2c7XG5cbi8vIE1hbmlwdWxhdGluZyB0YWJsZXMgcmVxdWlyZXMgYSB0Ym9keVxuZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkge1xuXHRyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxuXHRcdGpRdWVyeS5ub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSA/XG5cblx0XHRlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInRib2R5XCIgKVsgMCBdIHx8XG5cdFx0XHRlbGVtLmFwcGVuZENoaWxkKCBlbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0Ym9keVwiICkgKSA6XG5cdFx0ZWxlbTtcbn1cblxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxuZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHtcblx0ZWxlbS50eXBlID0gKCBlbGVtLmdldEF0dHJpYnV0ZSggXCJ0eXBlXCIgKSAhPT0gbnVsbCApICsgXCIvXCIgKyBlbGVtLnR5cGU7XG5cdHJldHVybiBlbGVtO1xufVxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcblx0dmFyIG1hdGNoID0gcnNjcmlwdFR5cGVNYXNrZWQuZXhlYyggZWxlbS50eXBlICk7XG5cblx0aWYgKCBtYXRjaCApIHtcblx0XHRlbGVtLnR5cGUgPSBtYXRjaFsgMSBdO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgcGRhdGFDdXIsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFQcml2Lmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuYWNjZXNzKCBzcmMgKTtcblx0XHRwZGF0YUN1ciA9IGRhdGFQcml2LnNldCggZGVzdCwgcGRhdGFPbGQgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRlbGV0ZSBwZGF0YUN1ci5oYW5kbGU7XG5cdFx0XHRwZGF0YUN1ci5ldmVudHMgPSB7fTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xuXHRcdHVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRhT2xkICk7XG5cblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuLy8gRml4IElFIGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzXG5mdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gRmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRpbyBidXR0b24uXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xuXHRcdGRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkO1xuXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgfHwgbm9kZU5hbWUgPT09IFwidGV4dGFyZWFcIiApIHtcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xuXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0YXJncyA9IGNvbmNhdC5hcHBseSggW10sIGFyZ3MgKTtcblxuXHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0aXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIGlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjEsIFBoYW50b21KUzwyXG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIG5vZGUudGV4dENvbnRlbnQucmVwbGFjZSggcmNsZWFuU2NyaXB0LCBcIlwiICkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGpRdWVyeS5jb250YWlucyggbm9kZS5vd25lckRvY3VtZW50LCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xuXHRcdGlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiZcblx0XHRcdFx0IWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBXZSBlc2NoZXcgU2l6emxlIGhlcmUgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnM6IGh0dHA6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PSAzNS00NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0gMzUtNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBLZWVwIGRvbU1hbmlwIGV4cG9zZWQgdW50aWwgMy4wIChnaC0yMjI1KVxuXHRkb21NYW5pcDogZG9tTWFuaXAsXG5cblx0ZGV0YWNoOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciApO1xuXHR9LFxuXG5cdHRleHQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS50ZXh0KCB0aGlzICkgOlxuXHRcdFx0XHR0aGlzLmVtcHR5KCkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGFmdGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gdGhpc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXG5cdFx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXG5cdFx0XHRcdGVsZW0udGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0ZGF0YUFuZEV2ZW50cyA9IGRhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGZhbHNlIDogZGF0YUFuZEV2ZW50cztcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XG5cblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0aHRtbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uaW5uZXJIVE1MO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcblx0XHRcdFx0IXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKSBdICkge1xuXG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIHZhbHVlICk7XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cdFx0XHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbSA9IDA7XG5cblx0XHRcdFx0Ly8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kXG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHR0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApO1xuXHRcdFx0fVxuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0cmVwbGFjZVdpdGg6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBpZ25vcmVkID0gW107XG5cblx0XHQvLyBNYWtlIHRoZSBjaGFuZ2VzLCByZXBsYWNpbmcgZWFjaCBub24taWdub3JlZCBjb250ZXh0IGVsZW1lbnQgd2l0aCB0aGUgbmV3IGNvbnRlbnRcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCB0aGlzLCBpZ25vcmVkICkgPCAwICkge1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xuXHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0XHRwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb25cblx0XHR9LCBpZ25vcmVkICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIHtcblx0YXBwZW5kVG86IFwiYXBwZW5kXCIsXG5cdHByZXBlbmRUbzogXCJwcmVwZW5kXCIsXG5cdGluc2VydEJlZm9yZTogXCJiZWZvcmVcIixcblx0aW5zZXJ0QWZ0ZXI6IFwiYWZ0ZXJcIixcblx0cmVwbGFjZUFsbDogXCJyZXBsYWNlV2l0aFwiXG59LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBlbGVtcyxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxuXHRcdFx0bGFzdCA9IGluc2VydC5sZW5ndGggLSAxLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7IGkgPD0gbGFzdDsgaSsrICkge1xuXHRcdFx0ZWxlbXMgPSBpID09PSBsYXN0ID8gdGhpcyA6IHRoaXMuY2xvbmUoIHRydWUgKTtcblx0XHRcdGpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogUXRXZWJLaXRcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Ncblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xuXG5cbnZhciBpZnJhbWUsXG5cdGVsZW1kaXNwbGF5ID0ge1xuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveFxuXHRcdC8vIFdlIGhhdmUgdG8gcHJlLWRlZmluZSB0aGVzZSB2YWx1ZXMgZm9yIEZGICgjMTAyMjcpXG5cdFx0SFRNTDogXCJibG9ja1wiLFxuXHRcdEJPRFk6IFwiYmxvY2tcIlxuXHR9O1xuXG4vKipcbiAqIFJldHJpZXZlIHRoZSBhY3R1YWwgZGlzcGxheSBvZiBhIGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIG5vZGVOYW1lIG9mIHRoZSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gZG9jIERvY3VtZW50IG9iamVjdFxuICovXG5cbi8vIENhbGxlZCBvbmx5IGZyb20gd2l0aGluIGRlZmF1bHREaXNwbGF5XG5mdW5jdGlvbiBhY3R1YWxEaXNwbGF5KCBuYW1lLCBkb2MgKSB7XG5cdHZhciBlbGVtID0galF1ZXJ5KCBkb2MuY3JlYXRlRWxlbWVudCggbmFtZSApICkuYXBwZW5kVG8oIGRvYy5ib2R5ICksXG5cblx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbVsgMCBdLCBcImRpc3BsYXlcIiApO1xuXG5cdC8vIFdlIGRvbid0IGhhdmUgYW55IGRhdGEgc3RvcmVkIG9uIHRoZSBlbGVtZW50LFxuXHQvLyBzbyB1c2UgXCJkZXRhY2hcIiBtZXRob2QgYXMgZmFzdCB3YXkgdG8gZ2V0IHJpZCBvZiB0aGUgZWxlbWVudFxuXHRlbGVtLmRldGFjaCgpO1xuXG5cdHJldHVybiBkaXNwbGF5O1xufVxuXG4vKipcbiAqIFRyeSB0byBkZXRlcm1pbmUgdGhlIGRlZmF1bHQgZGlzcGxheSB2YWx1ZSBvZiBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gbm9kZU5hbWVcbiAqL1xuZnVuY3Rpb24gZGVmYXVsdERpc3BsYXkoIG5vZGVOYW1lICkge1xuXHR2YXIgZG9jID0gZG9jdW1lbnQsXG5cdFx0ZGlzcGxheSA9IGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdO1xuXG5cdGlmICggIWRpc3BsYXkgKSB7XG5cdFx0ZGlzcGxheSA9IGFjdHVhbERpc3BsYXkoIG5vZGVOYW1lLCBkb2MgKTtcblxuXHRcdC8vIElmIHRoZSBzaW1wbGUgd2F5IGZhaWxzLCByZWFkIGZyb20gaW5zaWRlIGFuIGlmcmFtZVxuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgfHwgIWRpc3BsYXkgKSB7XG5cblx0XHRcdC8vIFVzZSB0aGUgYWxyZWFkeS1jcmVhdGVkIGlmcmFtZSBpZiBwb3NzaWJsZVxuXHRcdFx0aWZyYW1lID0gKCBpZnJhbWUgfHwgalF1ZXJ5KCBcIjxpZnJhbWUgZnJhbWVib3JkZXI9JzAnIHdpZHRoPScwJyBoZWlnaHQ9JzAnLz5cIiApIClcblx0XHRcdFx0LmFwcGVuZFRvKCBkb2MuZG9jdW1lbnRFbGVtZW50ICk7XG5cblx0XHRcdC8vIEFsd2F5cyB3cml0ZSBhIG5ldyBIVE1MIHNrZWxldG9uIHNvIFdlYmtpdCBhbmQgRmlyZWZveCBkb24ndCBjaG9rZSBvbiByZXVzZVxuXHRcdFx0ZG9jID0gaWZyYW1lWyAwIF0uY29udGVudERvY3VtZW50O1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRVxuXHRcdFx0ZG9jLndyaXRlKCk7XG5cdFx0XHRkb2MuY2xvc2UoKTtcblxuXHRcdFx0ZGlzcGxheSA9IGFjdHVhbERpc3BsYXkoIG5vZGVOYW1lLCBkb2MgKTtcblx0XHRcdGlmcmFtZS5kZXRhY2goKTtcblx0XHR9XG5cblx0XHQvLyBTdG9yZSB0aGUgY29ycmVjdCBkZWZhdWx0IGRpc3BsYXlcblx0XHRlbGVtZGlzcGxheVsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cdH1cblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cbnZhciBybWFyZ2luID0gKCAvXm1hcmdpbi8gKTtcblxudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw9MTErLCBGaXJlZm94PD0zMCsgKCMxNTA5OCwgIzE0MTUwKVxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xuXHRcdC8vIEZGIG1lYW53aGlsZSB0aHJvd3Mgb24gZnJhbWUgZWxlbWVudHMgdGhyb3VnaCBcImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGVcIlxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXG5cdFx0aWYgKCAhdmlldyB8fCAhdmlldy5vcGVuZXIgKSB7XG5cdFx0XHR2aWV3ID0gd2luZG93O1xuXHRcdH1cblxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcblx0fTtcblxudmFyIHN3YXAgPSBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG52YXIgZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIHBpeGVsUG9zaXRpb25WYWwsIGJveFNpemluZ1JlbGlhYmxlVmFsLCBwaXhlbE1hcmdpblJpZ2h0VmFsLCByZWxpYWJsZU1hcmdpbkxlZnRWYWwsXG5cdFx0Y29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcblxuXHQvLyBGaW5pc2ggZWFybHkgaW4gbGltaXRlZCAobm9uLWJyb3dzZXIpIGVudmlyb25tZW50c1xuXHRpZiAoICFkaXYuc3R5bGUgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUU5LTExK1xuXHQvLyBTdHlsZSBvZiBjbG9uZWQgZWxlbWVudCBhZmZlY3RzIHNvdXJjZSBlbGVtZW50IGNsb25lZCAoIzg5MDgpXG5cdGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiY29udGVudC1ib3hcIjtcblx0ZGl2LmNsb25lTm9kZSggdHJ1ZSApLnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJcIjtcblx0c3VwcG9ydC5jbGVhckNsb25lU3R5bGUgPSBkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPT09IFwiY29udGVudC1ib3hcIjtcblxuXHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwiYm9yZGVyOjA7d2lkdGg6OHB4O2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweDtcIiArXG5cdFx0XCJwYWRkaW5nOjA7bWFyZ2luLXRvcDoxcHg7cG9zaXRpb246YWJzb2x1dGVcIjtcblx0Y29udGFpbmVyLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cdFx0ZGl2LnN0eWxlLmNzc1RleHQgPVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI5LCBBbmRyb2lkIDIuM1xuXHRcdFx0Ly8gVmVuZG9yLXByZWZpeCBib3gtc2l6aW5nXG5cdFx0XHRcIi13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtcIiArXG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7XCIgK1xuXHRcdFx0XCJtYXJnaW46YXV0bztib3JkZXI6MXB4O3BhZGRpbmc6MXB4O1wiICtcblx0XHRcdFwidG9wOjElO3dpZHRoOjUwJVwiO1xuXHRcdGRpdi5pbm5lckhUTUwgPSBcIlwiO1xuXHRcdGRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IGRpdlN0eWxlLm1hcmdpbkxlZnQgPT09IFwiMnB4XCI7XG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSBkaXZTdHlsZS53aWR0aCA9PT0gXCI0cHhcIjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0XHQvLyBTb21lIHN0eWxlcyBjb21lIGJhY2sgd2l0aCBwZXJjZW50YWdlIHZhbHVlcywgZXZlbiB0aG91Z2ggdGhleSBzaG91bGRuJ3Rcblx0XHRkaXYuc3R5bGUubWFyZ2luUmlnaHQgPSBcIjUwJVwiO1xuXHRcdHBpeGVsTWFyZ2luUmlnaHRWYWwgPSBkaXZTdHlsZS5tYXJnaW5SaWdodCA9PT0gXCI0cHhcIjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cdH1cblxuXHRqUXVlcnkuZXh0ZW5kKCBzdXBwb3J0LCB7XG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIFRoaXMgdGVzdCBpcyBleGVjdXRlZCBvbmx5IG9uY2UgYnV0IHdlIHN0aWxsIGRvIG1lbW9pemluZ1xuXHRcdFx0Ly8gc2luY2Ugd2UgY2FuIHVzZSB0aGUgYm94U2l6aW5nUmVsaWFibGUgcHJlLWNvbXB1dGluZy5cblx0XHRcdC8vIE5vIG5lZWQgdG8gY2hlY2sgaWYgdGhlIHRlc3Qgd2FzIGFscmVhZHkgcGVyZm9ybWVkLCB0aG91Z2guXG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGJveFNpemluZ1JlbGlhYmxlVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbE1hcmdpblJpZ2h0OiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAtNC4zXG5cdFx0XHQvLyBXZSdyZSBjaGVja2luZyBmb3IgYm94U2l6aW5nUmVsaWFibGVWYWwgaGVyZSBpbnN0ZWFkIG9mIHBpeGVsTWFyZ2luUmlnaHRWYWxcblx0XHRcdC8vIHNpbmNlIHRoYXQgY29tcHJlc3NlcyBiZXR0ZXIgYW5kIHRoZXkncmUgY29tcHV0ZWQgdG9nZXRoZXIgYW55d2F5LlxuXHRcdFx0aWYgKCBib3hTaXppbmdSZWxpYWJsZVZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHBpeGVsTWFyZ2luUmlnaHRWYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggb25seSwgQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSAzN1xuXHRcdFx0aWYgKCBib3hTaXppbmdSZWxpYWJsZVZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZhbDtcblx0XHR9LFxuXHRcdHJlbGlhYmxlTWFyZ2luUmlnaHQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuM1xuXHRcdFx0Ly8gQ2hlY2sgaWYgZGl2IHdpdGggZXhwbGljaXQgd2lkdGggYW5kIG5vIG1hcmdpbi1yaWdodCBpbmNvcnJlY3RseVxuXHRcdFx0Ly8gZ2V0cyBjb21wdXRlZCBtYXJnaW4tcmlnaHQgYmFzZWQgb24gd2lkdGggb2YgY29udGFpbmVyLiAoIzMzMzMpXG5cdFx0XHQvLyBXZWJLaXQgQnVnIDEzMzQzIC0gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHdyb25nIHZhbHVlIGZvciBtYXJnaW4tcmlnaHRcblx0XHRcdC8vIFRoaXMgc3VwcG9ydCBmdW5jdGlvbiBpcyBvbmx5IGV4ZWN1dGVkIG9uY2Ugc28gbm8gbWVtb2l6aW5nIGlzIG5lZWRlZC5cblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdG1hcmdpbkRpdiA9IGRpdi5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdC8vIFJlc2V0IENTUzogYm94LXNpemluZzsgZGlzcGxheTsgbWFyZ2luOyBib3JkZXI7IHBhZGRpbmdcblx0XHRcdG1hcmdpbkRpdi5zdHlsZS5jc3NUZXh0ID0gZGl2LnN0eWxlLmNzc1RleHQgPVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xuXHRcdFx0XHRcIi13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94O1wiICtcblx0XHRcdFx0XCJkaXNwbGF5OmJsb2NrO21hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MFwiO1xuXHRcdFx0bWFyZ2luRGl2LnN0eWxlLm1hcmdpblJpZ2h0ID0gbWFyZ2luRGl2LnN0eWxlLndpZHRoID0gXCIwXCI7XG5cdFx0XHRkaXYuc3R5bGUud2lkdGggPSBcIjFweFwiO1xuXHRcdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKTtcblxuXHRcdFx0cmV0ID0gIXBhcnNlRmxvYXQoIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBtYXJnaW5EaXYgKS5tYXJnaW5SaWdodCApO1xuXG5cdFx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXHRcdFx0ZGl2LnJlbW92ZUNoaWxkKCBtYXJnaW5EaXYgKTtcblxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cdH0gKTtcbn0gKSgpO1xuXG5cbmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XG5cdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdGNvbXB1dGVkID0gY29tcHV0ZWQgfHwgZ2V0U3R5bGVzKCBlbGVtICk7XG5cdHJldCA9IGNvbXB1dGVkID8gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF0gOiB1bmRlZmluZWQ7XG5cblx0Ly8gU3VwcG9ydDogT3BlcmEgMTIuMXggb25seVxuXHQvLyBGYWxsIGJhY2sgdG8gc3R5bGUgZXZlbiB3aXRob3V0IGNvbXB1dGVkXG5cdC8vIGNvbXB1dGVkIGlzIHVuZGVmaW5lZCBmb3IgZWxlbXMgb24gZG9jdW1lbnQgZnJhZ21lbnRzXG5cdGlmICggKCByZXQgPT09IFwiXCIgfHwgcmV0ID09PSB1bmRlZmluZWQgKSAmJiAhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSApIHtcblx0XHRyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFOVxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG9ubHkgbmVlZGVkIGZvciAuY3NzKCdmaWx0ZXInKSAoIzEyNTM3KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHA6Ly9kZXYudzMub3JnL2Nzc3dnL2Nzc29tLyNyZXNvbHZlZC12YWx1ZXNcblx0XHRpZiAoICFzdXBwb3J0LnBpeGVsTWFyZ2luUmlnaHQoKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcm1hcmdpbi50ZXN0KCBuYW1lICkgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXNcblx0XHRcdHdpZHRoID0gc3R5bGUud2lkdGg7XG5cdFx0XHRtaW5XaWR0aCA9IHN0eWxlLm1pbldpZHRoO1xuXHRcdFx0bWF4V2lkdGggPSBzdHlsZS5tYXhXaWR0aDtcblxuXHRcdFx0Ly8gUHV0IGluIHRoZSBuZXcgdmFsdWVzIHRvIGdldCBhIGNvbXB1dGVkIHZhbHVlIG91dFxuXHRcdFx0c3R5bGUubWluV2lkdGggPSBzdHlsZS5tYXhXaWR0aCA9IHN0eWxlLndpZHRoID0gcmV0O1xuXHRcdFx0cmV0ID0gY29tcHV0ZWQud2lkdGg7XG5cblx0XHRcdC8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXNcblx0XHRcdHN0eWxlLndpZHRoID0gd2lkdGg7XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IG1pbldpZHRoO1xuXHRcdFx0c3R5bGUubWF4V2lkdGggPSBtYXhXaWR0aDtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gcmV0ICE9PSB1bmRlZmluZWQgP1xuXG5cdFx0Ly8gU3VwcG9ydDogSUU5LTExK1xuXHRcdC8vIElFIHJldHVybnMgekluZGV4IHZhbHVlIGFzIGFuIGludGVnZXIuXG5cdFx0cmV0ICsgXCJcIiA6XG5cdFx0cmV0O1xufVxuXG5cbmZ1bmN0aW9uIGFkZEdldEhvb2tJZiggY29uZGl0aW9uRm4sIGhvb2tGbiApIHtcblxuXHQvLyBEZWZpbmUgdGhlIGhvb2ssIHdlJ2xsIGNoZWNrIG9uIHRoZSBmaXJzdCBydW4gaWYgaXQncyByZWFsbHkgbmVlZGVkLlxuXHRyZXR1cm4ge1xuXHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGNvbmRpdGlvbkZuKCkgKSB7XG5cblx0XHRcdFx0Ly8gSG9vayBub3QgbmVlZGVkIChvciBpdCdzIG5vdCBwb3NzaWJsZSB0byB1c2UgaXQgZHVlXG5cdFx0XHRcdC8vIHRvIG1pc3NpbmcgZGVwZW5kZW5jeSksIHJlbW92ZSBpdC5cblx0XHRcdFx0ZGVsZXRlIHRoaXMuZ2V0O1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIEhvb2sgbmVlZGVkOyByZWRlZmluZSBpdCBzbyB0aGF0IHRoZSBzdXBwb3J0IHRlc3QgaXMgbm90IGV4ZWN1dGVkIGFnYWluLlxuXHRcdFx0cmV0dXJuICggdGhpcy5nZXQgPSBob29rRm4gKS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fVxuXHR9O1xufVxuXG5cbnZhclxuXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcblx0Ly8gZXhjZXB0IFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIFNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXG5cdGNzc05vcm1hbFRyYW5zZm9ybSA9IHtcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXG5cdH0sXG5cblx0Y3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiT1wiLCBcIk1velwiLCBcIm1zXCIgXSxcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZTtcblxuLy8gUmV0dXJuIGEgY3NzIHByb3BlcnR5IG1hcHBlZCB0byBhIHBvdGVudGlhbGx5IHZlbmRvciBwcmVmaXhlZCBwcm9wZXJ0eVxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gU2hvcnRjdXQgZm9yIG5hbWVzIHRoYXQgYXJlIG5vdCB2ZW5kb3IgcHJlZml4ZWRcblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0XHRyZXR1cm4gbmFtZTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXG5cdC8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludFxuXHR2YXIgbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYXVnbWVudFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhLCBpc0JvcmRlckJveCwgc3R5bGVzICkge1xuXHR2YXIgaSA9IGV4dHJhID09PSAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICkgP1xuXG5cdFx0Ly8gSWYgd2UgYWxyZWFkeSBoYXZlIHRoZSByaWdodCBtZWFzdXJlbWVudCwgYXZvaWQgYXVnbWVudGF0aW9uXG5cdFx0NCA6XG5cblx0XHQvLyBPdGhlcndpc2UgaW5pdGlhbGl6ZSBmb3IgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCBwcm9wZXJ0aWVzXG5cdFx0bmFtZSA9PT0gXCJ3aWR0aFwiID8gMSA6IDAsXG5cblx0XHR2YWwgPSAwO1xuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpbiwgc28gYWRkIGl0IGlmIHdlIHdhbnQgaXRcblx0XHRpZiAoIGV4dHJhID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sIGV4dHJhICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdGlmICggaXNCb3JkZXJCb3ggKSB7XG5cblx0XHRcdC8vIGJvcmRlci1ib3ggaW5jbHVkZXMgcGFkZGluZywgc28gcmVtb3ZlIGl0IGlmIHdlIHdhbnQgY29udGVudFxuXHRcdFx0aWYgKCBleHRyYSA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdHZhbCAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBhZGRpbmdcIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQXQgdGhpcyBwb2ludCwgZXh0cmEgaXNuJ3QgYm9yZGVyIG5vciBtYXJnaW4sIHNvIHJlbW92ZSBib3JkZXJcblx0XHRcdGlmICggZXh0cmEgIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdHZhbCAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIEF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGNvbnRlbnQsIHNvIGFkZCBwYWRkaW5nXG5cdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGNvbnRlbnQgbm9yIHBhZGRpbmcsIHNvIGFkZCBib3JkZXJcblx0XHRcdGlmICggZXh0cmEgIT09IFwicGFkZGluZ1wiICkge1xuXHRcdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdmFsO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApIHtcblxuXHQvLyBTdGFydCB3aXRoIG9mZnNldCBwcm9wZXJ0eSwgd2hpY2ggaXMgZXF1aXZhbGVudCB0byB0aGUgYm9yZGVyLWJveCB2YWx1ZVxuXHR2YXIgdmFsdWVJc0JvcmRlckJveCA9IHRydWUsXG5cdFx0dmFsID0gbmFtZSA9PT0gXCJ3aWR0aFwiID8gZWxlbS5vZmZzZXRXaWR0aCA6IGVsZW0ub2Zmc2V0SGVpZ2h0LFxuXHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXHRcdGlzQm9yZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcblxuXHQvLyBTb21lIG5vbi1odG1sIGVsZW1lbnRzIHJldHVybiB1bmRlZmluZWQgZm9yIG9mZnNldFdpZHRoLCBzbyBjaGVjayBmb3IgbnVsbC91bmRlZmluZWRcblx0Ly8gc3ZnIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NjQ5Mjg1XG5cdC8vIE1hdGhNTCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTQ5MTY2OFxuXHRpZiAoIHZhbCA8PSAwIHx8IHZhbCA9PSBudWxsICkge1xuXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIGNvbXB1dGVkIHRoZW4gdW5jb21wdXRlZCBjc3MgaWYgbmVjZXNzYXJ5XG5cdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHRpZiAoIHZhbCA8IDAgfHwgdmFsID09IG51bGwgKSB7XG5cdFx0XHR2YWwgPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gQ29tcHV0ZWQgdW5pdCBpcyBub3QgcGl4ZWxzLiBTdG9wIGhlcmUgYW5kIHJldHVybi5cblx0XHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXG5cdFx0Ly8gQ2hlY2sgZm9yIHN0eWxlIGluIGNhc2UgYSBicm93c2VyIHdoaWNoIHJldHVybnMgdW5yZWxpYWJsZSB2YWx1ZXNcblx0XHQvLyBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzaWxlbnRseSBmYWxscyBiYWNrIHRvIHRoZSByZWxpYWJsZSBlbGVtLnN0eWxlXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IGlzQm9yZGVyQm94ICYmXG5cdFx0XHQoIHN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCB2YWwgPT09IGVsZW0uc3R5bGVbIG5hbWUgXSApO1xuXG5cdFx0Ly8gTm9ybWFsaXplIFwiXCIsIGF1dG8sIGFuZCBwcmVwYXJlIGZvciBleHRyYVxuXHRcdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cdH1cblxuXHQvLyBVc2UgdGhlIGFjdGl2ZSBib3gtc2l6aW5nIG1vZGVsIHRvIGFkZC9zdWJ0cmFjdCBpcnJlbGV2YW50IHN0eWxlc1xuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGF1Z21lbnRXaWR0aE9ySGVpZ2h0KFxuXHRcdFx0ZWxlbSxcblx0XHRcdG5hbWUsXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5mdW5jdGlvbiBzaG93SGlkZSggZWxlbWVudHMsIHNob3cgKSB7XG5cdHZhciBkaXNwbGF5LCBlbGVtLCBoaWRkZW4sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0dmFsdWVzWyBpbmRleCBdID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcIm9sZGRpc3BsYXlcIiApO1xuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBSZXNldCB0aGUgaW5saW5lIGRpc3BsYXkgb2YgdGhpcyBlbGVtZW50IHRvIGxlYXJuIGlmIGl0IGlzXG5cdFx0XHQvLyBiZWluZyBoaWRkZW4gYnkgY2FzY2FkZWQgcnVsZXMgb3Igbm90XG5cdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gJiYgZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBlbGVtZW50cyB3aGljaCBoYXZlIGJlZW4gb3ZlcnJpZGRlbiB3aXRoIGRpc3BsYXk6IG5vbmVcblx0XHRcdC8vIGluIGEgc3R5bGVzaGVldCB0byB3aGF0ZXZlciB0aGUgZGVmYXVsdCBicm93c2VyIHN0eWxlIGlzXG5cdFx0XHQvLyBmb3Igc3VjaCBhbiBlbGVtZW50XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbiggZWxlbSApICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5hY2Nlc3MoXG5cdFx0XHRcdFx0ZWxlbSxcblx0XHRcdFx0XHRcIm9sZGRpc3BsYXlcIixcblx0XHRcdFx0XHRkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGhpZGRlbiA9IGlzSGlkZGVuKCBlbGVtICk7XG5cblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgfHwgIWhpZGRlbiApIHtcblx0XHRcdFx0ZGF0YVByaXYuc2V0KFxuXHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0XCJvbGRkaXNwbGF5XCIsXG5cdFx0XHRcdFx0aGlkZGVuID8gZGlzcGxheSA6IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgbW9zdCBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcFxuXHQvLyB0byBhdm9pZCB0aGUgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cdFx0aWYgKCAhc2hvdyB8fCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8IGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IHNob3cgPyB2YWx1ZXNbIGluZGV4IF0gfHwgXCJcIiA6IFwibm9uZVwiO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxuXHQvLyBiZWhhdmlvciBvZiBnZXR0aW5nIGFuZCBzZXR0aW5nIGEgc3R5bGUgcHJvcGVydHlcblx0Y3NzSG9va3M6IHtcblx0XHRvcGFjaXR5OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHRcdC8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5XG5cdFx0XHRcdFx0dmFyIHJldCA9IGN1ckNTUyggZWxlbSwgXCJvcGFjaXR5XCIgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcblx0Y3NzTnVtYmVyOiB7XG5cdFx0XCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB0cnVlLFxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcblx0XHRcImZpbGxPcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJmbGV4R3Jvd1wiOiB0cnVlLFxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxuXHRcdFwiZm9udFdlaWdodFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHtcblx0XHRcImZsb2F0XCI6IFwiY3NzRmxvYXRcIlxuXHR9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdG5hbWUgPSBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gfHxcblx0XHRcdCggalF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG9yaWdOYW1lICkgfHwgb3JpZ05hbWUgKTtcblxuXHRcdC8vIEdldHMgaG9vayBmb3IgdGhlIHByZWZpeGVkIHZlcnNpb24sIHRoZW4gdW5wcmVmaXhlZCB2ZXJzaW9uXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBDaGVjayBpZiB3ZSdyZSBzZXR0aW5nIGEgdmFsdWVcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG5cdFx0XHQvLyBDb252ZXJ0IFwiKz1cIiBvciBcIi09XCIgdG8gcmVsYXRpdmUgbnVtYmVycyAoIzczNDUpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwic3RyaW5nXCIgJiYgKCByZXQgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJiByZXRbIDEgXSApIHtcblx0XHRcdFx0dmFsdWUgPSBhZGp1c3RDU1MoIGVsZW0sIG5hbWUsIHJldCApO1xuXG5cdFx0XHRcdC8vIEZpeGVzIGJ1ZyAjOTIzN1xuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0ICgjNzExNilcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkIHRoZSB1bml0IChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0bmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSB8fFxuXHRcdFx0KCBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggb3JpZ05hbWUgKSB8fCBvcmlnTmFtZSApO1xuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkLCBleHRyYSApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0Ly8gQ2VydGFpbiBlbGVtZW50cyBjYW4gaGF2ZSBkaW1lbnNpb24gaW5mbyBpZiB3ZSBpbnZpc2libHkgc2hvdyB0aGVtXG5cdFx0XHRcdC8vIGJ1dCBpdCBtdXN0IGhhdmUgYSBjdXJyZW50IGRpc3BsYXkgc3R5bGUgdGhhdCB3b3VsZCBiZW5lZml0XG5cdFx0XHRcdHJldHVybiByZGlzcGxheXN3YXAudGVzdCggalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSApICYmXG5cdFx0XHRcdFx0ZWxlbS5vZmZzZXRXaWR0aCA9PT0gMCA/XG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7XG5cdFx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdFx0Z2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIGV4dHJhICkge1xuXHRcdFx0dmFyIG1hdGNoZXMsXG5cdFx0XHRcdHN0eWxlcyA9IGV4dHJhICYmIGdldFN0eWxlcyggZWxlbSApLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhICYmIGF1Z21lbnRXaWR0aE9ySGVpZ2h0KFxuXHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0bmFtZSxcblx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRcdHN0eWxlc1xuXHRcdFx0XHQpO1xuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKTtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxcblx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sIFwibWFyZ2luTGVmdFwiICkgKSB8fFxuXHRcdFx0XHRlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLVxuXHRcdFx0XHRcdHN3YXAoIGVsZW0sIHsgbWFyZ2luTGVmdDogMCB9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG5cdFx0XHRcdFx0fSApXG5cdFx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBTdXBwb3J0OiBBbmRyb2lkIDIuM1xualF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuIHN3YXAoIGVsZW0sIHsgXCJkaXNwbGF5XCI6IFwiaW5saW5lLWJsb2NrXCIgfSxcblx0XHRcdFx0Y3VyQ1NTLCBbIGVsZW0sIFwibWFyZ2luUmlnaHRcIiBdICk7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoICFybWFyZ2luLnRlc3QoIHByZWZpeCApICkge1xuXHRcdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0uc2V0ID0gc2V0UG9zaXRpdmVOdW1iZXI7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRjc3M6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgc3R5bGVzLCBsZW4sXG5cdFx0XHRcdG1hcCA9IHt9LFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0aWYgKCBqUXVlcnkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cdHNob3c6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApO1xuXHR9LFxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTtcblx0fSxcblx0dG9nZ2xlOiBmdW5jdGlvbiggc3RhdGUgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlID8gdGhpcy5zaG93KCkgOiB0aGlzLmhpZGUoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggaXNIaWRkZW4oIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbmZ1bmN0aW9uIFR3ZWVuKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApIHtcblx0cmV0dXJuIG5ldyBUd2Vlbi5wcm90b3R5cGUuaW5pdCggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKTtcbn1cbmpRdWVyeS5Ud2VlbiA9IFR3ZWVuO1xuXG5Ud2Vlbi5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBUd2Vlbixcblx0aW5pdDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nLCB1bml0ICkge1xuXHRcdHRoaXMuZWxlbSA9IGVsZW07XG5cdFx0dGhpcy5wcm9wID0gcHJvcDtcblx0XHR0aGlzLmVhc2luZyA9IGVhc2luZyB8fCBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0O1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdFx0dGhpcy5zdGFydCA9IHRoaXMubm93ID0gdGhpcy5jdXIoKTtcblx0XHR0aGlzLmVuZCA9IGVuZDtcblx0XHR0aGlzLnVuaXQgPSB1bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApO1xuXHR9LFxuXHRjdXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRyZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID9cblx0XHRcdGhvb2tzLmdldCggdGhpcyApIDpcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQoIHRoaXMgKTtcblx0fSxcblx0cnVuOiBmdW5jdGlvbiggcGVyY2VudCApIHtcblx0XHR2YXIgZWFzZWQsXG5cdFx0XHRob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5kdXJhdGlvbiApIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBqUXVlcnkuZWFzaW5nWyB0aGlzLmVhc2luZyBdKFxuXHRcdFx0XHRwZXJjZW50LCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKiBwZXJjZW50LCAwLCAxLCB0aGlzLm9wdGlvbnMuZHVyYXRpb25cblx0XHRcdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBwZXJjZW50O1xuXHRcdH1cblx0XHR0aGlzLm5vdyA9ICggdGhpcy5lbmQgLSB0aGlzLnN0YXJ0ICkgKiBlYXNlZCArIHRoaXMuc3RhcnQ7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkge1xuXHRcdFx0dGhpcy5vcHRpb25zLnN0ZXAuY2FsbCggdGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgaG9va3Muc2V0ICkge1xuXHRcdFx0aG9va3Muc2V0KCB0aGlzICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQoIHRoaXMgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn07XG5cblR3ZWVuLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZSA9IFR3ZWVuLnByb3RvdHlwZTtcblxuVHdlZW4ucHJvcEhvb2tzID0ge1xuXHRfZGVmYXVsdDoge1xuXHRcdGdldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdFx0dmFyIHJlc3VsdDtcblxuXHRcdFx0Ly8gVXNlIGEgcHJvcGVydHkgb24gdGhlIGVsZW1lbnQgZGlyZWN0bHkgd2hlbiBpdCBpcyBub3QgYSBET00gZWxlbWVudCxcblx0XHRcdC8vIG9yIHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgc3R5bGUgcHJvcGVydHkgdGhhdCBleGlzdHMuXG5cdFx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgIT09IDEgfHxcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdICE9IG51bGwgJiYgdHdlZW4uZWxlbS5zdHlsZVsgdHdlZW4ucHJvcCBdID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF07XG5cdFx0XHR9XG5cblx0XHRcdC8vIFBhc3NpbmcgYW4gZW1wdHkgc3RyaW5nIGFzIGEgM3JkIHBhcmFtZXRlciB0byAuY3NzIHdpbGwgYXV0b21hdGljYWxseVxuXHRcdFx0Ly8gYXR0ZW1wdCBhIHBhcnNlRmxvYXQgYW5kIGZhbGxiYWNrIHRvIGEgc3RyaW5nIGlmIHRoZSBwYXJzZSBmYWlscy5cblx0XHRcdC8vIFNpbXBsZSB2YWx1ZXMgc3VjaCBhcyBcIjEwcHhcIiBhcmUgcGFyc2VkIHRvIEZsb2F0O1xuXHRcdFx0Ly8gY29tcGxleCB2YWx1ZXMgc3VjaCBhcyBcInJvdGF0ZSgxcmFkKVwiIGFyZSByZXR1cm5lZCBhcy1pcy5cblx0XHRcdHJlc3VsdCA9IGpRdWVyeS5jc3MoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIFwiXCIgKTtcblxuXHRcdFx0Ly8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCBcImF1dG9cIiBhcmUgY29udmVydGVkIHRvIDAuXG5cdFx0XHRyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXG5cdFx0XHQvLyBVc2Ugc3RlcCBob29rIGZvciBiYWNrIGNvbXBhdC5cblx0XHRcdC8vIFVzZSBjc3NIb29rIGlmIGl0cyB0aGVyZS5cblx0XHRcdC8vIFVzZSAuc3R5bGUgaWYgYXZhaWxhYmxlIGFuZCB1c2UgcGxhaW4gcHJvcGVydGllcyB3aGVyZSBhdmFpbGFibGUuXG5cdFx0XHRpZiAoIGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XG5cdFx0XHR9IGVsc2UgaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggdHdlZW4uZWxlbS5zdHlsZVsgalF1ZXJ5LmNzc1Byb3BzWyB0d2Vlbi5wcm9wIF0gXSAhPSBudWxsIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gKSApIHtcblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCB0d2Vlbi5ub3cgKyB0d2Vlbi51bml0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBTdXBwb3J0OiBJRTlcbi8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuVHdlZW4ucHJvcEhvb2tzLnNjcm9sbFRvcCA9IFR3ZWVuLnByb3BIb29rcy5zY3JvbGxMZWZ0ID0ge1xuXHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmVhc2luZyA9IHtcblx0bGluZWFyOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gcDtcblx0fSxcblx0c3dpbmc6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiAwLjUgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgKSAvIDI7XG5cdH0sXG5cdF9kZWZhdWx0OiBcInN3aW5nXCJcbn07XG5cbmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0O1xuXG4vLyBCYWNrIENvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxualF1ZXJ5LmZ4LnN0ZXAgPSB7fTtcblxuXG5cblxudmFyXG5cdGZ4Tm93LCB0aW1lcklkLFxuXHRyZnh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxcblx0cnJ1biA9IC9xdWV1ZUhvb2tzJC87XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBqUXVlcnkubm93KCkgKTtcbn1cblxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cbmZ1bmN0aW9uIGdlbkZ4KCB0eXBlLCBpbmNsdWRlV2lkdGggKSB7XG5cdHZhciB3aGljaCxcblx0XHRpID0gMCxcblx0XHRhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07XG5cblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxuXHQvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxuXHRpbmNsdWRlV2lkdGggPSBpbmNsdWRlV2lkdGggPyAxIDogMDtcblx0Zm9yICggOyBpIDwgNCA7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHQvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCB0d2VlbiwgaG9va3MsIG9sZGZpcmUsIGRpc3BsYXksIGNoZWNrRGlzcGxheSxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW4oIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xuXG5cdC8vIEhhbmRsZSBxdWV1ZTogZmFsc2UgcHJvbWlzZXNcblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gSGVpZ2h0L3dpZHRoIG92ZXJmbG93IHBhc3Ncblx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCJoZWlnaHRcIiBpbiBwcm9wcyB8fCBcIndpZHRoXCIgaW4gcHJvcHMgKSApIHtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG5vdGhpbmcgc25lYWtzIG91dFxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUU5LTEwIGRvIG5vdFxuXHRcdC8vIGNoYW5nZSB0aGUgb3ZlcmZsb3cgYXR0cmlidXRlIHdoZW4gb3ZlcmZsb3dYIGFuZFxuXHRcdC8vIG92ZXJmbG93WSBhcmUgc2V0IHRvIHRoZSBzYW1lIHZhbHVlXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBTZXQgZGlzcGxheSBwcm9wZXJ0eSB0byBpbmxpbmUtYmxvY2sgZm9yIGhlaWdodC93aWR0aFxuXHRcdC8vIGFuaW1hdGlvbnMgb24gaW5saW5lIGVsZW1lbnRzIHRoYXQgYXJlIGhhdmluZyB3aWR0aC9oZWlnaHQgYW5pbWF0ZWRcblx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblxuXHRcdC8vIFRlc3QgZGVmYXVsdCBkaXNwbGF5IGlmIGRpc3BsYXkgaXMgY3VycmVudGx5IFwibm9uZVwiXG5cdFx0Y2hlY2tEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgP1xuXHRcdFx0ZGF0YVByaXYuZ2V0KCBlbGVtLCBcIm9sZGRpc3BsYXlcIiApIHx8IGRlZmF1bHREaXNwbGF5KCBlbGVtLm5vZGVOYW1lICkgOiBkaXNwbGF5O1xuXG5cdFx0aWYgKCBjaGVja0Rpc3BsYXkgPT09IFwiaW5saW5lXCIgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBzaG93L2hpZGUgcGFzc1xuXHRmb3IgKCBwcm9wIGluIHByb3BzICkge1xuXHRcdHZhbHVlID0gcHJvcHNbIHByb3AgXTtcblx0XHRpZiAoIHJmeHR5cGVzLmV4ZWMoIHZhbHVlICkgKSB7XG5cdFx0XHRkZWxldGUgcHJvcHNbIHByb3AgXTtcblx0XHRcdHRvZ2dsZSA9IHRvZ2dsZSB8fCB2YWx1ZSA9PT0gXCJ0b2dnbGVcIjtcblx0XHRcdGlmICggdmFsdWUgPT09ICggaGlkZGVuID8gXCJoaWRlXCIgOiBcInNob3dcIiApICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGRhdGFTaG93IGxlZnQgb3ZlciBmcm9tIGEgc3RvcHBlZCBoaWRlIG9yIHNob3dcblx0XHRcdFx0Ly8gYW5kIHdlIGFyZSBnb2luZyB0byBwcm9jZWVkIHdpdGggc2hvdywgd2Ugc2hvdWxkIHByZXRlbmQgdG8gYmUgaGlkZGVuXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwic2hvd1wiICYmIGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRvcmlnWyBwcm9wIF0gPSBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdIHx8IGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCApO1xuXG5cdFx0Ly8gQW55IG5vbi1meCB2YWx1ZSBzdG9wcyB1cyBmcm9tIHJlc3RvcmluZyB0aGUgb3JpZ2luYWwgZGlzcGxheSB2YWx1ZVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRkaXNwbGF5ID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBvcmlnICkgKSB7XG5cdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdGlmICggXCJoaWRkZW5cIiBpbiBkYXRhU2hvdyApIHtcblx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwge30gKTtcblx0XHR9XG5cblx0XHQvLyBTdG9yZSBzdGF0ZSBpZiBpdHMgdG9nZ2xlIC0gZW5hYmxlcyAuc3RvcCgpLnRvZ2dsZSgpIHRvIFwicmV2ZXJzZVwiXG5cdFx0aWYgKCB0b2dnbGUgKSB7XG5cdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdH1cblx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdGpRdWVyeSggZWxlbSApLnNob3coKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5KCBlbGVtICkuaGlkZSgpO1xuXHRcdFx0fSApO1xuXHRcdH1cblx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHByb3A7XG5cblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHR0d2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXG5cdFx0XHRpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHtcblx0XHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0XHR0d2Vlbi5lbmQgPSB0d2Vlbi5zdGFydDtcblx0XHRcdFx0XHR0d2Vlbi5zdGFydCA9IHByb3AgPT09IFwid2lkdGhcIiB8fCBwcm9wID09PSBcImhlaWdodFwiID8gMSA6IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0Ly8gSWYgdGhpcyBpcyBhIG5vb3AgbGlrZSAuaGlkZSgpLmhpZGUoKSwgcmVzdG9yZSBhbiBvdmVyd3JpdHRlbiBkaXNwbGF5IHZhbHVlXG5cdH0gZWxzZSBpZiAoICggZGlzcGxheSA9PT0gXCJub25lXCIgPyBkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApIDogZGlzcGxheSApID09PSBcImlubGluZVwiICkge1xuXHRcdHN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBOb3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29uJ3Qgb3ZlcndyaXRlIGV4aXN0aW5nIGtleXMuXG5cdFx0XHQvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBEb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSApLFxuXHRcdHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0XHRhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nWyBwcm9wIF0gfHwgYW5pbWF0aW9uLm9wdHMuZWFzaW5nICk7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdFx0fSxcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBnb3RvRW5kICkge1xuXHRcdFx0XHR2YXIgaW5kZXggPSAwLFxuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgYXJlIGdvaW5nIHRvIHRoZSBlbmQsIHdlIHdhbnQgdG8gcnVuIGFsbCB0aGUgdHdlZW5zXG5cdFx0XHRcdFx0Ly8gb3RoZXJ3aXNlIHdlIHNraXAgdGhpcyBwYXJ0XG5cdFx0XHRcdFx0bGVuZ3RoID0gZ290b0VuZCA/IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoIDogMDtcblx0XHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0b3BwZWQgPSB0cnVlO1xuXHRcdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcblx0XHRyZXN1bHQgPSBBbmltYXRpb24ucHJlZmlsdGVyc1sgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIGVsZW0sIHByb3BzLCBhbmltYXRpb24ub3B0cyApO1xuXHRcdGlmICggcmVzdWx0ICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcmVzdWx0LnN0b3AgKSApIHtcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCBhbmltYXRpb24uZWxlbSwgYW5pbWF0aW9uLm9wdHMucXVldWUgKS5zdG9wID1cblx0XHRcdFx0XHRqUXVlcnkucHJveHkoIHJlc3VsdC5zdG9wLCByZXN1bHQgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fVxuXHR9XG5cblx0alF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRpb24gKTtcblxuXHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHQvLyBhdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xuXHRyZXR1cm4gYW5pbWF0aW9uLnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG59XG5cbmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHtcblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBwcm9wcyApICkge1xuXHRcdFx0Y2FsbGJhY2sgPSBwcm9wcztcblx0XHRcdHByb3BzID0gWyBcIipcIiBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRwcm9wcyA9IHByb3BzLm1hdGNoKCBybm90d2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdFx0cHJvcCA9IHByb3BzWyBpbmRleCBdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gPSBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9LFxuXG5cdHByZWZpbHRlcnM6IFsgZGVmYXVsdFByZWZpbHRlciBdLFxuXG5cdHByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkge1xuXHRcdGlmICggcHJlcGVuZCApIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnB1c2goIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHtcblx0dmFyIG9wdCA9IHNwZWVkICYmIHR5cGVvZiBzcGVlZCA9PT0gXCJvYmplY3RcIiA/IGpRdWVyeS5leHRlbmQoIHt9LCBzcGVlZCApIDoge1xuXHRcdGNvbXBsZXRlOiBmbiB8fCAhZm4gJiYgZWFzaW5nIHx8XG5cdFx0XHRqUXVlcnkuaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCxcblx0XHRkdXJhdGlvbjogc3BlZWQsXG5cdFx0ZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFqUXVlcnkuaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4Lm9mZiA/IDAgOiB0eXBlb2Ygb3B0LmR1cmF0aW9uID09PSBcIm51bWJlclwiID9cblx0XHRvcHQuZHVyYXRpb24gOiBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyA/XG5cdFx0XHRqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXSA6IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0Lm9sZCApICkge1xuXHRcdFx0b3B0Lm9sZC5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHQucXVldWUgKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgb3B0LnF1ZXVlICk7XG5cdFx0fVxuXHR9O1xuXG5cdHJldHVybiBvcHQ7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFzaW5nLCBjYWxsYmFjayApIHtcblxuXHRcdC8vIFNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMFxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW4gKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBqUXVlcnkubm93KCk7XG5cblx0Zm9yICggOyBpIDwgdGltZXJzLmxlbmd0aDsgaSsrICkge1xuXHRcdHRpbWVyID0gdGltZXJzWyBpIF07XG5cblx0XHQvLyBDaGVja3MgdGhlIHRpbWVyIGhhcyBub3QgYWxyZWFkeSBiZWVuIHJlbW92ZWRcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRpZiAoIHRpbWVyKCkgKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0YXJ0KCk7XG5cdH0gZWxzZSB7XG5cdFx0alF1ZXJ5LnRpbWVycy5wb3AoKTtcblx0fVxufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCAhdGltZXJJZCApIHtcblx0XHR0aW1lcklkID0gd2luZG93LnNldEludGVydmFsKCBqUXVlcnkuZngudGljaywgalF1ZXJ5LmZ4LmludGVydmFsICk7XG5cdH1cbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdHdpbmRvdy5jbGVhckludGVydmFsKCB0aW1lcklkICk7XG5cblx0dGltZXJJZCA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cDovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxMDAzMjQwMTQ3NDcvaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XG5cdHRpbWUgPSBqUXVlcnkuZnggPyBqUXVlcnkuZnguc3BlZWRzWyB0aW1lIF0gfHwgdGltZSA6IHRpbWU7XG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSwgZnVuY3Rpb24oIG5leHQsIGhvb2tzICkge1xuXHRcdHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoIG5leHQsIHRpbWUgKTtcblx0XHRob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7XG5cdFx0fTtcblx0fSApO1xufTtcblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKSxcblx0XHRzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNlbGVjdFwiICksXG5cdFx0b3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9wdGlvblwiICkgKTtcblxuXHRpbnB1dC50eXBlID0gXCJjaGVja2JveFwiO1xuXG5cdC8vIFN1cHBvcnQ6IGlPUzw9NS4xLCBBbmRyb2lkPD00LjIrXG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxuXHRzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gXCJcIjtcblxuXHQvLyBTdXBwb3J0OiBJRTw9MTErXG5cdC8vIE11c3QgYWNjZXNzIHNlbGVjdGVkSW5kZXggdG8gbWFrZSBkZWZhdWx0IG9wdGlvbnMgc2VsZWN0XG5cdHN1cHBvcnQub3B0U2VsZWN0ZWQgPSBvcHQuc2VsZWN0ZWQ7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw9Mi4zXG5cdC8vIE9wdGlvbnMgaW5zaWRlIGRpc2FibGVkIHNlbGVjdHMgYXJlIGluY29ycmVjdGx5IG1hcmtlZCBhcyBkaXNhYmxlZFxuXHRzZWxlY3QuZGlzYWJsZWQgPSB0cnVlO1xuXHRzdXBwb3J0Lm9wdERpc2FibGVkID0gIW9wdC5kaXNhYmxlZDtcblxuXHQvLyBTdXBwb3J0OiBJRTw9MTErXG5cdC8vIEFuIGlucHV0IGxvc2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvXG5cdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdGlucHV0LnZhbHVlID0gXCJ0XCI7XG5cdGlucHV0LnR5cGUgPSBcInJhZGlvXCI7XG5cdHN1cHBvcnQucmFkaW9WYWx1ZSA9IGlucHV0LnZhbHVlID09PSBcInRcIjtcbn0gKSgpO1xuXG5cbnZhciBib29sSG9vayxcblx0YXR0ckhhbmRsZSA9IGpRdWVyeS5leHByLmF0dHJIYW5kbGU7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5hdHRyLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWRcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSwgdmFsdWUgKTtcblx0XHR9XG5cblx0XHQvLyBBbGwgYXR0cmlidXRlcyBhcmUgbG93ZXJjYXNlXG5cdFx0Ly8gR3JhYiBuZWNlc3NhcnkgaG9vayBpZiBvbmUgaXMgZGVmaW5lZFxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXHRcdFx0bmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZSBdIHx8XG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IHVuZGVmaW5lZCApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dmFyIHZhbCA9IGVsZW0udmFsdWU7XG5cdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCB2YWx1ZSApO1xuXHRcdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdFx0ZWxlbS52YWx1ZSA9IHZhbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHR2YXIgbmFtZSwgcHJvcE5hbWUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF0dHJOYW1lcyA9IHZhbHVlICYmIHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0cHJvcE5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cblx0XHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGdldCBzcGVjaWFsIHRyZWF0bWVudCAoIzEwODcwKVxuXHRcdFx0XHRpZiAoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHRcdFx0Ly8gU2V0IGNvcnJlc3BvbmRpbmcgcHJvcGVydHkgdG8gZmFsc2Vcblx0XHRcdFx0XHRlbGVtWyBwcm9wTmFtZSBdID0gZmFsc2U7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZTtcblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRudWxsO1xuXHRcdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gaGFuZGxlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0O1xuXHR9O1xufSApO1xuXG5cblxuXG52YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJjbGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xuXHRcdFx0bmFtZSA9IGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcblx0fSxcblxuXHRwcm9wSG9va3M6IHtcblx0XHR0YWJJbmRleDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCgjMTIwNzIpXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xuXG5cdFx0XHRcdHJldHVybiB0YWJpbmRleCA/XG5cdFx0XHRcdFx0cGFyc2VJbnQoIHRhYmluZGV4LCAxMCApIDpcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxuXHRcdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgZWxlbS5ocmVmID9cblx0XHRcdFx0XHRcdFx0MCA6XG5cdFx0XHRcdFx0XHRcdC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH1cbn0gKTtcblxuLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG4vLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHlcbi8vIGZvcmNlcyB0aGUgYnJvd3NlciB0byByZXNwZWN0IHNldHRpbmcgc2VsZWN0ZWRcbi8vIG9uIHRoZSBvcHRpb25cbi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkXG4vLyB3aGVuIGluIGFuIG9wdGdyb3VwXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgJiYgcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xuXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxualF1ZXJ5LmVhY2goIFtcblx0XCJ0YWJJbmRleFwiLFxuXHRcInJlYWRPbmx5XCIsXG5cdFwibWF4TGVuZ3RoXCIsXG5cdFwiY2VsbFNwYWNpbmdcIixcblx0XCJjZWxsUGFkZGluZ1wiLFxuXHRcInJvd1NwYW5cIixcblx0XCJjb2xTcGFuXCIsXG5cdFwidXNlTWFwXCIsXG5cdFwiZnJhbWVCb3JkZXJcIixcblx0XCJjb250ZW50RWRpdGFibGVcIlxuXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS5wcm9wRml4WyB0aGlzLnRvTG93ZXJDYXNlKCkgXSA9IHRoaXM7XG59ICk7XG5cblxuXG5cbnZhciByY2xhc3MgPSAvW1xcdFxcclxcblxcZl0vZztcblxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XG5cdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHwgXCJcIjtcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUgKSB7XG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggXCIgXCIgKyBjdXJWYWx1ZSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IGpRdWVyeS50cmltKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUgKSB7XG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0KCBcIiBcIiArIGN1clZhbHVlICsgXCIgXCIgKS5yZXBsYWNlKCByY2xhc3MsIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBqUXVlcnkudHJpbSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiB0eXBlID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCB0aGlzLCBpLCBnZXRDbGFzcyggdGhpcyApLCBzdGF0ZVZhbCApLFxuXHRcdFx0XHRcdHN0YXRlVmFsXG5cdFx0XHRcdCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdC8vIFRvZ2dsZSB3aG9sZSBjbGFzcyBuYW1lXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXHRcdFx0XHRpZiAoIGNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiLCBjbGFzc05hbWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoZSBlbGVtZW50IGhhcyBhIGNsYXNzIG5hbWUgb3IgaWYgd2UncmUgcGFzc2VkIGBmYWxzZWAsXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBwcmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksXG5cdFx0XHRcdC8vIGZhbGxpbmcgYmFjayB0byB0aGUgZW1wdHkgc3RyaW5nIGlmIG5vdGhpbmcgd2FzIHN0b3JlZC5cblx0XHRcdFx0aWYgKCB0aGlzLnNldEF0dHJpYnV0ZSApIHtcblx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLFxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lIHx8IHZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRcdFx0XHRcIlwiIDpcblx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIGdldENsYXNzKCBlbGVtICkgKyBcIiBcIiApLnJlcGxhY2UoIHJjbGFzcywgXCIgXCIgKVxuXHRcdFx0XHRcdC5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nLFxuXHRyc3BhY2VzID0gL1tcXHgyMFxcdFxcclxcblxcZl0rL2c7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGhvb2tzLCByZXQsIGlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0cmV0dXJuIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgP1xuXG5cdFx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRcdHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICkgOlxuXG5cdFx0XHRcdFx0Ly8gSGFuZGxlIGNhc2VzIHdoZXJlIHZhbHVlIGlzIG51bGwvdW5kZWYgb3IgbnVtYmVyXG5cdFx0XHRcdFx0cmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHR2YXIgdmFsO1xuXG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBpc0Z1bmN0aW9uICkge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsID0gdmFsdWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzIFwiXCI7IGNvbnZlcnQgbnVtYmVycyB0byBzdHJpbmdcblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHZhbCA9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbCArPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCBqUXVlcnkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFMTAtMTErXG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRqUXVlcnkudHJpbSggalF1ZXJ5LnRleHQoIGVsZW0gKSApLnJlcGxhY2UoIHJzcGFjZXMsIFwiIFwiICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIiB8fCBpbmRleCA8IDAsXG5cdFx0XHRcdFx0dmFsdWVzID0gb25lID8gbnVsbCA6IFtdLFxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoLFxuXHRcdFx0XHRcdGkgPSBpbmRleCA8IDAgP1xuXHRcdFx0XHRcdFx0bWF4IDpcblx0XHRcdFx0XHRcdG9uZSA/IGluZGV4IDogMDtcblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIElFOC05IGRvZXNuJ3QgdXBkYXRlIHNlbGVjdGVkIGFmdGVyIGZvcm0gcmVzZXQgKCMyNTUxKVxuXHRcdFx0XHRcdGlmICggKCBvcHRpb24uc2VsZWN0ZWQgfHwgaSA9PT0gaW5kZXggKSAmJlxuXG5cdFx0XHRcdFx0XHRcdC8vIERvbid0IHJldHVybiBvcHRpb25zIHRoYXQgYXJlIGRpc2FibGVkIG9yIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdFx0XHRcdFx0KCBzdXBwb3J0Lm9wdERpc2FibGVkID9cblx0XHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkIDogb3B0aW9uLmdldEF0dHJpYnV0ZSggXCJkaXNhYmxlZFwiICkgPT09IG51bGwgKSAmJlxuXHRcdFx0XHRcdFx0XHQoICFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fFxuXHRcdFx0XHRcdFx0XHRcdCFqUXVlcnkubm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBHZXQgdGhlIHNwZWNpZmljIHZhbHVlIGZvciB0aGUgb3B0aW9uXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XG5cblx0XHRcdFx0XHRcdC8vIFdlIGRvbid0IG5lZWQgYW4gYXJyYXkgZm9yIG9uZSBzZWxlY3RzXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBNdWx0aS1TZWxlY3RzIHJldHVybiBhbiBhcnJheVxuXHRcdFx0XHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgb3B0aW9uU2V0LCBvcHRpb24sXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxuXHRcdFx0XHRcdGkgPSBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cdFx0XHRcdFx0aWYgKCBvcHRpb24uc2VsZWN0ZWQgPVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0b3B0aW9uU2V0ID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBicm93c2VycyB0byBiZWhhdmUgY29uc2lzdGVudGx5IHdoZW4gbm9uLW1hdGNoaW5nIHZhbHVlIGlzIHNldFxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcbmpRdWVyeS5lYWNoKCBbIFwicmFkaW9cIiwgXCJjaGVja2JveFwiIF0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHtcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdGlmICggalF1ZXJ5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC87XG5cbmpRdWVyeS5leHRlbmQoIGpRdWVyeS5ldmVudCwge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkge1xuXG5cdFx0dmFyIGksIGN1ciwgdG1wLCBidWJibGVUeXBlLCBvbnR5cGUsIGhhbmRsZSwgc3BlY2lhbCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gdG1wID0gZWxlbSA9IGVsZW0gfHwgZG9jdW1lbnQ7XG5cblx0XHQvLyBEb24ndCBkbyBldmVudHMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIGZvY3VzL2JsdXIgbW9ycGhzIHRvIGZvY3VzaW4vb3V0OyBlbnN1cmUgd2UncmUgbm90IGZpcmluZyB0aGVtIHJpZ2h0IG5vd1xuXHRcdGlmICggcmZvY3VzTW9ycGgudGVzdCggdHlwZSArIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIHR5cGUuaW5kZXhPZiggXCIuXCIgKSA+IC0xICkge1xuXG5cdFx0XHQvLyBOYW1lc3BhY2VkIHRyaWdnZXI7IGNyZWF0ZSBhIHJlZ2V4cCB0byBtYXRjaCBldmVudCB0eXBlIGluIGhhbmRsZSgpXG5cdFx0XHRuYW1lc3BhY2VzID0gdHlwZS5zcGxpdCggXCIuXCIgKTtcblx0XHRcdHR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7XG5cdFx0XHRuYW1lc3BhY2VzLnNvcnQoKTtcblx0XHR9XG5cdFx0b250eXBlID0gdHlwZS5pbmRleE9mKCBcIjpcIiApIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGEgalF1ZXJ5LkV2ZW50IG9iamVjdCwgT2JqZWN0LCBvciBqdXN0IGFuIGV2ZW50IHR5cGUgc3RyaW5nXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRldmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCB0eXBlLCB0eXBlb2YgZXZlbnQgPT09IFwib2JqZWN0XCIgJiYgZXZlbnQgKTtcblxuXHRcdC8vIFRyaWdnZXIgYml0bWFzazogJiAxIGZvciBuYXRpdmUgaGFuZGxlcnM7ICYgMiBmb3IgalF1ZXJ5IChhbHdheXMgdHJ1ZSlcblx0XHRldmVudC5pc1RyaWdnZXIgPSBvbmx5SGFuZGxlcnMgPyAyIDogMztcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiICk7XG5cdFx0ZXZlbnQucm5hbWVzcGFjZSA9IGV2ZW50Lm5hbWVzcGFjZSA/XG5cdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKSA6XG5cdFx0XHRudWxsO1xuXG5cdFx0Ly8gQ2xlYW4gdXAgdGhlIGV2ZW50IGluIGNhc2UgaXQgaXMgYmVpbmcgcmV1c2VkXG5cdFx0ZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkO1xuXHRcdGlmICggIWV2ZW50LnRhcmdldCApIHtcblx0XHRcdGV2ZW50LnRhcmdldCA9IGVsZW07XG5cdFx0fVxuXG5cdFx0Ly8gQ2xvbmUgYW55IGluY29taW5nIGRhdGEgYW5kIHByZXBlbmQgdGhlIGV2ZW50LCBjcmVhdGluZyB0aGUgaGFuZGxlciBhcmcgbGlzdFxuXHRcdGRhdGEgPSBkYXRhID09IG51bGwgP1xuXHRcdFx0WyBldmVudCBdIDpcblx0XHRcdGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEsIFsgZXZlbnQgXSApO1xuXG5cdFx0Ly8gQWxsb3cgc3BlY2lhbCBldmVudHMgdG8gZHJhdyBvdXRzaWRlIHRoZSBsaW5lc1xuXHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiBzcGVjaWFsLnRyaWdnZXIgJiYgc3BlY2lhbC50cmlnZ2VyLmFwcGx5KCBlbGVtLCBkYXRhICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBldmVudCBwcm9wYWdhdGlvbiBwYXRoIGluIGFkdmFuY2UsIHBlciBXM0MgZXZlbnRzIHNwZWMgKCM5OTUxKVxuXHRcdC8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhlbiB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAoIzk3MjQpXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xuXHRcdFx0XHRjdXIgPSBjdXIucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIGN1ciApO1xuXHRcdFx0XHR0bXAgPSBjdXI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCB0bXAuZGVmYXVsdFZpZXcgfHwgdG1wLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGV2ZW50UGF0aFsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblxuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cblx0XHRcdFx0YnViYmxlVHlwZSA6XG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcblxuXHRcdFx0Ly8galF1ZXJ5IGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiZcblx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiaGFuZGxlXCIgKTtcblx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07XG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7XG5cdFx0XHRcdGV2ZW50LnJlc3VsdCA9IGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGV2ZW50LnR5cGUgPSB0eXBlO1xuXG5cdFx0Ly8gSWYgbm9ib2R5IHByZXZlbnRlZCB0aGUgZGVmYXVsdCBhY3Rpb24sIGRvIGl0IG5vd1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XG5cblx0XHRcdGlmICggKCAhc3BlY2lhbC5fZGVmYXVsdCB8fFxuXHRcdFx0XHRzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJlxuXHRcdFx0XHRhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGVycm9yIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbnN1cHBvcnQuZm9jdXNpbiA9IFwib25mb2N1c2luXCIgaW4gd2luZG93O1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3hcbi8vIEZpcmVmb3ggZG9lc24ndCBoYXZlIGZvY3VzKGluIHwgb3V0KSBldmVudHNcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njg3Nzg3XG4vL1xuLy8gU3VwcG9ydDogQ2hyb21lLCBTYWZhcmlcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NDk4NTdcbmlmICggIXN1cHBvcnQuZm9jdXNpbiApIHtcblx0alF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIGZpeCwgZXZlbnQudGFyZ2V0LCBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApICk7XG5cdFx0fTtcblxuXHRcdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBmaXggXSA9IHtcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5hZGRFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XG5cdFx0XHR9LFxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0galF1ZXJ5Lm5vdygpO1xuXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xuXG5cblxuLy8gU3VwcG9ydDogQW5kcm9pZCAyLjNcbi8vIFdvcmthcm91bmQgZmFpbHVyZSB0byBzdHJpbmctY2FzdCBudWxsIGlucHV0XG5qUXVlcnkucGFyc2VKU09OID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHJldHVybiBKU09OLnBhcnNlKCBkYXRhICsgXCJcIiApO1xufTtcblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbDtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFOVxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge1xuXHRcdHhtbCA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdGlmICggIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xuXHR9XG5cdHJldHVybiB4bWw7XG59O1xuXG5cbnZhclxuXHRyaGFzaCA9IC8jLiokLyxcblx0cnRzID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblx0b3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdC8vIFRoZXJlJ3Mgb25seSB3b3JrIHRvIGRvIGlmIGN1cnJlbnQgZGF0YVR5cGUgaXMgbm9uLWF1dG9cblx0XHRcdGlmICggY3VycmVudCA9PT0gXCIqXCIgKSB7XG5cblx0XHRcdFx0Y3VycmVudCA9IHByZXY7XG5cblx0XHRcdC8vIENvbnZlcnQgcmVzcG9uc2UgaWYgcHJldiBkYXRhVHlwZSBpcyBub24tYXV0byBhbmQgZGlmZmVycyBmcm9tIGN1cnJlbnRcblx0XHRcdH0gZWxzZSBpZiAoIHByZXYgIT09IFwiKlwiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU2VlayBhIGRpcmVjdCBjb252ZXJ0ZXJcblx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIGN1cnJlbnQgXSB8fCBjb252ZXJ0ZXJzWyBcIiogXCIgKyBjdXJyZW50IF07XG5cblx0XHRcdFx0Ly8gSWYgbm9uZSBmb3VuZCwgc2VlayBhIHBhaXJcblx0XHRcdFx0aWYgKCAhY29udiApIHtcblx0XHRcdFx0XHRmb3IgKCBjb252MiBpbiBjb252ZXJ0ZXJzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJZiBjb252MiBvdXRwdXRzIGN1cnJlbnRcblx0XHRcdFx0XHRcdHRtcCA9IGNvbnYyLnNwbGl0KCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCB0bXBbIDEgXSA9PT0gY3VycmVudCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBJZiBwcmV2IGNhbiBiZSBjb252ZXJ0ZWQgdG8gYWNjZXB0ZWQgaW5wdXRcblx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIHRtcFsgMCBdIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRjb252ZXJ0ZXJzWyBcIiogXCIgKyB0bXBbIDAgXSBdO1xuXHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDb25kZW5zZSBlcXVpdmFsZW5jZSBjb252ZXJ0ZXJzXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjb252ID09PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGluc2VydCB0aGUgaW50ZXJtZWRpYXRlIGRhdGFUeXBlXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggY29udmVydGVyc1sgY29udjIgXSAhPT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnQgPSB0bXBbIDAgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFwcGx5IGNvbnZlcnRlciAoaWYgbm90IGFuIGVxdWl2YWxlbmNlKVxuXHRcdFx0XHRpZiAoIGNvbnYgIT09IHRydWUgKSB7XG5cblx0XHRcdFx0XHQvLyBVbmxlc3MgZXJyb3JzIGFyZSBhbGxvd2VkIHRvIGJ1YmJsZSwgY2F0Y2ggYW5kIHJldHVybiB0aGVtXG5cdFx0XHRcdFx0aWYgKCBjb252ICYmIHMudGhyb3dzICkge1xuXHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0ZTogXCJwYXJzZXJlcnJvclwiLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudFxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIENvdW50ZXIgZm9yIGhvbGRpbmcgdGhlIG51bWJlciBvZiBhY3RpdmUgcXVlcmllc1xuXHRhY3RpdmU6IDAsXG5cblx0Ly8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdFxuXHRsYXN0TW9kaWZpZWQ6IHt9LFxuXHRldGFnOiB7fSxcblxuXHRhamF4U2V0dGluZ3M6IHtcblx0XHR1cmw6IGxvY2F0aW9uLmhyZWYsXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBsb2NhdGlvbi5wcm90b2NvbCApLFxuXHRcdGdsb2JhbDogdHJ1ZSxcblx0XHRwcm9jZXNzRGF0YTogdHJ1ZSxcblx0XHRhc3luYzogdHJ1ZSxcblx0XHRjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIixcblx0XHQvKlxuXHRcdHRpbWVvdXQ6IDAsXG5cdFx0ZGF0YTogbnVsbCxcblx0XHRkYXRhVHlwZTogbnVsbCxcblx0XHR1c2VybmFtZTogbnVsbCxcblx0XHRwYXNzd29yZDogbnVsbCxcblx0XHRjYWNoZTogbnVsbCxcblx0XHR0aHJvd3M6IGZhbHNlLFxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcblx0XHRoZWFkZXJzOiB7fSxcblx0XHQqL1xuXG5cdFx0YWNjZXB0czoge1xuXHRcdFx0XCIqXCI6IGFsbFR5cGVzLFxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxuXHRcdFx0eG1sOiBcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcblx0XHR9LFxuXG5cdFx0Y29udGVudHM6IHtcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXG5cdFx0XHRodG1sOiAvXFxiaHRtbC8sXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cblx0XHR9LFxuXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxuXHRcdFx0dGV4dDogXCJyZXNwb25zZVRleHRcIixcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcblx0XHR9LFxuXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxuXHRcdGNvbnZlcnRlcnM6IHtcblxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XG5cdFx0XHRcIiogdGV4dFwiOiBTdHJpbmcsXG5cblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxuXHRcdFx0XCJ0ZXh0IGh0bWxcIjogdHJ1ZSxcblxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxuXHRcdFx0XCJ0ZXh0IGpzb25cIjogalF1ZXJ5LnBhcnNlSlNPTixcblxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcblx0XHRcdFwidGV4dCB4bWxcIjogalF1ZXJ5LnBhcnNlWE1MXG5cdFx0fSxcblxuXHRcdC8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6XG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXG5cdFx0Ly8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpXG5cdFx0ZmxhdE9wdGlvbnM6IHtcblx0XHRcdHVybDogdHJ1ZSxcblx0XHRcdGNvbnRleHQ6IHRydWVcblx0XHR9XG5cdH0sXG5cblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxuXHQvLyBJZiB0YXJnZXQgaXMgb21pdHRlZCwgd3JpdGVzIGludG8gYWpheFNldHRpbmdzLlxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xuXHRcdHJldHVybiBzZXR0aW5ncyA/XG5cblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XG5cblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3Ncblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xuXHR9LFxuXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxuXHRhamF4VHJhbnNwb3J0OiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMgKSxcblxuXHQvLyBNYWluIG1ldGhvZFxuXHRhamF4OiBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcblx0XHRpZiAoIHR5cGVvZiB1cmwgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRvcHRpb25zID0gdXJsO1xuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR2YXIgdHJhbnNwb3J0LFxuXG5cdFx0XHQvLyBVUkwgd2l0aG91dCBhbnRpLWNhY2hlIHBhcmFtXG5cdFx0XHRjYWNoZVVSTCxcblxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nLFxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXG5cdFx0XHQvLyB0aW1lb3V0IGhhbmRsZVxuXHRcdFx0dGltZW91dFRpbWVyLFxuXG5cdFx0XHQvLyBVcmwgY2xlYW51cCB2YXJcblx0XHRcdHVybEFuY2hvcixcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxuXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8IHt9LFxuXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblxuXHRcdFx0Ly8gVGhlIGpxWEhSIHN0YXRlXG5cdFx0XHRzdGF0ZSA9IDAsXG5cblx0XHRcdC8vIERlZmF1bHQgYWJvcnQgbWVzc2FnZVxuXHRcdFx0c3RyQWJvcnQgPSBcImNhbmNlbGVkXCIsXG5cblx0XHRcdC8vIEZha2UgeGhyXG5cdFx0XHRqcVhIUiA9IHtcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcblxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdFx0XHRcdHZhciBtYXRjaDtcblx0XHRcdFx0XHRpZiAoIHN0YXRlID09PSAyICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJhdyBzdHJpbmdcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGUgPT09IDIgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXG5cdFx0XHRcdHNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdFx0XHR2YXIgbG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdFx0aWYgKCAhc3RhdGUgKSB7XG5cdFx0XHRcdFx0XHRuYW1lID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbG5hbWUgXSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIGxuYW1lIF0gfHwgbmFtZTtcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0aWYgKCAhc3RhdGUgKSB7XG5cdFx0XHRcdFx0XHRzLm1pbWVUeXBlID0gdHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdFx0c3RhdHVzQ29kZTogZnVuY3Rpb24oIG1hcCApIHtcblx0XHRcdFx0XHR2YXIgY29kZTtcblx0XHRcdFx0XHRpZiAoIG1hcCApIHtcblx0XHRcdFx0XHRcdGlmICggc3RhdGUgPCAyICkge1xuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2sgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBFeGVjdXRlIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja3Ncblx0XHRcdFx0XHRcdFx0anFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhbmNlbCB0aGUgcmVxdWVzdFxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0dmFyIGZpbmFsVGV4dCA9IHN0YXR1c1RleHQgfHwgc3RyQWJvcnQ7XG5cdFx0XHRcdFx0aWYgKCB0cmFuc3BvcnQgKSB7XG5cdFx0XHRcdFx0XHR0cmFuc3BvcnQuYWJvcnQoIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkb25lKCAwLCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdC8vIEF0dGFjaCBkZWZlcnJlZHNcblx0XHRkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApLmNvbXBsZXRlID0gY29tcGxldGVEZWZlcnJlZC5hZGQ7XG5cdFx0anFYSFIuc3VjY2VzcyA9IGpxWEhSLmRvbmU7XG5cdFx0anFYSFIuZXJyb3IgPSBqcVhIUi5mYWlsO1xuXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggY2hhcmFjdGVyICgjNzUzMTogYW5kIHN0cmluZyBwcm9tb3Rpb24pXG5cdFx0Ly8gQWRkIHByb3RvY29sIGlmIG5vdCBwcm92aWRlZCAocHJlZmlsdGVycyBtaWdodCBleHBlY3QgaXQpXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSlcblx0XHQvLyBXZSBhbHNvIHVzZSB0aGUgdXJsIHBhcmFtZXRlciBpZiBhdmFpbGFibGVcblx0XHRzLnVybCA9ICggKCB1cmwgfHwgcy51cmwgfHwgbG9jYXRpb24uaHJlZiApICsgXCJcIiApLnJlcGxhY2UoIHJoYXNoLCBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0galF1ZXJ5LnRyaW0oIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblxuXHRcdC8vIEEgY3Jvc3MtZG9tYWluIHJlcXVlc3QgaXMgaW4gb3JkZXIgd2hlbiB0aGUgb3JpZ2luIGRvZXNuJ3QgbWF0Y2ggdGhlIGN1cnJlbnQgb3JpZ2luLlxuXHRcdGlmICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkge1xuXHRcdFx0dXJsQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LTExK1xuXHRcdFx0Ly8gSUUgdGhyb3dzIGV4Y2VwdGlvbiBpZiB1cmwgaXMgbWFsZm9ybWVkLCBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFOC0xMStcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggc3RhdGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm4ganFYSFI7XG5cdFx0fVxuXG5cdFx0Ly8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG9cblx0XHQvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAoIzE1MTE4KVxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xuXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0YXJ0XCIgKTtcblx0XHR9XG5cblx0XHQvLyBVcHBlcmNhc2UgdGhlIHR5cGVcblx0XHRzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTtcblxuXHRcdC8vIERldGVybWluZSBpZiByZXF1ZXN0IGhhcyBjb250ZW50XG5cdFx0cy5oYXNDb250ZW50ID0gIXJub0NvbnRlbnQudGVzdCggcy50eXBlICk7XG5cblx0XHQvLyBTYXZlIHRoZSBVUkwgaW4gY2FzZSB3ZSdyZSB0b3lpbmcgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2Vcblx0XHQvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb25cblx0XHRjYWNoZVVSTCA9IHMudXJsO1xuXG5cdFx0Ly8gTW9yZSBvcHRpb25zIGhhbmRsaW5nIGZvciByZXF1ZXN0cyB3aXRoIG5vIGNvbnRlbnRcblx0XHRpZiAoICFzLmhhc0NvbnRlbnQgKSB7XG5cblx0XHRcdC8vIElmIGRhdGEgaXMgYXZhaWxhYmxlLCBhcHBlbmQgZGF0YSB0byB1cmxcblx0XHRcdGlmICggcy5kYXRhICkge1xuXHRcdFx0XHRjYWNoZVVSTCA9ICggcy51cmwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuZGF0YSApO1xuXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIGFudGktY2FjaGUgaW4gdXJsIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0cy51cmwgPSBydHMudGVzdCggY2FjaGVVUkwgKSA/XG5cblx0XHRcdFx0XHQvLyBJZiB0aGVyZSBpcyBhbHJlYWR5IGEgJ18nIHBhcmFtZXRlciwgc2V0IGl0cyB2YWx1ZVxuXHRcdFx0XHRcdGNhY2hlVVJMLnJlcGxhY2UoIHJ0cywgXCIkMV89XCIgKyBub25jZSsrICkgOlxuXG5cdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFkZCBvbmUgdG8gdGhlIGVuZFxuXHRcdFx0XHRcdGNhY2hlVVJMICsgKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArIG5vbmNlKys7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IHN0YXRlID09PSAyICkgKSB7XG5cblx0XHRcdC8vIEFib3J0IGlmIG5vdCBkb25lIGFscmVhZHkgYW5kIHJldHVyblxuXHRcdFx0cmV0dXJuIGpxWEhSLmFib3J0KCk7XG5cdFx0fVxuXG5cdFx0Ly8gQWJvcnRpbmcgaXMgbm8gbG9uZ2VyIGEgY2FuY2VsbGF0aW9uXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrcyBvbiBkZWZlcnJlZHNcblx0XHRmb3IgKCBpIGluIHsgc3VjY2VzczogMSwgZXJyb3I6IDEsIGNvbXBsZXRlOiAxIH0gKSB7XG5cdFx0XHRqcVhIUlsgaSBdKCBzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBzdGF0ZSA9PT0gMiApIHtcblx0XHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaW1lb3V0XG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcblx0XHRcdFx0dGltZW91dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGpxWEhSLmFib3J0KCBcInRpbWVvdXRcIiApO1xuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcblx0XHRcdH1cblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0c3RhdGUgPSAxO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBleGNlcHRpb24gYXMgZXJyb3IgaWYgbm90IGRvbmVcblx0XHRcdFx0aWYgKCBzdGF0ZSA8IDIgKSB7XG5cdFx0XHRcdFx0ZG9uZSggLTEsIGUgKTtcblxuXHRcdFx0XHQvLyBTaW1wbHkgcmV0aHJvdyBvdGhlcndpc2Vcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGJhY2sgZm9yIHdoZW4gZXZlcnl0aGluZyBpcyBkb25lXG5cdFx0ZnVuY3Rpb24gZG9uZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMgKSB7XG5cdFx0XHR2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVkLFxuXHRcdFx0XHRzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dDtcblxuXHRcdFx0Ly8gQ2FsbGVkIG9uY2Vcblx0XHRcdGlmICggc3RhdGUgPT09IDIgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhdGUgaXMgXCJkb25lXCIgbm93XG5cdFx0XHRzdGF0ZSA9IDI7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBkYXRhICkgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBjYWxsYmFjaztcblx0XHRcdGNhbGxiYWNrID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gVGhlIHVybCBjYW4gYmUgYW4gb3B0aW9ucyBvYmplY3QgKHdoaWNoIHRoZW4gbXVzdCBoYXZlIC51cmwpXG5cdFx0cmV0dXJuIGpRdWVyeS5hamF4KCBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHR1cmw6IHVybCxcblx0XHRcdHR5cGU6IG1ldGhvZCxcblx0XHRcdGRhdGFUeXBlOiB0eXBlLFxuXHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdHN1Y2Nlc3M6IGNhbGxiYWNrXG5cdFx0fSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCApICk7XG5cdH07XG59ICk7XG5cblxualF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCApIHtcblx0cmV0dXJuIGpRdWVyeS5hamF4KCB7XG5cdFx0dXJsOiB1cmwsXG5cblx0XHQvLyBNYWtlIHRoaXMgZXhwbGljaXQsIHNpbmNlIHVzZXIgY2FuIG92ZXJyaWRlIHRoaXMgdGhyb3VnaCBhamF4U2V0dXAgKCMxMTI2NClcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGRhdGFUeXBlOiBcInNjcmlwdFwiLFxuXHRcdGFzeW5jOiBmYWxzZSxcblx0XHRnbG9iYWw6IGZhbHNlLFxuXHRcdFwidGhyb3dzXCI6IHRydWVcblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWwuY2FsbCggdGhpcywgaSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcblx0XHRcdH0gKS5hcHBlbmQoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0bWwuY2FsbCggdGhpcywgaSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGpRdWVyeSggdGhpcyApLFxuXHRcdFx0XHRjb250ZW50cyA9IHNlbGYuY29udGVudHMoKTtcblxuXHRcdFx0aWYgKCBjb250ZW50cy5sZW5ndGggKSB7XG5cdFx0XHRcdGNvbnRlbnRzLndyYXBBbGwoIGh0bWwgKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c2VsZi5hcHBlbmQoIGh0bWwgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0d3JhcDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIGlzRnVuY3Rpb24gPSBqUXVlcnkuaXNGdW5jdGlvbiggaHRtbCApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBpc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFqUXVlcnkubm9kZU5hbWUoIHRoaXMsIFwiYm9keVwiICkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcblx0XHRcdH1cblx0XHR9ICkuZW5kKCk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJsZSggZWxlbSApO1xufTtcbmpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdC8vIFN1cHBvcnQ6IE9wZXJhIDw9IDEyLjEyXG5cdC8vIE9wZXJhIHJlcG9ydHMgb2Zmc2V0V2lkdGhzIGFuZCBvZmZzZXRIZWlnaHRzIGxlc3MgdGhhbiB6ZXJvIG9uIHNvbWUgZWxlbWVudHNcblx0Ly8gVXNlIE9SIGluc3RlYWQgb2YgQU5EIGFzIHRoZSBlbGVtZW50IGlzIG5vdCB2aXNpYmxlIGlmIGVpdGhlciBpcyB0cnVlXG5cdC8vIFNlZSB0aWNrZXRzICMxMDQwNiBhbmQgIzEzMTMyXG5cdHJldHVybiBlbGVtLm9mZnNldFdpZHRoID4gMCB8fCBlbGVtLm9mZnNldEhlaWdodCA+IDAgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCA+IDA7XG59O1xuXG5cblxuXG52YXIgcjIwID0gLyUyMC9nLFxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIGpRdWVyeS5pc0FycmF5KCBvYmogKSApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBhcnJheSBpdGVtLlxuXHRcdGpRdWVyeS5lYWNoKCBvYmosIGZ1bmN0aW9uKCBpLCB2ICkge1xuXHRcdFx0aWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHtcblxuXHRcdFx0XHQvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gSXRlbSBpcyBub24tc2NhbGFyIChhcnJheSBvciBvYmplY3QpLCBlbmNvZGUgaXRzIG51bWVyaWMgaW5kZXguXG5cdFx0XHRcdGJ1aWxkUGFyYW1zKFxuXHRcdFx0XHRcdHByZWZpeCArIFwiW1wiICsgKCB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9IG51bGwgPyBpIDogXCJcIiApICsgXCJdXCIsXG5cdFx0XHRcdFx0dixcblx0XHRcdFx0XHR0cmFkaXRpb25hbCxcblx0XHRcdFx0XHRhZGRcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0fSBlbHNlIGlmICggIXRyYWRpdGlvbmFsICYmIGpRdWVyeS50eXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCByZXR1cm4gaXRzIHZhbHVlXG5cdFx0XHR2YWx1ZSA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApID8gdmFsdWUoKSA6ICggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgKTtcblx0XHR9O1xuXG5cdC8vIFNldCB0cmFkaXRpb25hbCB0byB0cnVlIGZvciBqUXVlcnkgPD0gMS4zLjIgYmVoYXZpb3IuXG5cdGlmICggdHJhZGl0aW9uYWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHR0cmFkaXRpb25hbCA9IGpRdWVyeS5hamF4U2V0dGluZ3MgJiYgalF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbDtcblx0fVxuXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXG5cdGlmICggalF1ZXJ5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0cmV0dXJuIHZhbCA9PSBudWxsID9cblx0XHRcdFx0bnVsbCA6XG5cdFx0XHRcdGpRdWVyeS5pc0FycmF5KCB2YWwgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHR9ICkuZ2V0KCk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn07XG5cbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xuXG5cdFx0Ly8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDBcblx0XHQwOiAyMDAsXG5cblx0XHQvLyBTdXBwb3J0OiBJRTlcblx0XHQvLyAjMTQ1MDogc29tZXRpbWVzIElFIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDRcblx0XHQxMjIzOiAyMDRcblx0fSxcblx0eGhyU3VwcG9ydGVkID0galF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTtcblxuc3VwcG9ydC5jb3JzID0gISF4aHJTdXBwb3J0ZWQgJiYgKCBcIndpdGhDcmVkZW50aWFsc1wiIGluIHhoclN1cHBvcnRlZCApO1xuc3VwcG9ydC5hamF4ID0geGhyU3VwcG9ydGVkID0gISF4aHJTdXBwb3J0ZWQ7XG5cbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0dmFyIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrO1xuXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0aWYgKCBzdXBwb3J0LmNvcnMgfHwgeGhyU3VwcG9ydGVkICYmICFvcHRpb25zLmNyb3NzRG9tYWluICkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHZhciBpLFxuXHRcdFx0XHRcdHhociA9IG9wdGlvbnMueGhyKCk7XG5cblx0XHRcdFx0eGhyLm9wZW4oXG5cdFx0XHRcdFx0b3B0aW9ucy50eXBlLFxuXHRcdFx0XHRcdG9wdGlvbnMudXJsLFxuXHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXG5cdFx0XHRcdFx0b3B0aW9ucy51c2VybmFtZSxcblx0XHRcdFx0XHRvcHRpb25zLnBhc3N3b3JkXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0Ly8gYWtpbiB0byBhIGppZ3NhdyBwdXp6bGUsIHdlIHNpbXBseSBuZXZlciBzZXQgaXQgdG8gYmUgc3VyZS5cblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXG5cdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluICYmICFoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdICkge1xuXHRcdFx0XHRcdGhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gPSBcIlhNTEh0dHBSZXF1ZXN0XCI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xuXHRcdFx0XHRmb3IgKCBpIGluIGhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0eGhyLnNldFJlcXVlc3RIZWFkZXIoIGksIGhlYWRlcnNbIGkgXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRjYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID1cblx0XHRcdFx0XHRcdFx0XHR4aHIub25lcnJvciA9IHhoci5vbmFib3J0ID0geGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG5cblx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlID09PSBcImFib3J0XCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IFwiZXJyb3JcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFOVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSBjYWxsYmFjayggXCJlcnJvclwiICk7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU5XG5cdFx0XHRcdC8vIFVzZSBvbnJlYWR5c3RhdGVjaGFuZ2UgdG8gcmVwbGFjZSBvbmFib3J0XG5cdFx0XHRcdC8vIHRvIGhhbmRsZSB1bmNhdWdodCBhYm9ydHNcblx0XHRcdFx0aWYgKCB4aHIub25hYm9ydCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHhoci5vbmFib3J0ID0gZXJyb3JDYWxsYmFjaztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIENoZWNrIHJlYWR5U3RhdGUgYmVmb3JlIHRpbWVvdXQgYXMgaXQgY2hhbmdlc1xuXHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBbGxvdyBvbmVycm9yIHRvIGJlIGNhbGxlZCBmaXJzdCxcblx0XHRcdFx0XHRcdFx0Ly8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0XG5cdFx0XHRcdFx0XHRcdC8vIEFsc28sIHNhdmUgZXJyb3JDYWxsYmFjayB0byBhIHZhcmlhYmxlXG5cdFx0XHRcdFx0XHRcdC8vIGFzIHhoci5vbmVycm9yIGNhbm5vdCBiZSBhY2Nlc3NlZFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yQ2FsbGJhY2soKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGNhbGxiYWNrKCBcImFib3J0XCIgKTtcblxuXHRcdFx0XHR0cnkge1xuXG5cdFx0XHRcdFx0Ly8gRG8gc2VuZCB0aGUgcmVxdWVzdCAodGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uKVxuXHRcdFx0XHRcdHhoci5zZW5kKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhIHx8IG51bGwgKTtcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHQvLyAjMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIEluc3RhbGwgc2NyaXB0IGRhdGFUeXBlXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBcIiArXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXG5cdH0sXG5cdGNvbnRlbnRzOiB7XG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cblx0fSxcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xuXHRcdFx0cmV0dXJuIHRleHQ7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydFxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeSggXCI8c2NyaXB0PlwiICkucHJvcCgge1xuXHRcdFx0XHRcdGNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCxcblx0XHRcdFx0XHRzcmM6IHMudXJsXG5cdFx0XHRcdH0gKS5vbihcblx0XHRcdFx0XHRcImxvYWQgZXJyb3JcIixcblx0XHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRzY3JpcHQucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHRjYWxsYmFjayA9IG51bGw7XG5cdFx0XHRcdFx0XHRpZiAoIGV2dCApIHtcblx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIGV2dC50eXBlID09PSBcImVycm9yXCIgPyA0MDQgOiAyMDAsIGV2dC50eXBlICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIFVzZSBuYXRpdmUgRE9NIG1hbmlwdWxhdGlvbiB0byBhdm9pZCBvdXIgZG9tTWFuaXAgQUpBWCB0cmlja2VyeVxuXHRcdFx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHRbIDAgXSApO1xuXHRcdFx0fSxcblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXG5cdHJqc29ucCA9IC8oPSlcXD8oPz0mfCQpfFxcP1xcPy87XG5cbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0anNvbnA6IFwiY2FsbGJhY2tcIixcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyBcIl9cIiArICggbm9uY2UrKyApICk7XG5cdFx0dGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7XG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xuXHR9XG59ICk7XG5cbi8vIERldGVjdCwgbm9ybWFsaXplIG9wdGlvbnMgYW5kIGluc3RhbGwgY2FsbGJhY2tzIGZvciBqc29ucCByZXF1ZXN0c1xualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwianNvbiBqc29ucFwiLCBmdW5jdGlvbiggcywgb3JpZ2luYWxTZXR0aW5ncywganFYSFIgKSB7XG5cblx0dmFyIGNhbGxiYWNrTmFtZSwgb3ZlcndyaXR0ZW4sIHJlc3BvbnNlQ29udGFpbmVyLFxuXHRcdGpzb25Qcm9wID0gcy5qc29ucCAhPT0gZmFsc2UgJiYgKCByanNvbnAudGVzdCggcy51cmwgKSA/XG5cdFx0XHRcInVybFwiIDpcblx0XHRcdHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0KCBzLmNvbnRlbnRUeXBlIHx8IFwiXCIgKVxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcblx0XHRcdFx0cmpzb25wLnRlc3QoIHMuZGF0YSApICYmIFwiZGF0YVwiXG5cdFx0KTtcblxuXHQvLyBIYW5kbGUgaWZmIHRoZSBleHBlY3RlZCBkYXRhIHR5cGUgaXMgXCJqc29ucFwiIG9yIHdlIGhhdmUgYSBwYXJhbWV0ZXIgdG8gc2V0XG5cdGlmICgganNvblByb3AgfHwgcy5kYXRhVHlwZXNbIDAgXSA9PT0gXCJqc29ucFwiICkge1xuXG5cdFx0Ly8gR2V0IGNhbGxiYWNrIG5hbWUsIHJlbWVtYmVyaW5nIHByZWV4aXN0aW5nIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCBpdFxuXHRcdGNhbGxiYWNrTmFtZSA9IHMuanNvbnBDYWxsYmFjayA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7XG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XG5cdFx0fSApO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gQXJndW1lbnQgXCJkYXRhXCIgc2hvdWxkIGJlIHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdHZhciBwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKSxcblx0XHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vLyBLZWVwIGEgY29weSBvZiB0aGUgb2xkIGxvYWQgbWV0aG9kXG52YXIgX2xvYWQgPSBqUXVlcnkuZm4ubG9hZDtcblxuLyoqXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXG4gKi9cbmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHtcblx0aWYgKCB0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiICYmIF9sb2FkICkge1xuXHRcdHJldHVybiBfbG9hZC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdH1cblxuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBqUXVlcnkudHJpbSggdXJsLnNsaWNlKCBvZmYgKSApO1xuXHRcdHVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7XG5cdH1cblxuXHQvLyBJZiBpdCdzIGEgZnVuY3Rpb25cblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcGFyYW1zICkgKSB7XG5cblx0XHQvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFja1xuXHRcdGNhbGxiYWNrID0gcGFyYW1zO1xuXHRcdHBhcmFtcyA9IHVuZGVmaW5lZDtcblxuXHQvLyBPdGhlcndpc2UsIGJ1aWxkIGEgcGFyYW0gc3RyaW5nXG5cdH0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSBcIm9iamVjdFwiICkge1xuXHRcdHR5cGUgPSBcIlBPU1RcIjtcblx0fVxuXG5cdC8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0XG5cdGlmICggc2VsZi5sZW5ndGggPiAwICkge1xuXHRcdGpRdWVyeS5hamF4KCB7XG5cdFx0XHR1cmw6IHVybCxcblxuXHRcdFx0Ly8gSWYgXCJ0eXBlXCIgdmFyaWFibGUgaXMgdW5kZWZpbmVkLCB0aGVuIFwiR0VUXCIgbWV0aG9kIHdpbGwgYmUgdXNlZC5cblx0XHRcdC8vIE1ha2UgdmFsdWUgb2YgdGhpcyBmaWVsZCBleHBsaWNpdCBzaW5jZVxuXHRcdFx0Ly8gdXNlciBjYW4gb3ZlcnJpZGUgaXQgdGhyb3VnaCBhamF4U2V0dXAgbWV0aG9kXG5cdFx0XHR0eXBlOiB0eXBlIHx8IFwiR0VUXCIsXG5cdFx0XHRkYXRhVHlwZTogXCJodG1sXCIsXG5cdFx0XHRkYXRhOiBwYXJhbXNcblx0XHR9ICkuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlVGV4dCApIHtcblxuXHRcdFx0Ly8gU2F2ZSByZXNwb25zZSBmb3IgdXNlIGluIGNvbXBsZXRlIGNhbGxiYWNrXG5cdFx0XHRyZXNwb25zZSA9IGFyZ3VtZW50cztcblxuXHRcdFx0c2VsZi5odG1sKCBzZWxlY3RvciA/XG5cblx0XHRcdFx0Ly8gSWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkLCBsb2NhdGUgdGhlIHJpZ2h0IGVsZW1lbnRzIGluIGEgZHVtbXkgZGl2XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgc2NyaXB0cyB0byBhdm9pZCBJRSAnUGVybWlzc2lvbiBEZW5pZWQnIGVycm9yc1xuXHRcdFx0XHRqUXVlcnkoIFwiPGRpdj5cIiApLmFwcGVuZCggalF1ZXJ5LnBhcnNlSFRNTCggcmVzcG9uc2VUZXh0ICkgKS5maW5kKCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgdXNlIHRoZSBmdWxsIHJlc3VsdFxuXHRcdFx0XHRyZXNwb25zZVRleHQgKTtcblxuXHRcdC8vIElmIHRoZSByZXF1ZXN0IHN1Y2NlZWRzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJkYXRhXCIsIFwic3RhdHVzXCIsIFwianFYSFJcIlxuXHRcdC8vIGJ1dCB0aGV5IGFyZSBpZ25vcmVkIGJlY2F1c2UgcmVzcG9uc2Ugd2FzIHNldCBhYm92ZS5cblx0XHQvLyBJZiBpdCBmYWlscywgdGhpcyBmdW5jdGlvbiBnZXRzIFwianFYSFJcIiwgXCJzdGF0dXNcIiwgXCJlcnJvclwiXG5cdFx0fSApLmFsd2F5cyggY2FsbGJhY2sgJiYgZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7XG5cdFx0XHRzZWxmLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRjYWxsYmFjay5hcHBseSggdGhpcywgcmVzcG9uc2UgfHwgWyBqcVhIUi5yZXNwb25zZVRleHQsIHN0YXR1cywganFYSFIgXSApO1xuXHRcdFx0fSApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuXG5cblxuLy8gQXR0YWNoIGEgYnVuY2ggb2YgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBjb21tb24gQUpBWCBldmVudHNcbmpRdWVyeS5lYWNoKCBbXG5cdFwiYWpheFN0YXJ0XCIsXG5cdFwiYWpheFN0b3BcIixcblx0XCJhamF4Q29tcGxldGVcIixcblx0XCJhamF4RXJyb3JcIixcblx0XCJhamF4U3VjY2Vzc1wiLFxuXHRcImFqYXhTZW5kXCJcbl0sIGZ1bmN0aW9uKCBpLCB0eXBlICkge1xuXHRqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZSwgZm4gKTtcblx0fTtcbn0gKTtcblxuXG5cblxualF1ZXJ5LmV4cHIuZmlsdGVycy5hbmltYXRlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTtcblx0fSApLmxlbmd0aDtcbn07XG5cblxuXG5cbi8qKlxuICogR2V0cyBhIHdpbmRvdyBmcm9tIGFuIGVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gZ2V0V2luZG93KCBlbGVtICkge1xuXHRyZXR1cm4galF1ZXJ5LmlzV2luZG93KCBlbGVtICkgPyBlbGVtIDogZWxlbS5ub2RlVHlwZSA9PT0gOSAmJiBlbGVtLmRlZmF1bHRWaWV3O1xufVxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XG5cblx0XHRcdC8vIFVzZSBqUXVlcnkuZXh0ZW5kIGhlcmUgdG8gYWxsb3cgbW9kaWZpY2F0aW9uIG9mIGNvb3JkaW5hdGVzIGFyZ3VtZW50IChnaC0xODQ4KVxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xuXHRcdH1cblxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgZG9jRWxlbSwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdGJveCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH0sXG5cdFx0XHRkb2MgPSBlbGVtICYmIGVsZW0ub3duZXJEb2N1bWVudDtcblxuXHRcdGlmICggIWRvYyApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRkb2NFbGVtID0gZG9jLmRvY3VtZW50RWxlbWVudDtcblxuXHRcdC8vIE1ha2Ugc3VyZSBpdCdzIG5vdCBhIGRpc2Nvbm5lY3RlZCBET00gbm9kZVxuXHRcdGlmICggIWpRdWVyeS5jb250YWlucyggZG9jRWxlbSwgZWxlbSApICkge1xuXHRcdFx0cmV0dXJuIGJveDtcblx0XHR9XG5cblx0XHRib3ggPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdHdpbiA9IGdldFdpbmRvdyggZG9jICk7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogYm94LnRvcCArIHdpbi5wYWdlWU9mZnNldCAtIGRvY0VsZW0uY2xpZW50VG9wLFxuXHRcdFx0bGVmdDogYm94LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXQgLSBkb2NFbGVtLmNsaWVudExlZnRcblx0XHR9O1xuXHR9LFxuXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICF0aGlzWyAwIF0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFyIG9mZnNldFBhcmVudCwgb2Zmc2V0LFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBGaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gd2luZG93IChwYXJlbnRPZmZzZXQgPSB7dG9wOjAsIGxlZnQ6IDB9LFxuXHRcdC8vIGJlY2F1c2UgaXQgaXMgaXRzIG9ubHkgb2Zmc2V0IHBhcmVudFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBpcyB0aGVyZSB3aGVuIGNvbXB1dGVkIHBvc2l0aW9uIGlzIGZpeGVkXG5cdFx0XHRvZmZzZXQgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gR2V0ICpyZWFsKiBvZmZzZXRQYXJlbnRcblx0XHRcdG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50KCk7XG5cblx0XHRcdC8vIEdldCBjb3JyZWN0IG9mZnNldHNcblx0XHRcdG9mZnNldCA9IHRoaXMub2Zmc2V0KCk7XG5cdFx0XHRpZiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudFsgMCBdLCBcImh0bWxcIiApICkge1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0KCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvZmZzZXRQYXJlbnQgYm9yZGVyc1xuXHRcdFx0cGFyZW50T2Zmc2V0LnRvcCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRwYXJlbnRPZmZzZXQubGVmdCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXHRcdFx0dmFyIHdpbiA9IGdldFdpbmRvdyggZWxlbSApO1xuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmk8Ny04KywgQ2hyb21lPDM3LTQ0K1xuLy8gQWRkIHRoZSB0b3AvbGVmdCBjc3NIb29rcyB1c2luZyBqUXVlcnkuZm4ucG9zaXRpb25cbi8vIFdlYmtpdCBidWc6IGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yOTA4NFxuLy8gQmxpbmsgYnVnOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9MjI5MjgwXG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBpLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0XHRcdC8vIEFzIG9mIDUvOC8yMDEyIHRoaXMgd2lsbCB5aWVsZCBpbmNvcnJlY3QgcmVzdWx0cyBmb3IgTW9iaWxlIFNhZmFyaSwgYnV0IHRoZXJlXG5cdFx0XHRcdFx0Ly8gaXNuJ3QgYSB3aG9sZSBsb3Qgd2UgY2FuIGRvLiBTZWUgcHVsbCByZXF1ZXN0IGF0IHRoaXMgVVJMIGZvciBkaXNjdXNzaW9uOlxuXHRcdFx0XHRcdC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNzY0XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlLCBudWxsICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH0sXG5cdHNpemU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmxlbmd0aDtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uYW5kU2VsZiA9IGpRdWVyeS5mbi5hZGRCYWNrO1xuXG5cblxuXG4vLyBSZWdpc3RlciBhcyBhIG5hbWVkIEFNRCBtb2R1bGUsIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXJcbi8vIGZpbGVzIHRoYXQgbWF5IHVzZSBkZWZpbmUsIGJ1dCBub3QgdmlhIGEgcHJvcGVyIGNvbmNhdGVuYXRpb24gc2NyaXB0IHRoYXRcbi8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdFxuLy8gd2F5IHRvIHJlZ2lzdGVyLiBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZVxuLy8gZGVyaXZlZCBmcm9tIGZpbGUgbmFtZXMsIGFuZCBqUXVlcnkgaXMgbm9ybWFsbHkgZGVsaXZlcmVkIGluIGEgbG93ZXJjYXNlXG4vLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHNcbi8vIHRvIGNhbGwgbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay5cblxuLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGRcbi8vIGRlY2xhcmUgdGhlbXNlbHZlcyBhcyBhbm9ueW1vdXMgbW9kdWxlcywgYW5kIGF2b2lkIHNldHRpbmcgYSBnbG9iYWwgaWYgYW5cbi8vIEFNRCBsb2FkZXIgaXMgcHJlc2VudC4galF1ZXJ5IGlzIGEgc3BlY2lhbCBjYXNlLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uXG5cbmlmICggdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQgKSB7XG5cdGRlZmluZSggXCJqcXVlcnlcIiwgW10sIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnk7XG5cdH0gKTtcbn1cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cbnJldHVybiBqUXVlcnk7XG59KSk7XG4hZnVuY3Rpb24odCxlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKHJlcXVpcmUoXCJqcXVlcnlcIikpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXCJqcXVlcnlcIl0sZSk7ZWxzZXt2YXIgbj1cIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9lKHJlcXVpcmUoXCJqcXVlcnlcIikpOmUodC5qUXVlcnkpO2Zvcih2YXIgaSBpbiBuKShcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzOnQpW2ldPW5baV19fSh3aW5kb3csZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBpPXt9O2Z1bmN0aW9uIG8odCl7aWYoaVt0XSlyZXR1cm4gaVt0XS5leHBvcnRzO3ZhciBlPWlbdF09e2k6dCxsOiExLGV4cG9ydHM6e319O3JldHVybiBuW3RdLmNhbGwoZS5leHBvcnRzLGUsZS5leHBvcnRzLG8pLGUubD0hMCxlLmV4cG9ydHN9cmV0dXJuIG8ubT1uLG8uYz1pLG8uZD1mdW5jdGlvbih0LGUsbil7by5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Om59KX0sby5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG8udD1mdW5jdGlvbihlLHQpe2lmKDEmdCYmKGU9byhlKSksOCZ0KXJldHVybiBlO2lmKDQmdCYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgbj1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG8ucihuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobixcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTplfSksMiZ0JiZcInN0cmluZ1wiIT10eXBlb2YgZSlmb3IodmFyIGkgaW4gZSlvLmQobixpLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfS5iaW5kKG51bGwsaSkpO3JldHVybiBufSxvLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG8uZChlLFwiYVwiLGUpLGV9LG8ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sby5wPVwiXCIsbyhvLnM9MCl9KHtcIi4vanMvZW50cmllcy9mb3VuZGF0aW9uLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKTt2YXIgaT1uKFwianF1ZXJ5XCIpLG89bi5uKGkpLHM9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLmpzXCIpO24uZChlLFwiRm91bmRhdGlvblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHMuRm91bmRhdGlvbn0pO3ZhciBhPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKTtuLmQoZSxcIkNvcmVVdGlsc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGF9KTt2YXIgcj1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuYm94LmpzXCIpO24uZChlLFwiQm94XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5Cb3h9KTt2YXIgbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuaW1hZ2VMb2FkZXIuanNcIik7bi5kKGUsXCJvbkltYWdlc0xvYWRlZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGwub25JbWFnZXNMb2FkZWR9KTt2YXIgdT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwua2V5Ym9hcmQuanNcIik7bi5kKGUsXCJLZXlib2FyZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHUuS2V5Ym9hcmR9KTt2YXIgYz1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubWVkaWFRdWVyeS5qc1wiKTtuLmQoZSxcIk1lZGlhUXVlcnlcIixmdW5jdGlvbigpe3JldHVybiBjLk1lZGlhUXVlcnl9KTt2YXIgZD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubW90aW9uLmpzXCIpO24uZChlLFwiTW90aW9uXCIsZnVuY3Rpb24oKXtyZXR1cm4gZC5Nb3Rpb259KTt2YXIgaD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubmVzdC5qc1wiKTtuLmQoZSxcIk5lc3RcIixmdW5jdGlvbigpe3JldHVybiBoLk5lc3R9KTt2YXIgZj1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudGltZXIuanNcIik7bi5kKGUsXCJUaW1lclwiLGZ1bmN0aW9uKCl7cmV0dXJuIGYuVGltZXJ9KTt2YXIgcD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudG91Y2guanNcIik7bi5kKGUsXCJUb3VjaFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHAuVG91Y2h9KTt2YXIgbT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudHJpZ2dlcnMuanNcIik7bi5kKGUsXCJUcmlnZ2Vyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIG0uVHJpZ2dlcnN9KTt2YXIgZz1uKFwiLi9qcy9mb3VuZGF0aW9uLmFiaWRlLmpzXCIpO24uZChlLFwiQWJpZGVcIixmdW5jdGlvbigpe3JldHVybiBnLkFiaWRlfSk7dmFyIHY9bihcIi4vanMvZm91bmRhdGlvbi5hY2NvcmRpb24uanNcIik7bi5kKGUsXCJBY2NvcmRpb25cIixmdW5jdGlvbigpe3JldHVybiB2LkFjY29yZGlvbn0pO3ZhciB5PW4oXCIuL2pzL2ZvdW5kYXRpb24uYWNjb3JkaW9uTWVudS5qc1wiKTtuLmQoZSxcIkFjY29yZGlvbk1lbnVcIixmdW5jdGlvbigpe3JldHVybiB5LkFjY29yZGlvbk1lbnV9KTt2YXIgYj1uKFwiLi9qcy9mb3VuZGF0aW9uLmRyaWxsZG93bi5qc1wiKTtuLmQoZSxcIkRyaWxsZG93blwiLGZ1bmN0aW9uKCl7cmV0dXJuIGIuRHJpbGxkb3dufSk7dmFyIHc9bihcIi4vanMvZm91bmRhdGlvbi5kcm9wZG93bi5qc1wiKTtuLmQoZSxcIkRyb3Bkb3duXCIsZnVuY3Rpb24oKXtyZXR1cm4gdy5Ecm9wZG93bn0pO3ZhciBfPW4oXCIuL2pzL2ZvdW5kYXRpb24uZHJvcGRvd25NZW51LmpzXCIpO24uZChlLFwiRHJvcGRvd25NZW51XCIsZnVuY3Rpb24oKXtyZXR1cm4gXy5Ecm9wZG93bk1lbnV9KTt2YXIgJD1uKFwiLi9qcy9mb3VuZGF0aW9uLmVxdWFsaXplci5qc1wiKTtuLmQoZSxcIkVxdWFsaXplclwiLGZ1bmN0aW9uKCl7cmV0dXJuICQuRXF1YWxpemVyfSk7dmFyIGo9bihcIi4vanMvZm91bmRhdGlvbi5pbnRlcmNoYW5nZS5qc1wiKTtuLmQoZSxcIkludGVyY2hhbmdlXCIsZnVuY3Rpb24oKXtyZXR1cm4gai5JbnRlcmNoYW5nZX0pO3ZhciBrPW4oXCIuL2pzL2ZvdW5kYXRpb24ubWFnZWxsYW4uanNcIik7bi5kKGUsXCJNYWdlbGxhblwiLGZ1bmN0aW9uKCl7cmV0dXJuIGsuTWFnZWxsYW59KTt2YXIgTz1uKFwiLi9qcy9mb3VuZGF0aW9uLm9mZmNhbnZhcy5qc1wiKTtuLmQoZSxcIk9mZkNhbnZhc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIE8uT2ZmQ2FudmFzfSk7dmFyIEM9bihcIi4vanMvZm91bmRhdGlvbi5vcmJpdC5qc1wiKTtuLmQoZSxcIk9yYml0XCIsZnVuY3Rpb24oKXtyZXR1cm4gQy5PcmJpdH0pO3ZhciB6PW4oXCIuL2pzL2ZvdW5kYXRpb24ucmVzcG9uc2l2ZU1lbnUuanNcIik7bi5kKGUsXCJSZXNwb25zaXZlTWVudVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHouUmVzcG9uc2l2ZU1lbnV9KTt2YXIgVD1uKFwiLi9qcy9mb3VuZGF0aW9uLnJlc3BvbnNpdmVUb2dnbGUuanNcIik7bi5kKGUsXCJSZXNwb25zaXZlVG9nZ2xlXCIsZnVuY3Rpb24oKXtyZXR1cm4gVC5SZXNwb25zaXZlVG9nZ2xlfSk7dmFyIFM9bihcIi4vanMvZm91bmRhdGlvbi5yZXZlYWwuanNcIik7bi5kKGUsXCJSZXZlYWxcIixmdW5jdGlvbigpe3JldHVybiBTLlJldmVhbH0pO3ZhciBQPW4oXCIuL2pzL2ZvdW5kYXRpb24uc2xpZGVyLmpzXCIpO24uZChlLFwiU2xpZGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gUC5TbGlkZXJ9KTt2YXIgRT1uKFwiLi9qcy9mb3VuZGF0aW9uLnNtb290aFNjcm9sbC5qc1wiKTtuLmQoZSxcIlNtb290aFNjcm9sbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEUuU21vb3RoU2Nyb2xsfSk7dmFyIEE9bihcIi4vanMvZm91bmRhdGlvbi5zdGlja3kuanNcIik7bi5kKGUsXCJTdGlja3lcIixmdW5jdGlvbigpe3JldHVybiBBLlN0aWNreX0pO3ZhciB4PW4oXCIuL2pzL2ZvdW5kYXRpb24udGFicy5qc1wiKTtuLmQoZSxcIlRhYnNcIixmdW5jdGlvbigpe3JldHVybiB4LlRhYnN9KTt2YXIgTD1uKFwiLi9qcy9mb3VuZGF0aW9uLnRvZ2dsZXIuanNcIik7bi5kKGUsXCJUb2dnbGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gTC5Ub2dnbGVyfSk7dmFyIFI9bihcIi4vanMvZm91bmRhdGlvbi50b29sdGlwLmpzXCIpO24uZChlLFwiVG9vbHRpcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFIuVG9vbHRpcH0pO3ZhciBNPW4oXCIuL2pzL2ZvdW5kYXRpb24ucmVzcG9uc2l2ZUFjY29yZGlvblRhYnMuanNcIik7bi5kKGUsXCJSZXNwb25zaXZlQWNjb3JkaW9uVGFic1wiLGZ1bmN0aW9uKCl7cmV0dXJuIE0uUmVzcG9uc2l2ZUFjY29yZGlvblRhYnN9KSxzLkZvdW5kYXRpb24uYWRkVG9KcXVlcnkoby5hKSxzLkZvdW5kYXRpb24ucnRsPWEucnRsLHMuRm91bmRhdGlvbi5HZXRZb0RpZ2l0cz1hLkdldFlvRGlnaXRzLHMuRm91bmRhdGlvbi50cmFuc2l0aW9uZW5kPWEudHJhbnNpdGlvbmVuZCxzLkZvdW5kYXRpb24uUmVnRXhwRXNjYXBlPWEuUmVnRXhwRXNjYXBlLHMuRm91bmRhdGlvbi5vbkxvYWQ9YS5vbkxvYWQscy5Gb3VuZGF0aW9uLkJveD1yLkJveCxzLkZvdW5kYXRpb24ub25JbWFnZXNMb2FkZWQ9bC5vbkltYWdlc0xvYWRlZCxzLkZvdW5kYXRpb24uS2V5Ym9hcmQ9dS5LZXlib2FyZCxzLkZvdW5kYXRpb24uTWVkaWFRdWVyeT1jLk1lZGlhUXVlcnkscy5Gb3VuZGF0aW9uLk1vdGlvbj1kLk1vdGlvbixzLkZvdW5kYXRpb24uTW92ZT1kLk1vdmUscy5Gb3VuZGF0aW9uLk5lc3Q9aC5OZXN0LHMuRm91bmRhdGlvbi5UaW1lcj1mLlRpbWVyLHAuVG91Y2guaW5pdChvLmEpLG0uVHJpZ2dlcnMuaW5pdChvLmEscy5Gb3VuZGF0aW9uKSxjLk1lZGlhUXVlcnkuX2luaXQoKSxzLkZvdW5kYXRpb24ucGx1Z2luKGcuQWJpZGUsXCJBYmlkZVwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKHYuQWNjb3JkaW9uLFwiQWNjb3JkaW9uXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oeS5BY2NvcmRpb25NZW51LFwiQWNjb3JkaW9uTWVudVwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKGIuRHJpbGxkb3duLFwiRHJpbGxkb3duXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4ody5Ecm9wZG93bixcIkRyb3Bkb3duXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oXy5Ecm9wZG93bk1lbnUsXCJEcm9wZG93bk1lbnVcIikscy5Gb3VuZGF0aW9uLnBsdWdpbigkLkVxdWFsaXplcixcIkVxdWFsaXplclwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKGouSW50ZXJjaGFuZ2UsXCJJbnRlcmNoYW5nZVwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKGsuTWFnZWxsYW4sXCJNYWdlbGxhblwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKE8uT2ZmQ2FudmFzLFwiT2ZmQ2FudmFzXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oQy5PcmJpdCxcIk9yYml0XCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oei5SZXNwb25zaXZlTWVudSxcIlJlc3BvbnNpdmVNZW51XCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oVC5SZXNwb25zaXZlVG9nZ2xlLFwiUmVzcG9uc2l2ZVRvZ2dsZVwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKFMuUmV2ZWFsLFwiUmV2ZWFsXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oUC5TbGlkZXIsXCJTbGlkZXJcIikscy5Gb3VuZGF0aW9uLnBsdWdpbihFLlNtb290aFNjcm9sbCxcIlNtb290aFNjcm9sbFwiKSxzLkZvdW5kYXRpb24ucGx1Z2luKEEuU3RpY2t5LFwiU3RpY2t5XCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oeC5UYWJzLFwiVGFic1wiKSxzLkZvdW5kYXRpb24ucGx1Z2luKEwuVG9nZ2xlcixcIlRvZ2dsZXJcIikscy5Gb3VuZGF0aW9uLnBsdWdpbihSLlRvb2x0aXAsXCJUb29sdGlwXCIpLHMuRm91bmRhdGlvbi5wbHVnaW4oTS5SZXNwb25zaXZlQWNjb3JkaW9uVGFicyxcIlJlc3BvbnNpdmVBY2NvcmRpb25UYWJzXCIpLGUuZGVmYXVsdD1zLkZvdW5kYXRpb259LFwiLi9qcy9mb3VuZGF0aW9uLmFiaWRlLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIkFiaWRlXCIsZnVuY3Rpb24oKXtyZXR1cm4gaH0pO3ZhciBpPW4oXCJqcXVlcnlcIiksYz1uLm4oaSkscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLGE9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIHIodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGwodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gdSh0KXtyZXR1cm4odT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZCh0LGUpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgaD1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxsKHRoaXMsdShuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmQodCxlKX0obixzW1wiUGx1Z2luXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307dGhpcy4kZWxlbWVudD10LHRoaXMub3B0aW9ucz1jLmEuZXh0ZW5kKCEwLHt9LG4uZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksZSksdGhpcy5jbGFzc05hbWU9XCJBYmlkZVwiLHRoaXMuX2luaXQoKX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLiRpbnB1dHM9Yy5hLm1lcmdlKHRoaXMuJGVsZW1lbnQuZmluZChcImlucHV0XCIpLm5vdChcIlt0eXBlPXN1Ym1pdF1cIiksdGhpcy4kZWxlbWVudC5maW5kKFwidGV4dGFyZWEsIHNlbGVjdFwiKSk7dmFyIHQ9dGhpcy4kZWxlbWVudC5maW5kKFwiW2RhdGEtYWJpZGUtZXJyb3JdXCIpO3RoaXMub3B0aW9ucy5hMTF5QXR0cmlidXRlcyYmKHRoaXMuJGlucHV0cy5lYWNoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4uYWRkQTExeUF0dHJpYnV0ZXMoYygpKGUpKX0pLHQuZWFjaChmdW5jdGlvbih0LGUpe3JldHVybiBuLmFkZEdsb2JhbEVycm9yQTExeUF0dHJpYnV0ZXMoYygpKGUpKX0pKSx0aGlzLl9ldmVudHMoKX19LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuJGVsZW1lbnQub2ZmKFwiLmFiaWRlXCIpLm9uKFwicmVzZXQuemYuYWJpZGVcIixmdW5jdGlvbigpe2UucmVzZXRGb3JtKCl9KS5vbihcInN1Ym1pdC56Zi5hYmlkZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGUudmFsaWRhdGVGb3JtKCl9KSxcImZpZWxkQ2hhbmdlXCI9PT10aGlzLm9wdGlvbnMudmFsaWRhdGVPbiYmdGhpcy4kaW5wdXRzLm9mZihcImNoYW5nZS56Zi5hYmlkZVwiKS5vbihcImNoYW5nZS56Zi5hYmlkZVwiLGZ1bmN0aW9uKHQpe2UudmFsaWRhdGVJbnB1dChjKCkodC50YXJnZXQpKX0pLHRoaXMub3B0aW9ucy5saXZlVmFsaWRhdGUmJnRoaXMuJGlucHV0cy5vZmYoXCJpbnB1dC56Zi5hYmlkZVwiKS5vbihcImlucHV0LnpmLmFiaWRlXCIsZnVuY3Rpb24odCl7ZS52YWxpZGF0ZUlucHV0KGMoKSh0LnRhcmdldCkpfSksdGhpcy5vcHRpb25zLnZhbGlkYXRlT25CbHVyJiZ0aGlzLiRpbnB1dHMub2ZmKFwiYmx1ci56Zi5hYmlkZVwiKS5vbihcImJsdXIuemYuYWJpZGVcIixmdW5jdGlvbih0KXtlLnZhbGlkYXRlSW5wdXQoYygpKHQudGFyZ2V0KSl9KX19LHtrZXk6XCJfcmVmbG93XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9pbml0KCl9fSx7a2V5OlwicmVxdWlyZWRDaGVja1wiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKCF0LmF0dHIoXCJyZXF1aXJlZFwiKSlyZXR1cm4hMDt2YXIgZT0hMDtzd2l0Y2godFswXS50eXBlKXtjYXNlXCJjaGVja2JveFwiOmU9dFswXS5jaGVja2VkO2JyZWFrO2Nhc2VcInNlbGVjdFwiOmNhc2VcInNlbGVjdC1vbmVcIjpjYXNlXCJzZWxlY3QtbXVsdGlwbGVcIjp2YXIgbj10LmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIik7bi5sZW5ndGgmJm4udmFsKCl8fChlPSExKTticmVhaztkZWZhdWx0OnQudmFsKCkmJnQudmFsKCkubGVuZ3RofHwoZT0hMSl9cmV0dXJuIGV9fSx7a2V5OlwiZmluZEZvcm1FcnJvclwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRbMF0uaWQsbj10LnNpYmxpbmdzKHRoaXMub3B0aW9ucy5mb3JtRXJyb3JTZWxlY3Rvcik7cmV0dXJuIG4ubGVuZ3RofHwobj10LnBhcmVudCgpLmZpbmQodGhpcy5vcHRpb25zLmZvcm1FcnJvclNlbGVjdG9yKSksZSYmKG49bi5hZGQodGhpcy4kZWxlbWVudC5maW5kKCdbZGF0YS1mb3JtLWVycm9yLWZvcj1cIicuY29uY2F0KGUsJ1wiXScpKSkpLG59fSx7a2V5OlwiZmluZExhYmVsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dFswXS5pZCxuPXRoaXMuJGVsZW1lbnQuZmluZCgnbGFiZWxbZm9yPVwiJy5jb25jYXQoZSwnXCJdJykpO3JldHVybiBuLmxlbmd0aD9uOnQuY2xvc2VzdChcImxhYmVsXCIpfX0se2tleTpcImZpbmRSYWRpb0xhYmVsc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMsZT10Lm1hcChmdW5jdGlvbih0LGUpe3ZhciBuPWUuaWQsaT1vLiRlbGVtZW50LmZpbmQoJ2xhYmVsW2Zvcj1cIicuY29uY2F0KG4sJ1wiXScpKTtyZXR1cm4gaS5sZW5ndGh8fChpPWMoKShlKS5jbG9zZXN0KFwibGFiZWxcIikpLGlbMF19KTtyZXR1cm4gYygpKGUpfX0se2tleTpcImFkZEVycm9yQ2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZmluZExhYmVsKHQpLG49dGhpcy5maW5kRm9ybUVycm9yKHQpO2UubGVuZ3RoJiZlLmFkZENsYXNzKHRoaXMub3B0aW9ucy5sYWJlbEVycm9yQ2xhc3MpLG4ubGVuZ3RoJiZuLmFkZENsYXNzKHRoaXMub3B0aW9ucy5mb3JtRXJyb3JDbGFzcyksdC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuaW5wdXRFcnJvckNsYXNzKS5hdHRyKHtcImRhdGEtaW52YWxpZFwiOlwiXCIsXCJhcmlhLWludmFsaWRcIjohMH0pfX0se2tleTpcImFkZEExMXlBdHRyaWJ1dGVzXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5maW5kRm9ybUVycm9yKHQpLG49ZS5maWx0ZXIoXCJsYWJlbFwiKSxpPWUuZmlyc3QoKTtpZihlLmxlbmd0aCl7aWYodm9pZCAwPT09dC5hdHRyKFwiYXJpYS1kZXNjcmliZWRieVwiKSl7dmFyIG89aS5hdHRyKFwiaWRcIik7dm9pZCAwPT09byYmKG89T2JqZWN0KGEuR2V0WW9EaWdpdHMpKDYsXCJhYmlkZS1lcnJvclwiKSxpLmF0dHIoXCJpZFwiLG8pKSx0LmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIsbyl9aWYobi5maWx0ZXIoXCJbZm9yXVwiKS5sZW5ndGg8bi5sZW5ndGgpe3ZhciBzPXQuYXR0cihcImlkXCIpO3ZvaWQgMD09PXMmJihzPU9iamVjdChhLkdldFlvRGlnaXRzKSg2LFwiYWJpZGUtaW5wdXRcIiksdC5hdHRyKFwiaWRcIixzKSksbi5lYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIG49YygpKGUpO3ZvaWQgMD09PW4uYXR0cihcImZvclwiKSYmbi5hdHRyKFwiZm9yXCIscyl9KX1lLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1jKCkoZSk7dm9pZCAwPT09bi5hdHRyKFwicm9sZVwiKSYmbi5hdHRyKFwicm9sZVwiLFwiYWxlcnRcIil9KS5lbmQoKX19fSx7a2V5OlwiYWRkR2xvYmFsRXJyb3JBMTF5QXR0cmlidXRlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQuYXR0cihcImFyaWEtbGl2ZVwiKSYmdC5hdHRyKFwiYXJpYS1saXZlXCIsdGhpcy5vcHRpb25zLmExMXlFcnJvckxldmVsKX19LHtrZXk6XCJyZW1vdmVSYWRpb0Vycm9yQ2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuJGVsZW1lbnQuZmluZCgnOnJhZGlvW25hbWU9XCInLmNvbmNhdCh0LCdcIl0nKSksbj10aGlzLmZpbmRSYWRpb0xhYmVscyhlKSxpPXRoaXMuZmluZEZvcm1FcnJvcihlKTtuLmxlbmd0aCYmbi5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMubGFiZWxFcnJvckNsYXNzKSxpLmxlbmd0aCYmaS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuZm9ybUVycm9yQ2xhc3MpLGUucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmlucHV0RXJyb3JDbGFzcykuYXR0cih7XCJkYXRhLWludmFsaWRcIjpudWxsLFwiYXJpYS1pbnZhbGlkXCI6bnVsbH0pfX0se2tleTpcInJlbW92ZUVycm9yQ2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKFwicmFkaW9cIj09dFswXS50eXBlKXJldHVybiB0aGlzLnJlbW92ZVJhZGlvRXJyb3JDbGFzc2VzKHQuYXR0cihcIm5hbWVcIikpO3ZhciBlPXRoaXMuZmluZExhYmVsKHQpLG49dGhpcy5maW5kRm9ybUVycm9yKHQpO2UubGVuZ3RoJiZlLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5sYWJlbEVycm9yQ2xhc3MpLG4ubGVuZ3RoJiZuLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5mb3JtRXJyb3JDbGFzcyksdC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuaW5wdXRFcnJvckNsYXNzKS5hdHRyKHtcImRhdGEtaW52YWxpZFwiOm51bGwsXCJhcmlhLWludmFsaWRcIjpudWxsfSl9fSx7a2V5OlwidmFsaWRhdGVJbnB1dFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucmVxdWlyZWRDaGVjayh0KSxuPSExLGk9ITAsbz10LmF0dHIoXCJkYXRhLXZhbGlkYXRvclwiKSxzPSEwO2lmKHQuaXMoXCJbZGF0YS1hYmlkZS1pZ25vcmVdXCIpfHx0LmlzKCdbdHlwZT1cImhpZGRlblwiXScpfHx0LmlzKFwiW2Rpc2FibGVkXVwiKSlyZXR1cm4hMDtzd2l0Y2godFswXS50eXBlKXtjYXNlXCJyYWRpb1wiOm49dGhpcy52YWxpZGF0ZVJhZGlvKHQuYXR0cihcIm5hbWVcIikpO2JyZWFrO2Nhc2VcImNoZWNrYm94XCI6bj1lO2JyZWFrO2Nhc2VcInNlbGVjdFwiOmNhc2VcInNlbGVjdC1vbmVcIjpjYXNlXCJzZWxlY3QtbXVsdGlwbGVcIjpuPWU7YnJlYWs7ZGVmYXVsdDpuPXRoaXMudmFsaWRhdGVUZXh0KHQpfW8mJihpPXRoaXMubWF0Y2hWYWxpZGF0aW9uKHQsbyx0LmF0dHIoXCJyZXF1aXJlZFwiKSkpLHQuYXR0cihcImRhdGEtZXF1YWx0b1wiKSYmKHM9dGhpcy5vcHRpb25zLnZhbGlkYXRvcnMuZXF1YWxUbyh0KSk7dmFyIGE9LTE9PT1bZSxuLGksc10uaW5kZXhPZighMSkscj0oYT9cInZhbGlkXCI6XCJpbnZhbGlkXCIpK1wiLnpmLmFiaWRlXCI7aWYoYSl7dmFyIGw9dGhpcy4kZWxlbWVudC5maW5kKCdbZGF0YS1lcXVhbHRvPVwiJy5jb25jYXQodC5hdHRyKFwiaWRcIiksJ1wiXScpKTtpZihsLmxlbmd0aCl7dmFyIHU9dGhpcztsLmVhY2goZnVuY3Rpb24oKXtjKCkodGhpcykudmFsKCkmJnUudmFsaWRhdGVJbnB1dChjKCkodGhpcykpfSl9fXJldHVybiB0aGlzW2E/XCJyZW1vdmVFcnJvckNsYXNzZXNcIjpcImFkZEVycm9yQ2xhc3Nlc1wiXSh0KSx0LnRyaWdnZXIocixbdF0pLGF9fSx7a2V5OlwidmFsaWRhdGVGb3JtXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgaT10aGlzLHQ9W10sZT10aGlzO3RoaXMuJGlucHV0cy5lYWNoKGZ1bmN0aW9uKCl7dC5wdXNoKGUudmFsaWRhdGVJbnB1dChjKCkodGhpcykpKX0pO3ZhciBvPS0xPT09dC5pbmRleE9mKCExKTtyZXR1cm4gdGhpcy4kZWxlbWVudC5maW5kKFwiW2RhdGEtYWJpZGUtZXJyb3JdXCIpLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1jKCkoZSk7aS5vcHRpb25zLmExMXlBdHRyaWJ1dGVzJiZpLmFkZEdsb2JhbEVycm9yQTExeUF0dHJpYnV0ZXMobiksbi5jc3MoXCJkaXNwbGF5XCIsbz9cIm5vbmVcIjpcImJsb2NrXCIpfSksdGhpcy4kZWxlbWVudC50cmlnZ2VyKChvP1wiZm9ybXZhbGlkXCI6XCJmb3JtaW52YWxpZFwiKStcIi56Zi5hYmlkZVwiLFt0aGlzLiRlbGVtZW50XSksb319LHtrZXk6XCJ2YWxpZGF0ZVRleHRcIix2YWx1ZTpmdW5jdGlvbih0LGUpe2U9ZXx8dC5hdHRyKFwicGF0dGVyblwiKXx8dC5hdHRyKFwidHlwZVwiKTt2YXIgbj10LnZhbCgpLGk9ITE7cmV0dXJuIG4ubGVuZ3RoP2k9dGhpcy5vcHRpb25zLnBhdHRlcm5zLmhhc093blByb3BlcnR5KGUpP3RoaXMub3B0aW9ucy5wYXR0ZXJuc1tlXS50ZXN0KG4pOmU9PT10LmF0dHIoXCJ0eXBlXCIpfHxuZXcgUmVnRXhwKGUpLnRlc3Qobik6dC5wcm9wKFwicmVxdWlyZWRcIil8fChpPSEwKSxpfX0se2tleTpcInZhbGlkYXRlUmFkaW9cIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLiRlbGVtZW50LmZpbmQoJzpyYWRpb1tuYW1lPVwiJy5jb25jYXQodCwnXCJdJykpLG49ITEsaT0hMTtyZXR1cm4gZS5lYWNoKGZ1bmN0aW9uKHQsZSl7YygpKGUpLmF0dHIoXCJyZXF1aXJlZFwiKSYmKGk9ITApfSksaXx8KG49ITApLG58fGUuZWFjaChmdW5jdGlvbih0LGUpe2MoKShlKS5wcm9wKFwiY2hlY2tlZFwiKSYmKG49ITApfSksbn19LHtrZXk6XCJtYXRjaFZhbGlkYXRpb25cIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcztyZXR1cm4gbj0hIW4sLTE9PT10LnNwbGl0KFwiIFwiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGkub3B0aW9ucy52YWxpZGF0b3JzW3RdKGUsbixlLnBhcmVudCgpKX0pLmluZGV4T2YoITEpfX0se2tleTpcInJlc2V0Rm9ybVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy4kZWxlbWVudCxlPXRoaXMub3B0aW9ucztjKCkoXCIuXCIuY29uY2F0KGUubGFiZWxFcnJvckNsYXNzKSx0KS5ub3QoXCJzbWFsbFwiKS5yZW1vdmVDbGFzcyhlLmxhYmVsRXJyb3JDbGFzcyksYygpKFwiLlwiLmNvbmNhdChlLmlucHV0RXJyb3JDbGFzcyksdCkubm90KFwic21hbGxcIikucmVtb3ZlQ2xhc3MoZS5pbnB1dEVycm9yQ2xhc3MpLGMoKShcIlwiLmNvbmNhdChlLmZvcm1FcnJvclNlbGVjdG9yLFwiLlwiKS5jb25jYXQoZS5mb3JtRXJyb3JDbGFzcykpLnJlbW92ZUNsYXNzKGUuZm9ybUVycm9yQ2xhc3MpLHQuZmluZChcIltkYXRhLWFiaWRlLWVycm9yXVwiKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpLGMoKShcIjppbnB1dFwiLHQpLm5vdChcIjpidXR0b24sIDpzdWJtaXQsIDpyZXNldCwgOmhpZGRlbiwgOnJhZGlvLCA6Y2hlY2tib3gsIFtkYXRhLWFiaWRlLWlnbm9yZV1cIikudmFsKFwiXCIpLmF0dHIoe1wiZGF0YS1pbnZhbGlkXCI6bnVsbCxcImFyaWEtaW52YWxpZFwiOm51bGx9KSxjKCkoXCI6aW5wdXQ6cmFkaW9cIix0KS5ub3QoXCJbZGF0YS1hYmlkZS1pZ25vcmVdXCIpLnByb3AoXCJjaGVja2VkXCIsITEpLmF0dHIoe1wiZGF0YS1pbnZhbGlkXCI6bnVsbCxcImFyaWEtaW52YWxpZFwiOm51bGx9KSxjKCkoXCI6aW5wdXQ6Y2hlY2tib3hcIix0KS5ub3QoXCJbZGF0YS1hYmlkZS1pZ25vcmVdXCIpLnByb3AoXCJjaGVja2VkXCIsITEpLmF0dHIoe1wiZGF0YS1pbnZhbGlkXCI6bnVsbCxcImFyaWEtaW52YWxpZFwiOm51bGx9KSx0LnRyaWdnZXIoXCJmb3JtcmVzZXQuemYuYWJpZGVcIixbdF0pfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJGVsZW1lbnQub2ZmKFwiLmFiaWRlXCIpLmZpbmQoXCJbZGF0YS1hYmlkZS1lcnJvcl1cIikuY3NzKFwiZGlzcGxheVwiLFwibm9uZVwiKSx0aGlzLiRpbnB1dHMub2ZmKFwiLmFiaWRlXCIpLmVhY2goZnVuY3Rpb24oKXt0LnJlbW92ZUVycm9yQ2xhc3NlcyhjKCkodGhpcykpfSl9fV0pJiZyKGUucHJvdG90eXBlLGkpLG8mJnIoZSxvKSxufSgpO2guZGVmYXVsdHM9e3ZhbGlkYXRlT246XCJmaWVsZENoYW5nZVwiLGxhYmVsRXJyb3JDbGFzczpcImlzLWludmFsaWQtbGFiZWxcIixpbnB1dEVycm9yQ2xhc3M6XCJpcy1pbnZhbGlkLWlucHV0XCIsZm9ybUVycm9yU2VsZWN0b3I6XCIuZm9ybS1lcnJvclwiLGZvcm1FcnJvckNsYXNzOlwiaXMtdmlzaWJsZVwiLGExMXlBdHRyaWJ1dGVzOiEwLGExMXlFcnJvckxldmVsOlwiYXNzZXJ0aXZlXCIsbGl2ZVZhbGlkYXRlOiExLHZhbGlkYXRlT25CbHVyOiExLHBhdHRlcm5zOnthbHBoYTovXlthLXpBLVpdKyQvLGFscGhhX251bWVyaWM6L15bYS16QS1aMC05XSskLyxpbnRlZ2VyOi9eWy0rXT9cXGQrJC8sbnVtYmVyOi9eWy0rXT9cXGQqKD86W1xcLlxcLF1cXGQrKT8kLyxjYXJkOi9eKD86NFswLTldezEyfSg/OlswLTldezN9KT98NVsxLTVdWzAtOV17MTR9fCg/OjIyMlsxLTldfDJbMy02XVswLTldezJ9fDI3WzAtMV1bMC05XXwyNzIwKVswLTldezEyfXw2KD86MDExfDVbMC05XVswLTldKVswLTldezEyfXwzWzQ3XVswLTldezEzfXwzKD86MFswLTVdfFs2OF1bMC05XSlbMC05XXsxMX18KD86MjEzMXwxODAwfDM1XFxkezN9KVxcZHsxMX0pJC8sY3Z2Oi9eKFswLTldKXszLDR9JC8sZW1haWw6L15bYS16QS1aMC05LiEjJCUmJyorXFwvPT9eX2B7fH1+LV0rQFthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPyg/OlxcLlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykrJC8sdXJsOi9eKCg/OihodHRwcz98ZnRwcz98ZmlsZXxzc2h8c2Z0cCk6XFwvXFwvfHd3d1xcZHswLDN9Wy5dfFthLXowLTkuXFwtXStbLl1bYS16XXsyLDR9XFwvKSg/OlteXFxzKCk8Pl0rfFxcKCg/OlteXFxzKCk8Pl0rfCg/OlxcKFteXFxzKCk8Pl0rXFwpKSkqXFwpKSsoPzpcXCgoPzpbXlxccygpPD5dK3woPzpcXChbXlxccygpPD5dK1xcKSkpKlxcKXxbXlxcc2AhKClcXFtcXF17fTs6XFwnXCIuLDw+P1xceGFiXFx4YmJcXHUyMDFjXFx1MjAxZFxcdTIwMThcXHUyMDE5XSkpJC8sZG9tYWluOi9eKFthLXpBLVowLTldKFthLXpBLVowLTlcXC1dezAsNjF9W2EtekEtWjAtOV0pP1xcLikrW2EtekEtWl17Miw4fSQvLGRhdGV0aW1lOi9eKFswLTJdWzAtOV17M30pXFwtKFswLTFdWzAtOV0pXFwtKFswLTNdWzAtOV0pVChbMC01XVswLTldKVxcOihbMC01XVswLTldKVxcOihbMC01XVswLTldKShafChbXFwtXFwrXShbMC0xXVswLTldKVxcOjAwKSkkLyxkYXRlOi8oPzoxOXwyMClbMC05XXsyfS0oPzooPzowWzEtOV18MVswLTJdKS0oPzowWzEtOV18MVswLTldfDJbMC05XSl8KD86KD8hMDIpKD86MFsxLTldfDFbMC0yXSktKD86MzApKXwoPzooPzowWzEzNTc4XXwxWzAyXSktMzEpKSQvLHRpbWU6L14oMFswLTldfDFbMC05XXwyWzAtM10pKDpbMC01XVswLTldKXsyfSQvLGRhdGVJU086L15cXGR7NH1bXFwvXFwtXVxcZHsxLDJ9W1xcL1xcLV1cXGR7MSwyfSQvLG1vbnRoX2RheV95ZWFyOi9eKDBbMS05XXwxWzAxMl0pWy0gXFwvLl0oMFsxLTldfFsxMl1bMC05XXwzWzAxXSlbLSBcXC8uXVxcZHs0fSQvLGRheV9tb250aF95ZWFyOi9eKDBbMS05XXxbMTJdWzAtOV18M1swMV0pWy0gXFwvLl0oMFsxLTldfDFbMDEyXSlbLSBcXC8uXVxcZHs0fSQvLGNvbG9yOi9eIz8oW2EtZkEtRjAtOV17Nn18W2EtZkEtRjAtOV17M30pJC8sd2Vic2l0ZTp7dGVzdDpmdW5jdGlvbih0KXtyZXR1cm4gaC5kZWZhdWx0cy5wYXR0ZXJucy5kb21haW4udGVzdCh0KXx8aC5kZWZhdWx0cy5wYXR0ZXJucy51cmwudGVzdCh0KX19fSx2YWxpZGF0b3JzOntlcXVhbFRvOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gYygpKFwiI1wiLmNvbmNhdCh0LmF0dHIoXCJkYXRhLWVxdWFsdG9cIikpKS52YWwoKT09PXQudmFsKCl9fX19LFwiLi9qcy9mb3VuZGF0aW9uLmFjY29yZGlvbi5qc1wiOmZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksbi5kKGUsXCJBY2NvcmRpb25cIixmdW5jdGlvbigpe3JldHVybiBmfSk7dmFyIGk9bihcImpxdWVyeVwiKSxhPW4ubihpKSxyPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxzPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5rZXlib2FyZC5qc1wiKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIik7ZnVuY3Rpb24gbyh0KXtyZXR1cm4obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gdSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gYyh0LGUpe3JldHVybiFlfHxcIm9iamVjdFwiIT09byhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDAhPT10KXJldHVybiB0O3Rocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKX0odCk6ZX1mdW5jdGlvbiBkKHQpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9KSh0KX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuKGg9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9KSh0LGUpfXZhciBmPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLG4pLGModGhpcyxkKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9dmFyIGUsaSxvO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmaCh0LGUpfShuLGxbXCJQbHVnaW5cIl0pLGU9biwoaT1be2tleTpcIl9zZXR1cFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudD10LHRoaXMub3B0aW9ucz1hLmEuZXh0ZW5kKHt9LG4uZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksZSksdGhpcy5jbGFzc05hbWU9XCJBY2NvcmRpb25cIix0aGlzLl9pbml0KCkscy5LZXlib2FyZC5yZWdpc3RlcihcIkFjY29yZGlvblwiLHtFTlRFUjpcInRvZ2dsZVwiLFNQQUNFOlwidG9nZ2xlXCIsQVJST1dfRE9XTjpcIm5leHRcIixBUlJPV19VUDpcInByZXZpb3VzXCJ9KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG89dGhpczt0aGlzLl9pc0luaXRpYWxpemluZz0hMCx0aGlzLiRlbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJ0YWJsaXN0XCIpLHRoaXMuJHRhYnM9dGhpcy4kZWxlbWVudC5jaGlsZHJlbihcIltkYXRhLWFjY29yZGlvbi1pdGVtXVwiKSx0aGlzLiR0YWJzLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1hKCkoZSksaT1uLmNoaWxkcmVuKFwiW2RhdGEtdGFiLWNvbnRlbnRdXCIpLG89aVswXS5pZHx8T2JqZWN0KHIuR2V0WW9EaWdpdHMpKDYsXCJhY2NvcmRpb25cIikscz1lLmlkP1wiXCIuY29uY2F0KGUuaWQsXCItbGFiZWxcIik6XCJcIi5jb25jYXQobyxcIi1sYWJlbFwiKTtuLmZpbmQoXCJhOmZpcnN0XCIpLmF0dHIoe1wiYXJpYS1jb250cm9sc1wiOm8scm9sZTpcInRhYlwiLGlkOnMsXCJhcmlhLWV4cGFuZGVkXCI6ITEsXCJhcmlhLXNlbGVjdGVkXCI6ITF9KSxpLmF0dHIoe3JvbGU6XCJ0YWJwYW5lbFwiLFwiYXJpYS1sYWJlbGxlZGJ5XCI6cyxcImFyaWEtaGlkZGVuXCI6ITAsaWQ6b30pfSk7dmFyIHQ9dGhpcy4kZWxlbWVudC5maW5kKFwiLmlzLWFjdGl2ZVwiKS5jaGlsZHJlbihcIltkYXRhLXRhYi1jb250ZW50XVwiKTt0Lmxlbmd0aCYmKHRoaXMuX2luaXRpYWxBbmNob3I9dC5wcmV2KFwiYVwiKS5hdHRyKFwiaHJlZlwiKSx0aGlzLl9vcGVuU2luZ2xlVGFiKHQpKSx0aGlzLl9jaGVja0RlZXBMaW5rPWZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LmxvY2F0aW9uLmhhc2g7aWYoIXQubGVuZ3RoKXtpZihvLl9pc0luaXRpYWxpemluZylyZXR1cm47by5faW5pdGlhbEFuY2hvciYmKHQ9by5faW5pdGlhbEFuY2hvcil9dmFyIGU9dCYmYSgpKHQpLG49dCYmby4kZWxlbWVudC5maW5kKCdbaHJlZiQ9XCInLmNvbmNhdCh0LCdcIl0nKSksaT0hKCFlLmxlbmd0aHx8IW4ubGVuZ3RoKTtlJiZuJiZuLmxlbmd0aD9uLnBhcmVudChcIltkYXRhLWFjY29yZGlvbi1pdGVtXVwiKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKXx8by5fb3BlblNpbmdsZVRhYihlKTpvLl9jbG9zZUFsbFRhYnMoKSxpJiYoby5vcHRpb25zLmRlZXBMaW5rU211ZGdlJiZPYmplY3Qoci5vbkxvYWQpKGEoKSh3aW5kb3cpLGZ1bmN0aW9uKCl7dmFyIHQ9by4kZWxlbWVudC5vZmZzZXQoKTthKCkoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoe3Njcm9sbFRvcDp0LnRvcH0sby5vcHRpb25zLmRlZXBMaW5rU211ZGdlRGVsYXkpfSksby4kZWxlbWVudC50cmlnZ2VyKFwiZGVlcGxpbmsuemYuYWNjb3JkaW9uXCIsW24sZV0pKX0sdGhpcy5vcHRpb25zLmRlZXBMaW5rJiZ0aGlzLl9jaGVja0RlZXBMaW5rKCksdGhpcy5fZXZlbnRzKCksdGhpcy5faXNJbml0aWFsaXppbmc9ITF9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGk9dGhpczt0aGlzLiR0YWJzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1hKCkodGhpcyksbj1lLmNoaWxkcmVuKFwiW2RhdGEtdGFiLWNvbnRlbnRdXCIpO24ubGVuZ3RoJiZlLmNoaWxkcmVuKFwiYVwiKS5vZmYoXCJjbGljay56Zi5hY2NvcmRpb24ga2V5ZG93bi56Zi5hY2NvcmRpb25cIikub24oXCJjbGljay56Zi5hY2NvcmRpb25cIixmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksaS50b2dnbGUobil9KS5vbihcImtleWRvd24uemYuYWNjb3JkaW9uXCIsZnVuY3Rpb24odCl7cy5LZXlib2FyZC5oYW5kbGVLZXkodCxcIkFjY29yZGlvblwiLHt0b2dnbGU6ZnVuY3Rpb24oKXtpLnRvZ2dsZShuKX0sbmV4dDpmdW5jdGlvbigpe3ZhciB0PWUubmV4dCgpLmZpbmQoXCJhXCIpLmZvY3VzKCk7aS5vcHRpb25zLm11bHRpRXhwYW5kfHx0LnRyaWdnZXIoXCJjbGljay56Zi5hY2NvcmRpb25cIil9LHByZXZpb3VzOmZ1bmN0aW9uKCl7dmFyIHQ9ZS5wcmV2KCkuZmluZChcImFcIikuZm9jdXMoKTtpLm9wdGlvbnMubXVsdGlFeHBhbmR8fHQudHJpZ2dlcihcImNsaWNrLnpmLmFjY29yZGlvblwiKX0saGFuZGxlZDpmdW5jdGlvbigpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpfX0pfSl9KSx0aGlzLm9wdGlvbnMuZGVlcExpbmsmJmEoKSh3aW5kb3cpLm9uKFwiaGFzaGNoYW5nZVwiLHRoaXMuX2NoZWNrRGVlcExpbmspfX0se2tleTpcInRvZ2dsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHQuY2xvc2VzdChcIltkYXRhLWFjY29yZGlvbl1cIikuaXMoXCJbZGlzYWJsZWRdXCIpKWNvbnNvbGUuaW5mbyhcIkNhbm5vdCB0b2dnbGUgYW4gYWNjb3JkaW9uIHRoYXQgaXMgZGlzYWJsZWQuXCIpO2Vsc2UgaWYodC5wYXJlbnQoKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKT90aGlzLnVwKHQpOnRoaXMuZG93bih0KSx0aGlzLm9wdGlvbnMuZGVlcExpbmspe3ZhciBlPXQucHJldihcImFcIikuYXR0cihcImhyZWZcIik7dGhpcy5vcHRpb25zLnVwZGF0ZUhpc3Rvcnk/aGlzdG9yeS5wdXNoU3RhdGUoe30sXCJcIixlKTpoaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSxcIlwiLGUpfX19LHtrZXk6XCJkb3duXCIsdmFsdWU6ZnVuY3Rpb24odCl7dC5jbG9zZXN0KFwiW2RhdGEtYWNjb3JkaW9uXVwiKS5pcyhcIltkaXNhYmxlZF1cIik/Y29uc29sZS5pbmZvKFwiQ2Fubm90IGNhbGwgZG93biBvbiBhbiBhY2NvcmRpb24gdGhhdCBpcyBkaXNhYmxlZC5cIik6dGhpcy5vcHRpb25zLm11bHRpRXhwYW5kP3RoaXMuX29wZW5UYWIodCk6dGhpcy5fb3BlblNpbmdsZVRhYih0KX19LHtrZXk6XCJ1cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHRoaXMuJGVsZW1lbnQuaXMoXCJbZGlzYWJsZWRdXCIpKWNvbnNvbGUuaW5mbyhcIkNhbm5vdCBjYWxsIHVwIG9uIGFuIGFjY29yZGlvbiB0aGF0IGlzIGRpc2FibGVkLlwiKTtlbHNle3ZhciBlPXQucGFyZW50KCk7aWYoZS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSl7dmFyIG49ZS5zaWJsaW5ncygpOyh0aGlzLm9wdGlvbnMuYWxsb3dBbGxDbG9zZWR8fG4uaGFzQ2xhc3MoXCJpcy1hY3RpdmVcIikpJiZ0aGlzLl9jbG9zZVRhYih0KX19fX0se2tleTpcIl9vcGVuU2luZ2xlVGFiXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy4kZWxlbWVudC5jaGlsZHJlbihcIi5pcy1hY3RpdmVcIikuY2hpbGRyZW4oXCJbZGF0YS10YWItY29udGVudF1cIik7ZS5sZW5ndGgmJnRoaXMuX2Nsb3NlVGFiKGUubm90KHQpKSx0aGlzLl9vcGVuVGFiKHQpfX0se2tleTpcIl9vcGVuVGFiXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQucGFyZW50KCksaT10LmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIik7dC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwhMSksbi5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKSxhKCkoXCIjXCIuY29uY2F0KGkpKS5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjohMCxcImFyaWEtc2VsZWN0ZWRcIjohMH0pLHQuc2xpZGVEb3duKHRoaXMub3B0aW9ucy5zbGlkZVNwZWVkLGZ1bmN0aW9uKCl7ZS4kZWxlbWVudC50cmlnZ2VyKFwiZG93bi56Zi5hY2NvcmRpb25cIixbdF0pfSl9fSx7a2V5OlwiX2Nsb3NlVGFiXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQucGFyZW50KCksaT10LmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIik7dC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwhMCksbi5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKSxhKCkoXCIjXCIuY29uY2F0KGkpKS5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjohMSxcImFyaWEtc2VsZWN0ZWRcIjohMX0pLHQuc2xpZGVVcCh0aGlzLm9wdGlvbnMuc2xpZGVTcGVlZCxmdW5jdGlvbigpe2UuJGVsZW1lbnQudHJpZ2dlcihcInVwLnpmLmFjY29yZGlvblwiLFt0XSl9KX19LHtrZXk6XCJfY2xvc2VBbGxUYWJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRlbGVtZW50LmNoaWxkcmVuKFwiLmlzLWFjdGl2ZVwiKS5jaGlsZHJlbihcIltkYXRhLXRhYi1jb250ZW50XVwiKTt0Lmxlbmd0aCYmdGhpcy5fY2xvc2VUYWIodCl9fSx7a2V5OlwiX2Rlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLXRhYi1jb250ZW50XVwiKS5zdG9wKCEwKS5zbGlkZVVwKDApLmNzcyhcImRpc3BsYXlcIixcIlwiKSx0aGlzLiRlbGVtZW50LmZpbmQoXCJhXCIpLm9mZihcIi56Zi5hY2NvcmRpb25cIiksdGhpcy5vcHRpb25zLmRlZXBMaW5rJiZhKCkod2luZG93KS5vZmYoXCJoYXNoY2hhbmdlXCIsdGhpcy5fY2hlY2tEZWVwTGluayl9fV0pJiZ1KGUucHJvdG90eXBlLGkpLG8mJnUoZSxvKSxufSgpO2YuZGVmYXVsdHM9e3NsaWRlU3BlZWQ6MjUwLG11bHRpRXhwYW5kOiExLGFsbG93QWxsQ2xvc2VkOiExLGRlZXBMaW5rOiExLGRlZXBMaW5rU211ZGdlOiExLGRlZXBMaW5rU211ZGdlRGVsYXk6MzAwLHVwZGF0ZUhpc3Rvcnk6ITF9fSxcIi4vanMvZm91bmRhdGlvbi5hY2NvcmRpb25NZW51LmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIkFjY29yZGlvbk1lbnVcIixmdW5jdGlvbigpe3JldHVybiBwfSk7dmFyIGk9bihcImpxdWVyeVwiKSxyPW4ubihpKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5rZXlib2FyZC5qc1wiKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5uZXN0LmpzXCIpLHU9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLHM9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnBsdWdpbi5qc1wiKTtmdW5jdGlvbiBvKHQpe3JldHVybihvPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiBjKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBkKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1vKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGgodCl7cmV0dXJuKGg9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIGYodCxlKXtyZXR1cm4oZj1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIHA9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsbiksZCh0aGlzLGgobikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZmKHQsZSl9KG4sc1tcIlBsdWdpblwiXSksZT1uLChpPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPXIuYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIkFjY29yZGlvbk1lbnVcIix0aGlzLl9pbml0KCksbC5LZXlib2FyZC5yZWdpc3RlcihcIkFjY29yZGlvbk1lbnVcIix7RU5URVI6XCJ0b2dnbGVcIixTUEFDRTpcInRvZ2dsZVwiLEFSUk9XX1JJR0hUOlwib3BlblwiLEFSUk9XX1VQOlwidXBcIixBUlJPV19ET1dOOlwiZG93blwiLEFSUk9XX0xFRlQ6XCJjbG9zZVwiLEVTQ0FQRTpcImNsb3NlQWxsXCJ9KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7YS5OZXN0LkZlYXRoZXIodGhpcy4kZWxlbWVudCxcImFjY29yZGlvblwiKTt2YXIgcz10aGlzO3RoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLXN1Ym1lbnVdXCIpLm5vdChcIi5pcy1hY3RpdmVcIikuc2xpZGVVcCgwKSx0aGlzLiRlbGVtZW50LmF0dHIoe3JvbGU6XCJ0cmVlXCIsXCJhcmlhLW11bHRpc2VsZWN0YWJsZVwiOnRoaXMub3B0aW9ucy5tdWx0aU9wZW59KSx0aGlzLiRtZW51TGlua3M9dGhpcy4kZWxlbWVudC5maW5kKFwiLmlzLWFjY29yZGlvbi1zdWJtZW51LXBhcmVudFwiKSx0aGlzLiRtZW51TGlua3MuZWFjaChmdW5jdGlvbigpe3ZhciB0PXRoaXMuaWR8fE9iamVjdCh1LkdldFlvRGlnaXRzKSg2LFwiYWNjLW1lbnUtbGlua1wiKSxlPXIoKSh0aGlzKSxuPWUuY2hpbGRyZW4oXCJbZGF0YS1zdWJtZW51XVwiKSxpPW5bMF0uaWR8fE9iamVjdCh1LkdldFlvRGlnaXRzKSg2LFwiYWNjLW1lbnVcIiksbz1uLmhhc0NsYXNzKFwiaXMtYWN0aXZlXCIpO3Mub3B0aW9ucy5wYXJlbnRMaW5rJiZlLmNoaWxkcmVuKFwiYVwiKS5jbG9uZSgpLnByZXBlbmRUbyhuKS53cmFwKCc8bGkgZGF0YS1pcy1wYXJlbnQtbGluayBjbGFzcz1cImlzLXN1Ym1lbnUtcGFyZW50LWl0ZW0gaXMtc3VibWVudS1pdGVtIGlzLWFjY29yZGlvbi1zdWJtZW51LWl0ZW1cIj48L2xpPicpO3Mub3B0aW9ucy5zdWJtZW51VG9nZ2xlPyhlLmFkZENsYXNzKFwiaGFzLXN1Ym1lbnUtdG9nZ2xlXCIpLGUuY2hpbGRyZW4oXCJhXCIpLmFmdGVyKCc8YnV0dG9uIGlkPVwiJyt0KydcIiBjbGFzcz1cInN1Ym1lbnUtdG9nZ2xlXCIgYXJpYS1jb250cm9scz1cIicraSsnXCIgYXJpYS1leHBhbmRlZD1cIicrbysnXCIgdGl0bGU9XCInK3Mub3B0aW9ucy5zdWJtZW51VG9nZ2xlVGV4dCsnXCI+PHNwYW4gY2xhc3M9XCJzdWJtZW51LXRvZ2dsZS10ZXh0XCI+JytzLm9wdGlvbnMuc3VibWVudVRvZ2dsZVRleHQrXCI8L3NwYW4+PC9idXR0b24+XCIpKTplLmF0dHIoe1wiYXJpYS1jb250cm9sc1wiOmksXCJhcmlhLWV4cGFuZGVkXCI6byxpZDp0fSksbi5hdHRyKHtcImFyaWEtbGFiZWxsZWRieVwiOnQsXCJhcmlhLWhpZGRlblwiOiFvLHJvbGU6XCJncm91cFwiLGlkOml9KX0pLHRoaXMuJGVsZW1lbnQuZmluZChcImxpXCIpLmF0dHIoe3JvbGU6XCJ0cmVlaXRlbVwifSk7dmFyIHQ9dGhpcy4kZWxlbWVudC5maW5kKFwiLmlzLWFjdGl2ZVwiKTtpZih0Lmxlbmd0aCl7cz10aGlzO3QuZWFjaChmdW5jdGlvbigpe3MuZG93bihyKCkodGhpcykpfSl9dGhpcy5fZXZlbnRzKCl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGE9dGhpczt0aGlzLiRlbGVtZW50LmZpbmQoXCJsaVwiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9cigpKHRoaXMpLmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIik7ZS5sZW5ndGgmJihhLm9wdGlvbnMuc3VibWVudVRvZ2dsZT9yKCkodGhpcykuY2hpbGRyZW4oXCIuc3VibWVudS10b2dnbGVcIikub2ZmKFwiY2xpY2suemYuYWNjb3JkaW9uTWVudVwiKS5vbihcImNsaWNrLnpmLmFjY29yZGlvbk1lbnVcIixmdW5jdGlvbih0KXthLnRvZ2dsZShlKX0pOnIoKSh0aGlzKS5jaGlsZHJlbihcImFcIikub2ZmKFwiY2xpY2suemYuYWNjb3JkaW9uTWVudVwiKS5vbihcImNsaWNrLnpmLmFjY29yZGlvbk1lbnVcIixmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksYS50b2dnbGUoZSl9KSl9KS5vbihcImtleWRvd24uemYuYWNjb3JkaW9ubWVudVwiLGZ1bmN0aW9uKGUpe3ZhciBuLGksbz1yKCkodGhpcykscz1vLnBhcmVudChcInVsXCIpLmNoaWxkcmVuKFwibGlcIiksdD1vLmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIik7cy5lYWNoKGZ1bmN0aW9uKHQpe2lmKHIoKSh0aGlzKS5pcyhvKSlyZXR1cm4gbj1zLmVxKE1hdGgubWF4KDAsdC0xKSkuZmluZChcImFcIikuZmlyc3QoKSxpPXMuZXEoTWF0aC5taW4odCsxLHMubGVuZ3RoLTEpKS5maW5kKFwiYVwiKS5maXJzdCgpLHIoKSh0aGlzKS5jaGlsZHJlbihcIltkYXRhLXN1Ym1lbnVdOnZpc2libGVcIikubGVuZ3RoJiYoaT1vLmZpbmQoXCJsaTpmaXJzdC1jaGlsZFwiKS5maW5kKFwiYVwiKS5maXJzdCgpKSxyKCkodGhpcykuaXMoXCI6Zmlyc3QtY2hpbGRcIik/bj1vLnBhcmVudHMoXCJsaVwiKS5maXJzdCgpLmZpbmQoXCJhXCIpLmZpcnN0KCk6bi5wYXJlbnRzKFwibGlcIikuZmlyc3QoKS5jaGlsZHJlbihcIltkYXRhLXN1Ym1lbnVdOnZpc2libGVcIikubGVuZ3RoJiYobj1uLnBhcmVudHMoXCJsaVwiKS5maW5kKFwibGk6bGFzdC1jaGlsZFwiKS5maW5kKFwiYVwiKS5maXJzdCgpKSx2b2lkKHIoKSh0aGlzKS5pcyhcIjpsYXN0LWNoaWxkXCIpJiYoaT1vLnBhcmVudHMoXCJsaVwiKS5maXJzdCgpLm5leHQoXCJsaVwiKS5maW5kKFwiYVwiKS5maXJzdCgpKSl9KSxsLktleWJvYXJkLmhhbmRsZUtleShlLFwiQWNjb3JkaW9uTWVudVwiLHtvcGVuOmZ1bmN0aW9uKCl7dC5pcyhcIjpoaWRkZW5cIikmJihhLmRvd24odCksdC5maW5kKFwibGlcIikuZmlyc3QoKS5maW5kKFwiYVwiKS5maXJzdCgpLmZvY3VzKCkpfSxjbG9zZTpmdW5jdGlvbigpe3QubGVuZ3RoJiYhdC5pcyhcIjpoaWRkZW5cIik/YS51cCh0KTpvLnBhcmVudChcIltkYXRhLXN1Ym1lbnVdXCIpLmxlbmd0aCYmKGEudXAoby5wYXJlbnQoXCJbZGF0YS1zdWJtZW51XVwiKSksby5wYXJlbnRzKFwibGlcIikuZmlyc3QoKS5maW5kKFwiYVwiKS5maXJzdCgpLmZvY3VzKCkpfSx1cDpmdW5jdGlvbigpe3JldHVybiBuLmZvY3VzKCksITB9LGRvd246ZnVuY3Rpb24oKXtyZXR1cm4gaS5mb2N1cygpLCEwfSx0b2dnbGU6ZnVuY3Rpb24oKXtyZXR1cm4hYS5vcHRpb25zLnN1Ym1lbnVUb2dnbGUmJihvLmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIikubGVuZ3RoPyhhLnRvZ2dsZShvLmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIikpLCEwKTp2b2lkIDApfSxjbG9zZUFsbDpmdW5jdGlvbigpe2EuaGlkZUFsbCgpfSxoYW5kbGVkOmZ1bmN0aW9uKHQpe3QmJmUucHJldmVudERlZmF1bHQoKSxlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfX0pfSl9fSx7a2V5OlwiaGlkZUFsbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy51cCh0aGlzLiRlbGVtZW50LmZpbmQoXCJbZGF0YS1zdWJtZW51XVwiKSl9fSx7a2V5Olwic2hvd0FsbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5kb3duKHRoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLXN1Ym1lbnVdXCIpKX19LHtrZXk6XCJ0b2dnbGVcIix2YWx1ZTpmdW5jdGlvbih0KXt0LmlzKFwiOmFuaW1hdGVkXCIpfHwodC5pcyhcIjpoaWRkZW5cIik/dGhpcy5kb3duKHQpOnRoaXMudXAodCkpfX0se2tleTpcImRvd25cIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMub3B0aW9ucy5tdWx0aU9wZW58fHRoaXMudXAodGhpcy4kZWxlbWVudC5maW5kKFwiLmlzLWFjdGl2ZVwiKS5ub3QodC5wYXJlbnRzVW50aWwodGhpcy4kZWxlbWVudCkuYWRkKHQpKSksdC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6ITF9KSx0aGlzLm9wdGlvbnMuc3VibWVudVRvZ2dsZT90LnByZXYoXCIuc3VibWVudS10b2dnbGVcIikuYXR0cih7XCJhcmlhLWV4cGFuZGVkXCI6ITB9KTp0LnBhcmVudChcIi5pcy1hY2NvcmRpb24tc3VibWVudS1wYXJlbnRcIikuYXR0cih7XCJhcmlhLWV4cGFuZGVkXCI6ITB9KSx0LnNsaWRlRG93bih0aGlzLm9wdGlvbnMuc2xpZGVTcGVlZCxmdW5jdGlvbigpe2UuJGVsZW1lbnQudHJpZ2dlcihcImRvd24uemYuYWNjb3JkaW9uTWVudVwiLFt0XSl9KX19LHtrZXk6XCJ1cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LmZpbmQoXCJbZGF0YS1zdWJtZW51XVwiKSxpPXQuYWRkKG4pO24uc2xpZGVVcCgwKSxpLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLCEwKSx0aGlzLm9wdGlvbnMuc3VibWVudVRvZ2dsZT9pLnByZXYoXCIuc3VibWVudS10b2dnbGVcIikuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwhMSk6aS5wYXJlbnQoXCIuaXMtYWNjb3JkaW9uLXN1Ym1lbnUtcGFyZW50XCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsITEpLHQuc2xpZGVVcCh0aGlzLm9wdGlvbnMuc2xpZGVTcGVlZCxmdW5jdGlvbigpe2UuJGVsZW1lbnQudHJpZ2dlcihcInVwLnpmLmFjY29yZGlvbk1lbnVcIixbdF0pfSl9fSx7a2V5OlwiX2Rlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLXN1Ym1lbnVdXCIpLnNsaWRlRG93bigwKS5jc3MoXCJkaXNwbGF5XCIsXCJcIiksdGhpcy4kZWxlbWVudC5maW5kKFwiYVwiKS5vZmYoXCJjbGljay56Zi5hY2NvcmRpb25NZW51XCIpLHRoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLWlzLXBhcmVudC1saW5rXVwiKS5kZXRhY2goKSx0aGlzLm9wdGlvbnMuc3VibWVudVRvZ2dsZSYmKHRoaXMuJGVsZW1lbnQuZmluZChcIi5oYXMtc3VibWVudS10b2dnbGVcIikucmVtb3ZlQ2xhc3MoXCJoYXMtc3VibWVudS10b2dnbGVcIiksdGhpcy4kZWxlbWVudC5maW5kKFwiLnN1Ym1lbnUtdG9nZ2xlXCIpLnJlbW92ZSgpKSxhLk5lc3QuQnVybih0aGlzLiRlbGVtZW50LFwiYWNjb3JkaW9uXCIpfX1dKSYmYyhlLnByb3RvdHlwZSxpKSxvJiZjKGUsbyksbn0oKTtwLmRlZmF1bHRzPXtwYXJlbnRMaW5rOiExLHNsaWRlU3BlZWQ6MjUwLHN1Ym1lbnVUb2dnbGU6ITEsc3VibWVudVRvZ2dsZVRleHQ6XCJUb2dnbGUgbWVudVwiLG11bHRpT3BlbjohMH19LFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiRm91bmRhdGlvblwiLGZ1bmN0aW9uKCl7cmV0dXJuIGx9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLHM9bi5uKGkpLG89bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLGE9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1lZGlhUXVlcnkuanNcIik7ZnVuY3Rpb24gcih0KXtyZXR1cm4ocj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9dmFyIGw9e3ZlcnNpb246XCI2LjUuMVwiLF9wbHVnaW5zOnt9LF91dWlkczpbXSxwbHVnaW46ZnVuY3Rpb24odCxlKXt2YXIgbj1lfHx1KHQpLGk9YyhuKTt0aGlzLl9wbHVnaW5zW2ldPXRoaXNbbl09dH0scmVnaXN0ZXJQbHVnaW46ZnVuY3Rpb24odCxlKXt2YXIgbj1lP2MoZSk6dSh0LmNvbnN0cnVjdG9yKS50b0xvd2VyQ2FzZSgpO3QudXVpZD1PYmplY3Qoby5HZXRZb0RpZ2l0cykoNixuKSx0LiRlbGVtZW50LmF0dHIoXCJkYXRhLVwiLmNvbmNhdChuKSl8fHQuJGVsZW1lbnQuYXR0cihcImRhdGEtXCIuY29uY2F0KG4pLHQudXVpZCksdC4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIil8fHQuJGVsZW1lbnQuZGF0YShcInpmUGx1Z2luXCIsdCksdC4kZWxlbWVudC50cmlnZ2VyKFwiaW5pdC56Zi5cIi5jb25jYXQobikpLHRoaXMuX3V1aWRzLnB1c2godC51dWlkKX0sdW5yZWdpc3RlclBsdWdpbjpmdW5jdGlvbih0KXt2YXIgZT1jKHUodC4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIikuY29uc3RydWN0b3IpKTtmb3IodmFyIG4gaW4gdGhpcy5fdXVpZHMuc3BsaWNlKHRoaXMuX3V1aWRzLmluZGV4T2YodC51dWlkKSwxKSx0LiRlbGVtZW50LnJlbW92ZUF0dHIoXCJkYXRhLVwiLmNvbmNhdChlKSkucmVtb3ZlRGF0YShcInpmUGx1Z2luXCIpLnRyaWdnZXIoXCJkZXN0cm95ZWQuemYuXCIuY29uY2F0KGUpKSx0KXRbbl09bnVsbH0scmVJbml0OmZ1bmN0aW9uKHQpe3ZhciBlPXQgaW5zdGFuY2VvZiBzLmE7dHJ5e2lmKGUpdC5lYWNoKGZ1bmN0aW9uKCl7cygpKHRoaXMpLmRhdGEoXCJ6ZlBsdWdpblwiKS5faW5pdCgpfSk7ZWxzZXt2YXIgbj1yKHQpLGk9dGhpczsoe29iamVjdDpmdW5jdGlvbih0KXt0LmZvckVhY2goZnVuY3Rpb24odCl7dD1jKHQpLHMoKShcIltkYXRhLVwiK3QrXCJdXCIpLmZvdW5kYXRpb24oXCJfaW5pdFwiKX0pfSxzdHJpbmc6ZnVuY3Rpb24oKXt0PWModCkscygpKFwiW2RhdGEtXCIrdCtcIl1cIikuZm91bmRhdGlvbihcIl9pbml0XCIpfSx1bmRlZmluZWQ6ZnVuY3Rpb24oKXt0aGlzLm9iamVjdChPYmplY3Qua2V5cyhpLl9wbHVnaW5zKSl9fSlbbl0odCl9fWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9ZmluYWxseXtyZXR1cm4gdH19LHJlZmxvdzpmdW5jdGlvbihpLHQpe3ZvaWQgMD09PXQ/dD1PYmplY3Qua2V5cyh0aGlzLl9wbHVnaW5zKTpcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9W3RdKTt2YXIgbz10aGlzO3MuYS5lYWNoKHQsZnVuY3Rpb24odCxlKXt2YXIgbj1vLl9wbHVnaW5zW2VdO3MoKShpKS5maW5kKFwiW2RhdGEtXCIrZStcIl1cIikuYWRkQmFjayhcIltkYXRhLVwiK2UrXCJdXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1zKCkodGhpcyksaT17fTtpZih0LmRhdGEoXCJ6ZlBsdWdpblwiKSljb25zb2xlLndhcm4oXCJUcmllZCB0byBpbml0aWFsaXplIFwiK2UrXCIgb24gYW4gZWxlbWVudCB0aGF0IGFscmVhZHkgaGFzIGEgRm91bmRhdGlvbiBwbHVnaW4uXCIpO2Vsc2V7aWYodC5hdHRyKFwiZGF0YS1vcHRpb25zXCIpKXQuYXR0cihcImRhdGEtb3B0aW9uc1wiKS5zcGxpdChcIjtcIikuZm9yRWFjaChmdW5jdGlvbih0LGUpe3ZhciBuPXQuc3BsaXQoXCI6XCIpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC50cmltKCl9KTtuWzBdJiYoaVtuWzBdXT1mdW5jdGlvbih0KXt7aWYoXCJ0cnVlXCI9PT10KXJldHVybiEwO2lmKFwiZmFsc2VcIj09PXQpcmV0dXJuITE7aWYoIWlzTmFOKDEqdCkpcmV0dXJuIHBhcnNlRmxvYXQodCl9cmV0dXJuIHR9KG5bMV0pKX0pO3RyeXt0LmRhdGEoXCJ6ZlBsdWdpblwiLG5ldyBuKHMoKSh0aGlzKSxpKSl9Y2F0Y2godCl7Y29uc29sZS5lcnJvcih0KX1maW5hbGx5e3JldHVybn19fSl9KX0sZ2V0Rm5OYW1lOnUsYWRkVG9KcXVlcnk6ZnVuY3Rpb24ocyl7cmV0dXJuIHMuZm4uZm91bmRhdGlvbj1mdW5jdGlvbihuKXt2YXIgdD1yKG4pLGU9cyhcIi5uby1qc1wiKTtpZihlLmxlbmd0aCYmZS5yZW1vdmVDbGFzcyhcIm5vLWpzXCIpLFwidW5kZWZpbmVkXCI9PT10KWEuTWVkaWFRdWVyeS5faW5pdCgpLGwucmVmbG93KHRoaXMpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIldlJ3JlIHNvcnJ5LCBcIi5jb25jYXQodCxcIiBpcyBub3QgYSB2YWxpZCBwYXJhbWV0ZXIuIFlvdSBtdXN0IHVzZSBhIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIG1ldGhvZCB5b3Ugd2lzaCB0byBpbnZva2UuXCIpKTt2YXIgaT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksbz10aGlzLmRhdGEoXCJ6ZlBsdWdpblwiKTtpZih2b2lkIDA9PT1vfHx2b2lkIDA9PT1vW25dKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcIldlJ3JlIHNvcnJ5LCAnXCIrbitcIicgaXMgbm90IGFuIGF2YWlsYWJsZSBtZXRob2QgZm9yIFwiKyhvP3Uobyk6XCJ0aGlzIGVsZW1lbnRcIikrXCIuXCIpOzE9PT10aGlzLmxlbmd0aD9vW25dLmFwcGx5KG8saSk6dGhpcy5lYWNoKGZ1bmN0aW9uKHQsZSl7b1tuXS5hcHBseShzKGUpLmRhdGEoXCJ6ZlBsdWdpblwiKSxpKX0pfXJldHVybiB0aGlzfSxzfX07ZnVuY3Rpb24gdSh0KXtpZih2b2lkIDAhPT1GdW5jdGlvbi5wcm90b3R5cGUubmFtZSlyZXR1cm4gdm9pZCAwPT09dC5wcm90b3R5cGU/dC5jb25zdHJ1Y3Rvci5uYW1lOnQucHJvdG90eXBlLmNvbnN0cnVjdG9yLm5hbWU7dmFyIGU9L2Z1bmN0aW9uXFxzKFteKF17MSx9KVxcKC8uZXhlYyh0LnRvU3RyaW5nKCkpO3JldHVybiBlJiYxPGUubGVuZ3RoP2VbMV0udHJpbSgpOlwiXCJ9ZnVuY3Rpb24gYyh0KXtyZXR1cm4gdC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKX1sLnV0aWw9e3Rocm90dGxlOmZ1bmN0aW9uKG4saSl7dmFyIG89bnVsbDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9YXJndW1lbnRzO251bGw9PT1vJiYobz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5hcHBseSh0LGUpLG89bnVsbH0saSkpfX19LHdpbmRvdy5Gb3VuZGF0aW9uPWwsZnVuY3Rpb24oKXtEYXRlLm5vdyYmd2luZG93LkRhdGUubm93fHwod2luZG93LkRhdGUubm93PURhdGUubm93PWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9KTtmb3IodmFyIHQ9W1wid2Via2l0XCIsXCJtb3pcIl0sZT0wO2U8dC5sZW5ndGgmJiF3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lOysrZSl7dmFyIG49dFtlXTt3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPXdpbmRvd1tuK1wiUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCJdLHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZT13aW5kb3dbbitcIkNhbmNlbEFuaW1hdGlvbkZyYW1lXCJdfHx3aW5kb3dbbitcIkNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZVwiXX1pZigvaVAoYWR8aG9uZXxvZCkuKk9TIDYvLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpfHwhd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8IXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSl7dmFyIGk9MDt3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKHQpe3ZhciBlPURhdGUubm93KCksbj1NYXRoLm1heChpKzE2LGUpO3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dChpPW4pfSxuLWUpfSx3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU9Y2xlYXJUaW1lb3V0fXdpbmRvdy5wZXJmb3JtYW5jZSYmd2luZG93LnBlcmZvcm1hbmNlLm5vd3x8KHdpbmRvdy5wZXJmb3JtYW5jZT17c3RhcnQ6RGF0ZS5ub3coKSxub3c6ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS10aGlzLnN0YXJ0fX0pfSgpLEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24odCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgLSB3aGF0IGlzIHRyeWluZyB0byBiZSBib3VuZCBpcyBub3QgY2FsbGFibGVcIik7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLG49dGhpcyxpPWZ1bmN0aW9uKCl7fSxvPWZ1bmN0aW9uKCl7cmV0dXJuIG4uYXBwbHkodGhpcyBpbnN0YW5jZW9mIGk/dGhpczp0LGUuY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpKX07cmV0dXJuIHRoaXMucHJvdG90eXBlJiYoaS5wcm90b3R5cGU9dGhpcy5wcm90b3R5cGUpLG8ucHJvdG90eXBlPW5ldyBpLG99KX0sXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiUGx1Z2luXCIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pO24oXCJqcXVlcnlcIik7dmFyIG89bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpO2Z1bmN0aW9uIHModCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fXZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gaSh0LGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsaSksdGhpcy5fc2V0dXAodCxlKTt2YXIgbj1yKHRoaXMpO3RoaXMudXVpZD1PYmplY3Qoby5HZXRZb0RpZ2l0cykoNixuKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJkYXRhLVwiLmNvbmNhdChuKSl8fHRoaXMuJGVsZW1lbnQuYXR0cihcImRhdGEtXCIuY29uY2F0KG4pLHRoaXMudXVpZCksdGhpcy4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIil8fHRoaXMuJGVsZW1lbnQuZGF0YShcInpmUGx1Z2luXCIsdGhpcyksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiaW5pdC56Zi5cIi5jb25jYXQobikpfXZhciB0LGUsbjtyZXR1cm4gdD1pLChlPVt7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fZGVzdHJveSgpO3ZhciB0PXIodGhpcyk7Zm9yKHZhciBlIGluIHRoaXMuJGVsZW1lbnQucmVtb3ZlQXR0cihcImRhdGEtXCIuY29uY2F0KHQpKS5yZW1vdmVEYXRhKFwiemZQbHVnaW5cIikudHJpZ2dlcihcImRlc3Ryb3llZC56Zi5cIi5jb25jYXQodCkpLHRoaXMpdGhpc1tlXT1udWxsfX1dKSYmcyh0LnByb3RvdHlwZSxlKSxuJiZzKHQsbiksaX0oKTtmdW5jdGlvbiBhKHQpe3JldHVybiB0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csXCIkMS0kMlwiKS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIHIodCl7cmV0dXJuIHZvaWQgMCE9PXQuY29uc3RydWN0b3IubmFtZT9hKHQuY29uc3RydWN0b3IubmFtZSk6YSh0LmNsYXNzTmFtZSl9fSxcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcInJ0bFwiLGZ1bmN0aW9uKCl7cmV0dXJuIG99KSxuLmQoZSxcIkdldFlvRGlnaXRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gc30pLG4uZChlLFwiUmVnRXhwRXNjYXBlXCIsZnVuY3Rpb24oKXtyZXR1cm4gYX0pLG4uZChlLFwidHJhbnNpdGlvbmVuZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KSxuLmQoZSxcIm9uTG9hZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KSxuLmQoZSxcImlnbm9yZU1vdXNlZGlzYXBwZWFyXCIsZnVuY3Rpb24oKXtyZXR1cm4gY30pO3ZhciBpPW4oXCJqcXVlcnlcIiksbD1uLm4oaSk7ZnVuY3Rpb24gbygpe3JldHVyblwicnRsXCI9PT1sKCkoXCJodG1sXCIpLmF0dHIoXCJkaXJcIil9ZnVuY3Rpb24gcyh0LGUpe3JldHVybiB0PXR8fDYsTWF0aC5yb3VuZChNYXRoLnBvdygzNix0KzEpLU1hdGgucmFuZG9tKCkqTWF0aC5wb3coMzYsdCkpLnRvU3RyaW5nKDM2KS5zbGljZSgxKSsoZT9cIi1cIi5jb25jYXQoZSk6XCJcIil9ZnVuY3Rpb24gYSh0KXtyZXR1cm4gdC5yZXBsYWNlKC9bLVtcXF17fSgpKis/LixcXFxcXiR8I1xcc10vZyxcIlxcXFwkJlwiKX1mdW5jdGlvbiByKHQpe3ZhciBlLG49e3RyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsV2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIixNb3pUcmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLE9UcmFuc2l0aW9uOlwib3RyYW5zaXRpb25lbmRcIn0saT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Zvcih2YXIgbyBpbiBuKXZvaWQgMCE9PWkuc3R5bGVbb10mJihlPW5bb10pO3JldHVybiBlfHwoZT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC50cmlnZ2VySGFuZGxlcihcInRyYW5zaXRpb25lbmRcIixbdF0pfSwxKSxcInRyYW5zaXRpb25lbmRcIil9ZnVuY3Rpb24gdSh0LGUpe3ZhciBuPVwiY29tcGxldGVcIj09PWRvY3VtZW50LnJlYWR5U3RhdGUsaT0obj9cIl9kaWRMb2FkXCI6XCJsb2FkXCIpK1wiLnpmLnV0aWwub25Mb2FkXCIsbz1mdW5jdGlvbigpe3JldHVybiB0LnRyaWdnZXJIYW5kbGVyKGkpfTtyZXR1cm4gdCYmKGUmJnQub25lKGksZSksbj9zZXRUaW1lb3V0KG8pOmwoKSh3aW5kb3cpLm9uZShcImxvYWRcIixvKSksaX1mdW5jdGlvbiBjKHMpe3ZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxlPXQuaWdub3JlTGVhdmVXaW5kb3csYT12b2lkIDAhPT1lJiZlLG49dC5pZ25vcmVSZWFwcGVhcixyPXZvaWQgMCE9PW4mJm47cmV0dXJuIGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KDE8dD90LTE6MCksaT0xO2k8dDtpKyspbltpLTFdPWFyZ3VtZW50c1tpXTt2YXIgbz1zLmJpbmQuYXBwbHkocyxbdGhpcyxlXS5jb25jYXQobikpO2lmKG51bGwhPT1lLnJlbGF0ZWRUYXJnZXQpcmV0dXJuIG8oKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoIWEmJmRvY3VtZW50Lmhhc0ZvY3VzJiYhZG9jdW1lbnQuaGFzRm9jdXMoKSlyZXR1cm4gbygpO3J8fGwoKShkb2N1bWVudCkub25lKFwibW91c2VlbnRlclwiLGZ1bmN0aW9uKHQpe2woKShlLmN1cnJlbnRUYXJnZXQpLmhhcyh0LnRhcmdldCkubGVuZ3RofHwoZS5yZWxhdGVkVGFyZ2V0PXQudGFyZ2V0LG8oKSl9KX0sMCl9fX0sXCIuL2pzL2ZvdW5kYXRpb24uZHJpbGxkb3duLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIkRyaWxsZG93blwiLGZ1bmN0aW9uKCl7cmV0dXJuIG19KTt2YXIgaT1uKFwianF1ZXJ5XCIpLGE9bi5uKGkpLHI9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLmtleWJvYXJkLmpzXCIpLHM9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm5lc3QuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuYm94LmpzXCIpLGM9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnBsdWdpbi5qc1wiKTtmdW5jdGlvbiBvKHQpe3JldHVybihvPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiBkKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1vKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGYodCl7cmV0dXJuKGY9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4ocD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIG09ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsbiksaCh0aGlzLGYobikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZwKHQsZSl9KG4sY1tcIlBsdWdpblwiXSksZT1uLChpPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPWEuYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIkRyaWxsZG93blwiLHRoaXMuX2luaXQoKSxyLktleWJvYXJkLnJlZ2lzdGVyKFwiRHJpbGxkb3duXCIse0VOVEVSOlwib3BlblwiLFNQQUNFOlwib3BlblwiLEFSUk9XX1JJR0hUOlwibmV4dFwiLEFSUk9XX1VQOlwidXBcIixBUlJPV19ET1dOOlwiZG93blwiLEFSUk9XX0xFRlQ6XCJwcmV2aW91c1wiLEVTQ0FQRTpcImNsb3NlXCIsVEFCOlwiZG93blwiLFNISUZUX1RBQjpcInVwXCJ9KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7cy5OZXN0LkZlYXRoZXIodGhpcy4kZWxlbWVudCxcImRyaWxsZG93blwiKSx0aGlzLm9wdGlvbnMuYXV0b0FwcGx5Q2xhc3MmJnRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJkcmlsbGRvd25cIiksdGhpcy4kZWxlbWVudC5hdHRyKHtyb2xlOlwidHJlZVwiLFwiYXJpYS1tdWx0aXNlbGVjdGFibGVcIjohMX0pLHRoaXMuJHN1Ym1lbnVBbmNob3JzPXRoaXMuJGVsZW1lbnQuZmluZChcImxpLmlzLWRyaWxsZG93bi1zdWJtZW51LXBhcmVudFwiKS5jaGlsZHJlbihcImFcIiksdGhpcy4kc3VibWVudXM9dGhpcy4kc3VibWVudUFuY2hvcnMucGFyZW50KFwibGlcIikuY2hpbGRyZW4oXCJbZGF0YS1zdWJtZW51XVwiKS5hdHRyKFwicm9sZVwiLFwiZ3JvdXBcIiksdGhpcy4kbWVudUl0ZW1zPXRoaXMuJGVsZW1lbnQuZmluZChcImxpXCIpLm5vdChcIi5qcy1kcmlsbGRvd24tYmFja1wiKS5hdHRyKFwicm9sZVwiLFwidHJlZWl0ZW1cIikuZmluZChcImFcIiksdGhpcy4kY3VycmVudE1lbnU9dGhpcy4kZWxlbWVudCx0aGlzLiRlbGVtZW50LmF0dHIoXCJkYXRhLW11dGF0ZVwiLHRoaXMuJGVsZW1lbnQuYXR0cihcImRhdGEtZHJpbGxkb3duXCIpfHxPYmplY3QobC5HZXRZb0RpZ2l0cykoNixcImRyaWxsZG93blwiKSksdGhpcy5fcHJlcGFyZU1lbnUoKSx0aGlzLl9yZWdpc3RlckV2ZW50cygpLHRoaXMuX2tleWJvYXJkRXZlbnRzKCl9fSx7a2V5OlwiX3ByZXBhcmVNZW51XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3RoaXMuJHN1Ym1lbnVBbmNob3JzLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1hKCkodGhpcyksZT10LnBhcmVudCgpO24ub3B0aW9ucy5wYXJlbnRMaW5rJiZ0LmNsb25lKCkucHJlcGVuZFRvKGUuY2hpbGRyZW4oXCJbZGF0YS1zdWJtZW51XVwiKSkud3JhcCgnPGxpIGRhdGEtaXMtcGFyZW50LWxpbmsgY2xhc3M9XCJpcy1zdWJtZW51LXBhcmVudC1pdGVtIGlzLXN1Ym1lbnUtaXRlbSBpcy1kcmlsbGRvd24tc3VibWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtXCI+PC9saT4nKSx0LmRhdGEoXCJzYXZlZEhyZWZcIix0LmF0dHIoXCJocmVmXCIpKS5yZW1vdmVBdHRyKFwiaHJlZlwiKS5hdHRyKFwidGFiaW5kZXhcIiwwKSx0LmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIikuYXR0cih7XCJhcmlhLWhpZGRlblwiOiEwLHRhYmluZGV4OjAscm9sZTpcImdyb3VwXCJ9KSxuLl9ldmVudHModCl9KSx0aGlzLiRzdWJtZW51cy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9YSgpKHRoaXMpO2lmKCF0LmZpbmQoXCIuanMtZHJpbGxkb3duLWJhY2tcIikubGVuZ3RoKXN3aXRjaChuLm9wdGlvbnMuYmFja0J1dHRvblBvc2l0aW9uKXtjYXNlXCJib3R0b21cIjp0LmFwcGVuZChuLm9wdGlvbnMuYmFja0J1dHRvbik7YnJlYWs7Y2FzZVwidG9wXCI6dC5wcmVwZW5kKG4ub3B0aW9ucy5iYWNrQnV0dG9uKTticmVhaztkZWZhdWx0OmNvbnNvbGUuZXJyb3IoXCJVbnN1cHBvcnRlZCBiYWNrQnV0dG9uUG9zaXRpb24gdmFsdWUgJ1wiK24ub3B0aW9ucy5iYWNrQnV0dG9uUG9zaXRpb24rXCInXCIpfW4uX2JhY2sodCl9KSx0aGlzLiRzdWJtZW51cy5hZGRDbGFzcyhcImludmlzaWJsZVwiKSx0aGlzLm9wdGlvbnMuYXV0b0hlaWdodHx8dGhpcy4kc3VibWVudXMuYWRkQ2xhc3MoXCJkcmlsbGRvd24tc3VibWVudS1jb3Zlci1wcmV2aW91c1wiKSx0aGlzLiRlbGVtZW50LnBhcmVudCgpLmhhc0NsYXNzKFwiaXMtZHJpbGxkb3duXCIpfHwodGhpcy4kd3JhcHBlcj1hKCkodGhpcy5vcHRpb25zLndyYXBwZXIpLmFkZENsYXNzKFwiaXMtZHJpbGxkb3duXCIpLHRoaXMub3B0aW9ucy5hbmltYXRlSGVpZ2h0JiZ0aGlzLiR3cmFwcGVyLmFkZENsYXNzKFwiYW5pbWF0ZS1oZWlnaHRcIiksdGhpcy4kZWxlbWVudC53cmFwKHRoaXMuJHdyYXBwZXIpKSx0aGlzLiR3cmFwcGVyPXRoaXMuJGVsZW1lbnQucGFyZW50KCksdGhpcy4kd3JhcHBlci5jc3ModGhpcy5fZ2V0TWF4RGltcygpKX19LHtrZXk6XCJfcmVzaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiR3cmFwcGVyLmNzcyh7XCJtYXgtd2lkdGhcIjpcIm5vbmVcIixcIm1pbi1oZWlnaHRcIjpcIm5vbmVcIn0pLHRoaXMuJHdyYXBwZXIuY3NzKHRoaXMuX2dldE1heERpbXMoKSl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXM7bi5vZmYoXCJjbGljay56Zi5kcmlsbGRvd25cIikub24oXCJjbGljay56Zi5kcmlsbGRvd25cIixmdW5jdGlvbih0KXtpZihhKCkodC50YXJnZXQpLnBhcmVudHNVbnRpbChcInVsXCIsXCJsaVwiKS5oYXNDbGFzcyhcImlzLWRyaWxsZG93bi1zdWJtZW51LXBhcmVudFwiKSYmKHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpKSxpLl9zaG93KG4ucGFyZW50KFwibGlcIikpLGkub3B0aW9ucy5jbG9zZU9uQ2xpY2spe3ZhciBlPWEoKShcImJvZHlcIik7ZS5vZmYoXCIuemYuZHJpbGxkb3duXCIpLm9uKFwiY2xpY2suemYuZHJpbGxkb3duXCIsZnVuY3Rpb24odCl7dC50YXJnZXQ9PT1pLiRlbGVtZW50WzBdfHxhLmEuY29udGFpbnMoaS4kZWxlbWVudFswXSx0LnRhcmdldCl8fCh0LnByZXZlbnREZWZhdWx0KCksaS5faGlkZUFsbCgpLGUub2ZmKFwiLnpmLmRyaWxsZG93blwiKSl9KX19KX19LHtrZXk6XCJfcmVnaXN0ZXJFdmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5zY3JvbGxUb3AmJih0aGlzLl9iaW5kSGFuZGxlcj10aGlzLl9zY3JvbGxUb3AuYmluZCh0aGlzKSx0aGlzLiRlbGVtZW50Lm9uKFwib3Blbi56Zi5kcmlsbGRvd24gaGlkZS56Zi5kcmlsbGRvd24gY2xvc2VkLnpmLmRyaWxsZG93blwiLHRoaXMuX2JpbmRIYW5kbGVyKSksdGhpcy4kZWxlbWVudC5vbihcIm11dGF0ZW1lLnpmLnRyaWdnZXJcIix0aGlzLl9yZXNpemUuYmluZCh0aGlzKSl9fSx7a2V5OlwiX3Njcm9sbFRvcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVwiXCIhPXQub3B0aW9ucy5zY3JvbGxUb3BFbGVtZW50P2EoKSh0Lm9wdGlvbnMuc2Nyb2xsVG9wRWxlbWVudCk6dC4kZWxlbWVudCxuPXBhcnNlSW50KGUub2Zmc2V0KCkudG9wK3Qub3B0aW9ucy5zY3JvbGxUb3BPZmZzZXQsMTApO2EoKShcImh0bWwsIGJvZHlcIikuc3RvcCghMCkuYW5pbWF0ZSh7c2Nyb2xsVG9wOm59LHQub3B0aW9ucy5hbmltYXRpb25EdXJhdGlvbix0Lm9wdGlvbnMuYW5pbWF0aW9uRWFzaW5nLGZ1bmN0aW9uKCl7dGhpcz09PWEoKShcImh0bWxcIilbMF0mJnQuJGVsZW1lbnQudHJpZ2dlcihcInNjcm9sbG1lLnpmLmRyaWxsZG93blwiKX0pfX0se2tleTpcIl9rZXlib2FyZEV2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLiRtZW51SXRlbXMuYWRkKHRoaXMuJGVsZW1lbnQuZmluZChcIi5qcy1kcmlsbGRvd24tYmFjayA+IGEsIC5pcy1zdWJtZW51LXBhcmVudC1pdGVtID4gYVwiKSkub24oXCJrZXlkb3duLnpmLmRyaWxsZG93blwiLGZ1bmN0aW9uKGUpe3ZhciBuLGksbz1hKCkodGhpcykscz1vLnBhcmVudChcImxpXCIpLnBhcmVudChcInVsXCIpLmNoaWxkcmVuKFwibGlcIikuY2hpbGRyZW4oXCJhXCIpO3MuZWFjaChmdW5jdGlvbih0KXtpZihhKCkodGhpcykuaXMobykpcmV0dXJuIG49cy5lcShNYXRoLm1heCgwLHQtMSkpLHZvaWQoaT1zLmVxKE1hdGgubWluKHQrMSxzLmxlbmd0aC0xKSkpfSksci5LZXlib2FyZC5oYW5kbGVLZXkoZSxcIkRyaWxsZG93blwiLHtuZXh0OmZ1bmN0aW9uKCl7aWYoby5pcyh0LiRzdWJtZW51QW5jaG9ycykpcmV0dXJuIHQuX3Nob3coby5wYXJlbnQoXCJsaVwiKSksby5wYXJlbnQoXCJsaVwiKS5vbmUoT2JqZWN0KGwudHJhbnNpdGlvbmVuZCkobyksZnVuY3Rpb24oKXtvLnBhcmVudChcImxpXCIpLmZpbmQoXCJ1bCBsaSBhXCIpLm5vdChcIi5qcy1kcmlsbGRvd24tYmFjayBhXCIpLmZpcnN0KCkuZm9jdXMoKX0pLCEwfSxwcmV2aW91czpmdW5jdGlvbigpe3JldHVybiB0Ll9oaWRlKG8ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikpLG8ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikub25lKE9iamVjdChsLnRyYW5zaXRpb25lbmQpKG8pLGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe28ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikucGFyZW50KFwibGlcIikuY2hpbGRyZW4oXCJhXCIpLmZpcnN0KCkuZm9jdXMoKX0sMSl9KSwhMH0sdXA6ZnVuY3Rpb24oKXtyZXR1cm4gbi5mb2N1cygpLCFvLmlzKHQuJGVsZW1lbnQuZmluZChcIj4gbGk6Zmlyc3QtY2hpbGQgPiBhXCIpKX0sZG93bjpmdW5jdGlvbigpe3JldHVybiBpLmZvY3VzKCksIW8uaXModC4kZWxlbWVudC5maW5kKFwiPiBsaTpsYXN0LWNoaWxkID4gYVwiKSl9LGNsb3NlOmZ1bmN0aW9uKCl7by5pcyh0LiRlbGVtZW50LmZpbmQoXCI+IGxpID4gYVwiKSl8fCh0Ll9oaWRlKG8ucGFyZW50KCkucGFyZW50KCkpLG8ucGFyZW50KCkucGFyZW50KCkuc2libGluZ3MoXCJhXCIpLmZvY3VzKCkpfSxvcGVuOmZ1bmN0aW9uKCl7cmV0dXJuKCF0Lm9wdGlvbnMucGFyZW50TGlua3x8IW8uYXR0cihcImhyZWZcIikpJiYoby5pcyh0LiRtZW51SXRlbXMpP28uaXModC4kc3VibWVudUFuY2hvcnMpPyh0Ll9zaG93KG8ucGFyZW50KFwibGlcIikpLG8ucGFyZW50KFwibGlcIikub25lKE9iamVjdChsLnRyYW5zaXRpb25lbmQpKG8pLGZ1bmN0aW9uKCl7by5wYXJlbnQoXCJsaVwiKS5maW5kKFwidWwgbGkgYVwiKS5ub3QoXCIuanMtZHJpbGxkb3duLWJhY2sgYVwiKS5maXJzdCgpLmZvY3VzKCl9KSwhMCk6dm9pZCAwOih0Ll9oaWRlKG8ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikpLG8ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikub25lKE9iamVjdChsLnRyYW5zaXRpb25lbmQpKG8pLGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe28ucGFyZW50KFwibGlcIikucGFyZW50KFwidWxcIikucGFyZW50KFwibGlcIikuY2hpbGRyZW4oXCJhXCIpLmZpcnN0KCkuZm9jdXMoKX0sMSl9KSwhMCkpfSxoYW5kbGVkOmZ1bmN0aW9uKHQpe3QmJmUucHJldmVudERlZmF1bHQoKSxlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfX0pfSl9fSx7a2V5OlwiX2hpZGVBbGxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuJGVsZW1lbnQuZmluZChcIi5pcy1kcmlsbGRvd24tc3VibWVudS5pcy1hY3RpdmVcIikuYWRkQ2xhc3MoXCJpcy1jbG9zaW5nXCIpO3RoaXMub3B0aW9ucy5hdXRvSGVpZ2h0JiZ0aGlzLiR3cmFwcGVyLmNzcyh7aGVpZ2h0OmUucGFyZW50KCkuY2xvc2VzdChcInVsXCIpLmRhdGEoXCJjYWxjSGVpZ2h0XCIpfSksZS5vbmUoT2JqZWN0KGwudHJhbnNpdGlvbmVuZCkoZSksZnVuY3Rpb24odCl7ZS5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZSBpcy1jbG9zaW5nXCIpfSksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiY2xvc2VkLnpmLmRyaWxsZG93blwiKX19LHtrZXk6XCJfYmFja1wiLHZhbHVlOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXM7bi5vZmYoXCJjbGljay56Zi5kcmlsbGRvd25cIiksbi5jaGlsZHJlbihcIi5qcy1kcmlsbGRvd24tYmFja1wiKS5vbihcImNsaWNrLnpmLmRyaWxsZG93blwiLGZ1bmN0aW9uKHQpe3Quc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksaS5faGlkZShuKTt2YXIgZT1uLnBhcmVudChcImxpXCIpLnBhcmVudChcInVsXCIpLnBhcmVudChcImxpXCIpO2UubGVuZ3RoJiZpLl9zaG93KGUpfSl9fSx7a2V5OlwiX21lbnVMaW5rRXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuJG1lbnVJdGVtcy5ub3QoXCIuaXMtZHJpbGxkb3duLXN1Ym1lbnUtcGFyZW50XCIpLm9mZihcImNsaWNrLnpmLmRyaWxsZG93blwiKS5vbihcImNsaWNrLnpmLmRyaWxsZG93blwiLGZ1bmN0aW9uKHQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlLl9oaWRlQWxsKCl9LDApfSl9fSx7a2V5OlwiX3NldFNob3dTdWJNZW51Q2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImludmlzaWJsZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIiwhMSksdC5wYXJlbnQoXCJsaVwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCEwKSwhMD09PWUmJnRoaXMuJGVsZW1lbnQudHJpZ2dlcihcIm9wZW4uemYuZHJpbGxkb3duXCIsW3RdKX19LHtrZXk6XCJfc2V0SGlkZVN1Yk1lbnVDbGFzc2VzXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0LnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpLmFkZENsYXNzKFwiaW52aXNpYmxlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLCEwKSx0LnBhcmVudChcImxpXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsITEpLCEwPT09ZSYmdC50cmlnZ2VyKFwiaGlkZS56Zi5kcmlsbGRvd25cIixbdF0pfX0se2tleTpcIl9zaG93TWVudVwiLHZhbHVlOmZ1bmN0aW9uKG4saSl7dmFyIG89dGhpcztpZih0aGlzLiRlbGVtZW50LmZpbmQoJ2xpW2FyaWEtZXhwYW5kZWQ9XCJ0cnVlXCJdID4gdWxbZGF0YS1zdWJtZW51XScpLmVhY2goZnVuY3Rpb24odCl7by5fc2V0SGlkZVN1Yk1lbnVDbGFzc2VzKGEoKSh0aGlzKSl9KSwodGhpcy4kY3VycmVudE1lbnU9bikuaXMoXCJbZGF0YS1kcmlsbGRvd25dXCIpKXJldHVybiEwPT09aSYmbi5maW5kKCdsaVtyb2xlPVwidHJlZWl0ZW1cIl0gPiBhJykuZmlyc3QoKS5mb2N1cygpLHZvaWQodGhpcy5vcHRpb25zLmF1dG9IZWlnaHQmJnRoaXMuJHdyYXBwZXIuY3NzKFwiaGVpZ2h0XCIsbi5kYXRhKFwiY2FsY0hlaWdodFwiKSkpO3ZhciBzPW4uY2hpbGRyZW4oKS5maXJzdCgpLnBhcmVudHNVbnRpbChcIltkYXRhLWRyaWxsZG93bl1cIixcIltkYXRhLXN1Ym1lbnVdXCIpO3MuZWFjaChmdW5jdGlvbih0KXswPT09dCYmby5vcHRpb25zLmF1dG9IZWlnaHQmJm8uJHdyYXBwZXIuY3NzKFwiaGVpZ2h0XCIsYSgpKHRoaXMpLmRhdGEoXCJjYWxjSGVpZ2h0XCIpKTt2YXIgZT10PT1zLmxlbmd0aC0xOyEwPT09ZSYmYSgpKHRoaXMpLm9uZShPYmplY3QobC50cmFuc2l0aW9uZW5kKShhKCkodGhpcykpLGZ1bmN0aW9uKCl7ITA9PT1pJiZuLmZpbmQoJ2xpW3JvbGU9XCJ0cmVlaXRlbVwiXSA+IGEnKS5maXJzdCgpLmZvY3VzKCl9KSxvLl9zZXRTaG93U3ViTWVudUNsYXNzZXMoYSgpKHRoaXMpLGUpfSl9fSx7a2V5OlwiX3Nob3dcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10LmNoaWxkcmVuKFwiW2RhdGEtc3VibWVudV1cIik7dC5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCEwKSwodGhpcy4kY3VycmVudE1lbnU9ZSkuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJpbnZpc2libGVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsITEpLHRoaXMub3B0aW9ucy5hdXRvSGVpZ2h0JiZ0aGlzLiR3cmFwcGVyLmNzcyh7aGVpZ2h0OmUuZGF0YShcImNhbGNIZWlnaHRcIil9KSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJvcGVuLnpmLmRyaWxsZG93blwiLFt0XSl9fSx7a2V5OlwiX2hpZGVcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbnMuYXV0b0hlaWdodCYmdGhpcy4kd3JhcHBlci5jc3Moe2hlaWdodDp0LnBhcmVudCgpLmNsb3Nlc3QoXCJ1bFwiKS5kYXRhKFwiY2FsY0hlaWdodFwiKX0pO3QucGFyZW50KFwibGlcIikuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwhMSksdC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwhMCksdC5hZGRDbGFzcyhcImlzLWNsb3NpbmdcIikub25lKE9iamVjdChsLnRyYW5zaXRpb25lbmQpKHQpLGZ1bmN0aW9uKCl7dC5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZSBpcy1jbG9zaW5nXCIpLHQuYmx1cigpLmFkZENsYXNzKFwiaW52aXNpYmxlXCIpfSksdC50cmlnZ2VyKFwiaGlkZS56Zi5kcmlsbGRvd25cIixbdF0pfX0se2tleTpcIl9nZXRNYXhEaW1zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT0wLHQ9e30sbj10aGlzO3JldHVybiB0aGlzLiRzdWJtZW51cy5hZGQodGhpcy4kZWxlbWVudCkuZWFjaChmdW5jdGlvbigpe2EoKSh0aGlzKS5jaGlsZHJlbihcImxpXCIpLmxlbmd0aDt2YXIgdD11LkJveC5HZXREaW1lbnNpb25zKHRoaXMpLmhlaWdodDtlPWU8dD90OmUsbi5vcHRpb25zLmF1dG9IZWlnaHQmJmEoKSh0aGlzKS5kYXRhKFwiY2FsY0hlaWdodFwiLHQpfSksdGhpcy5vcHRpb25zLmF1dG9IZWlnaHQ/dC5oZWlnaHQ9dGhpcy4kY3VycmVudE1lbnUuZGF0YShcImNhbGNIZWlnaHRcIik6dFtcIm1pbi1oZWlnaHRcIl09XCJcIi5jb25jYXQoZSxcInB4XCIpLHRbXCJtYXgtd2lkdGhcIl09XCJcIi5jb25jYXQodGhpcy4kZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCxcInB4XCIpLHR9fSx7a2V5OlwiX2Rlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5zY3JvbGxUb3AmJnRoaXMuJGVsZW1lbnQub2ZmKFwiLnpmLmRyaWxsZG93blwiLHRoaXMuX2JpbmRIYW5kbGVyKSx0aGlzLl9oaWRlQWxsKCksdGhpcy4kZWxlbWVudC5vZmYoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIpLHMuTmVzdC5CdXJuKHRoaXMuJGVsZW1lbnQsXCJkcmlsbGRvd25cIiksdGhpcy4kZWxlbWVudC51bndyYXAoKS5maW5kKFwiLmpzLWRyaWxsZG93bi1iYWNrLCAuaXMtc3VibWVudS1wYXJlbnQtaXRlbVwiKS5yZW1vdmUoKS5lbmQoKS5maW5kKFwiLmlzLWFjdGl2ZSwgLmlzLWNsb3NpbmcsIC5pcy1kcmlsbGRvd24tc3VibWVudVwiKS5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZSBpcy1jbG9zaW5nIGlzLWRyaWxsZG93bi1zdWJtZW51XCIpLmVuZCgpLmZpbmQoXCJbZGF0YS1zdWJtZW51XVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXggcm9sZVwiKSx0aGlzLiRzdWJtZW51QW5jaG9ycy5lYWNoKGZ1bmN0aW9uKCl7YSgpKHRoaXMpLm9mZihcIi56Zi5kcmlsbGRvd25cIil9KSx0aGlzLiRlbGVtZW50LmZpbmQoXCJbZGF0YS1pcy1wYXJlbnQtbGlua11cIikuZGV0YWNoKCksdGhpcy4kc3VibWVudXMucmVtb3ZlQ2xhc3MoXCJkcmlsbGRvd24tc3VibWVudS1jb3Zlci1wcmV2aW91cyBpbnZpc2libGVcIiksdGhpcy4kZWxlbWVudC5maW5kKFwiYVwiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9YSgpKHRoaXMpO3QucmVtb3ZlQXR0cihcInRhYmluZGV4XCIpLHQuZGF0YShcInNhdmVkSHJlZlwiKSYmdC5hdHRyKFwiaHJlZlwiLHQuZGF0YShcInNhdmVkSHJlZlwiKSkucmVtb3ZlRGF0YShcInNhdmVkSHJlZlwiKX0pfX1dKSYmZChlLnByb3RvdHlwZSxpKSxvJiZkKGUsbyksbn0oKTttLmRlZmF1bHRzPXthdXRvQXBwbHlDbGFzczohMCxiYWNrQnV0dG9uOic8bGkgY2xhc3M9XCJqcy1kcmlsbGRvd24tYmFja1wiPjxhIHRhYmluZGV4PVwiMFwiPkJhY2s8L2E+PC9saT4nLGJhY2tCdXR0b25Qb3NpdGlvbjpcInRvcFwiLHdyYXBwZXI6XCI8ZGl2PjwvZGl2PlwiLHBhcmVudExpbms6ITEsY2xvc2VPbkNsaWNrOiExLGF1dG9IZWlnaHQ6ITEsYW5pbWF0ZUhlaWdodDohMSxzY3JvbGxUb3A6ITEsc2Nyb2xsVG9wRWxlbWVudDpcIlwiLHNjcm9sbFRvcE9mZnNldDowLGFuaW1hdGlvbkR1cmF0aW9uOjUwMCxhbmltYXRpb25FYXNpbmc6XCJzd2luZ1wifX0sXCIuL2pzL2ZvdW5kYXRpb24uZHJvcGRvd24uanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiRHJvcGRvd25cIixmdW5jdGlvbigpe3JldHVybiBtfSk7dmFyIGk9bihcImpxdWVyeVwiKSxzPW4ubihpKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5rZXlib2FyZC5qc1wiKSxyPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24ucG9zaXRpb25hYmxlLmpzXCIpLHU9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLnRyaWdnZXJzLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGModCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGQodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gaCh0LGUsbil7cmV0dXJuKGg9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuZ2V0P1JlZmxlY3QuZ2V0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1mdW5jdGlvbih0LGUpe2Zvcig7IU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpJiZudWxsIT09KHQ9Zih0KSk7KTtyZXR1cm4gdH0odCxlKTtpZihpKXt2YXIgbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksZSk7cmV0dXJuIG8uZ2V0P28uZ2V0LmNhbGwobik6by52YWx1ZX19KSh0LGUsbnx8dCl9ZnVuY3Rpb24gZih0KXtyZXR1cm4oZj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gcCh0LGUpe3JldHVybihwPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgbT1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxkKHRoaXMsZihuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJnAodCxlKX0obixsW1wiUG9zaXRpb25hYmxlXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9cy5hLmV4dGVuZCh7fSxuLmRlZmF1bHRzLHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiRHJvcGRvd25cIix1LlRyaWdnZXJzLmluaXQocy5hKSx0aGlzLl9pbml0KCksYS5LZXlib2FyZC5yZWdpc3RlcihcIkRyb3Bkb3duXCIse0VOVEVSOlwidG9nZ2xlXCIsU1BBQ0U6XCJ0b2dnbGVcIixFU0NBUEU6XCJjbG9zZVwifSl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnQuYXR0cihcImlkXCIpO3RoaXMuJGFuY2hvcnM9cygpKCdbZGF0YS10b2dnbGU9XCInLmNvbmNhdCh0LCdcIl0nKSkubGVuZ3RoP3MoKSgnW2RhdGEtdG9nZ2xlPVwiJy5jb25jYXQodCwnXCJdJykpOnMoKSgnW2RhdGEtb3Blbj1cIicuY29uY2F0KHQsJ1wiXScpKSx0aGlzLiRhbmNob3JzLmF0dHIoe1wiYXJpYS1jb250cm9sc1wiOnQsXCJkYXRhLWlzLWZvY3VzXCI6ITEsXCJkYXRhLXlldGktYm94XCI6dCxcImFyaWEtaGFzcG9wdXBcIjohMCxcImFyaWEtZXhwYW5kZWRcIjohMX0pLHRoaXMuX3NldEN1cnJlbnRBbmNob3IodGhpcy4kYW5jaG9ycy5maXJzdCgpKSx0aGlzLm9wdGlvbnMucGFyZW50Q2xhc3M/dGhpcy4kcGFyZW50PXRoaXMuJGVsZW1lbnQucGFyZW50cyhcIi5cIit0aGlzLm9wdGlvbnMucGFyZW50Q2xhc3MpOnRoaXMuJHBhcmVudD1udWxsLHZvaWQgMD09PXRoaXMuJGVsZW1lbnQuYXR0cihcImFyaWEtbGFiZWxsZWRieVwiKSYmKHZvaWQgMD09PXRoaXMuJGN1cnJlbnRBbmNob3IuYXR0cihcImlkXCIpJiZ0aGlzLiRjdXJyZW50QW5jaG9yLmF0dHIoXCJpZFwiLE9iamVjdChyLkdldFlvRGlnaXRzKSg2LFwiZGQtYW5jaG9yXCIpKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIix0aGlzLiRjdXJyZW50QW5jaG9yLmF0dHIoXCJpZFwiKSkpLHRoaXMuJGVsZW1lbnQuYXR0cih7XCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwiLFwiZGF0YS15ZXRpLWJveFwiOnQsXCJkYXRhLXJlc2l6ZVwiOnR9KSxoKGYobi5wcm90b3R5cGUpLFwiX2luaXRcIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX2V2ZW50cygpfX0se2tleTpcIl9nZXREZWZhdWx0UG9zaXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnRbMF0uY2xhc3NOYW1lLm1hdGNoKC8odG9wfGxlZnR8cmlnaHR8Ym90dG9tKS9nKTtyZXR1cm4gdD90WzBdOlwiYm90dG9tXCJ9fSx7a2V5OlwiX2dldERlZmF1bHRBbGlnbm1lbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PS9mbG9hdC0oXFxTKykvLmV4ZWModGhpcy4kY3VycmVudEFuY2hvci5hdHRyKFwiY2xhc3NcIikpO3JldHVybiB0P3RbMV06aChmKG4ucHJvdG90eXBlKSxcIl9nZXREZWZhdWx0QWxpZ25tZW50XCIsdGhpcykuY2FsbCh0aGlzKX19LHtrZXk6XCJfc2V0UG9zaXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJoYXMtcG9zaXRpb24tXCIuY29uY2F0KHRoaXMucG9zaXRpb24sXCIgaGFzLWFsaWdubWVudC1cIikuY29uY2F0KHRoaXMuYWxpZ25tZW50KSksaChmKG4ucHJvdG90eXBlKSxcIl9zZXRQb3NpdGlvblwiLHRoaXMpLmNhbGwodGhpcyx0aGlzLiRjdXJyZW50QW5jaG9yLHRoaXMuJGVsZW1lbnQsdGhpcy4kcGFyZW50KSx0aGlzLiRlbGVtZW50LmFkZENsYXNzKFwiaGFzLXBvc2l0aW9uLVwiLmNvbmNhdCh0aGlzLnBvc2l0aW9uLFwiIGhhcy1hbGlnbm1lbnQtXCIpLmNvbmNhdCh0aGlzLmFsaWdubWVudCkpfX0se2tleTpcIl9zZXRDdXJyZW50QW5jaG9yXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy4kY3VycmVudEFuY2hvcj1zKCkodCl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLiRlbGVtZW50Lm9uKHtcIm9wZW4uemYudHJpZ2dlclwiOnRoaXMub3Blbi5iaW5kKHRoaXMpLFwiY2xvc2UuemYudHJpZ2dlclwiOnRoaXMuY2xvc2UuYmluZCh0aGlzKSxcInRvZ2dsZS56Zi50cmlnZ2VyXCI6dGhpcy50b2dnbGUuYmluZCh0aGlzKSxcInJlc2l6ZW1lLnpmLnRyaWdnZXJcIjp0aGlzLl9zZXRQb3NpdGlvbi5iaW5kKHRoaXMpfSksdGhpcy4kYW5jaG9ycy5vZmYoXCJjbGljay56Zi50cmlnZ2VyXCIpLm9uKFwiY2xpY2suemYudHJpZ2dlclwiLGZ1bmN0aW9uKCl7bi5fc2V0Q3VycmVudEFuY2hvcih0aGlzKX0pLHRoaXMub3B0aW9ucy5ob3ZlciYmKHRoaXMuJGFuY2hvcnMub2ZmKFwibW91c2VlbnRlci56Zi5kcm9wZG93biBtb3VzZWxlYXZlLnpmLmRyb3Bkb3duXCIpLm9uKFwibW91c2VlbnRlci56Zi5kcm9wZG93blwiLGZ1bmN0aW9uKCl7bi5fc2V0Q3VycmVudEFuY2hvcih0aGlzKTt2YXIgdD1zKCkoXCJib2R5XCIpLmRhdGEoKTt2b2lkIDAhPT10LndoYXRpbnB1dCYmXCJtb3VzZVwiIT09dC53aGF0aW5wdXR8fChjbGVhclRpbWVvdXQobi50aW1lb3V0KSxuLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe24ub3BlbigpLG4uJGFuY2hvcnMuZGF0YShcImhvdmVyXCIsITApfSxuLm9wdGlvbnMuaG92ZXJEZWxheSkpfSkub24oXCJtb3VzZWxlYXZlLnpmLmRyb3Bkb3duXCIsT2JqZWN0KHIuaWdub3JlTW91c2VkaXNhcHBlYXIpKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KG4udGltZW91dCksbi50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuLmNsb3NlKCksbi4kYW5jaG9ycy5kYXRhKFwiaG92ZXJcIiwhMSl9LG4ub3B0aW9ucy5ob3ZlckRlbGF5KX0pKSx0aGlzLm9wdGlvbnMuaG92ZXJQYW5lJiZ0aGlzLiRlbGVtZW50Lm9mZihcIm1vdXNlZW50ZXIuemYuZHJvcGRvd24gbW91c2VsZWF2ZS56Zi5kcm9wZG93blwiKS5vbihcIm1vdXNlZW50ZXIuemYuZHJvcGRvd25cIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChuLnRpbWVvdXQpfSkub24oXCJtb3VzZWxlYXZlLnpmLmRyb3Bkb3duXCIsT2JqZWN0KHIuaWdub3JlTW91c2VkaXNhcHBlYXIpKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KG4udGltZW91dCksbi50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuLmNsb3NlKCksbi4kYW5jaG9ycy5kYXRhKFwiaG92ZXJcIiwhMSl9LG4ub3B0aW9ucy5ob3ZlckRlbGF5KX0pKSksdGhpcy4kYW5jaG9ycy5hZGQodGhpcy4kZWxlbWVudCkub24oXCJrZXlkb3duLnpmLmRyb3Bkb3duXCIsZnVuY3Rpb24odCl7dmFyIGU9cygpKHRoaXMpO2EuS2V5Ym9hcmQuZmluZEZvY3VzYWJsZShuLiRlbGVtZW50KTthLktleWJvYXJkLmhhbmRsZUtleSh0LFwiRHJvcGRvd25cIix7b3BlbjpmdW5jdGlvbigpe2UuaXMobi4kYW5jaG9ycykmJiFlLmlzKFwiaW5wdXQsIHRleHRhcmVhXCIpJiYobi5vcGVuKCksbi4kZWxlbWVudC5hdHRyKFwidGFiaW5kZXhcIiwtMSkuZm9jdXMoKSx0LnByZXZlbnREZWZhdWx0KCkpfSxjbG9zZTpmdW5jdGlvbigpe24uY2xvc2UoKSxuLiRhbmNob3JzLmZvY3VzKCl9fSl9KX19LHtrZXk6XCJfYWRkQm9keUhhbmRsZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXMoKShkb2N1bWVudC5ib2R5KS5ub3QodGhpcy4kZWxlbWVudCksbj10aGlzO2Uub2ZmKFwiY2xpY2suemYuZHJvcGRvd25cIikub24oXCJjbGljay56Zi5kcm9wZG93blwiLGZ1bmN0aW9uKHQpe24uJGFuY2hvcnMuaXModC50YXJnZXQpfHxuLiRhbmNob3JzLmZpbmQodC50YXJnZXQpLmxlbmd0aHx8bi4kZWxlbWVudC5pcyh0LnRhcmdldCl8fG4uJGVsZW1lbnQuZmluZCh0LnRhcmdldCkubGVuZ3RofHwobi5jbG9zZSgpLGUub2ZmKFwiY2xpY2suemYuZHJvcGRvd25cIikpfSl9fSx7a2V5Olwib3BlblwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiY2xvc2VtZS56Zi5kcm9wZG93blwiLHRoaXMuJGVsZW1lbnQuYXR0cihcImlkXCIpKSx0aGlzLiRhbmNob3JzLmFkZENsYXNzKFwiaG92ZXJcIikuYXR0cih7XCJhcmlhLWV4cGFuZGVkXCI6ITB9KSx0aGlzLiRlbGVtZW50LmFkZENsYXNzKFwiaXMtb3BlbmluZ1wiKSx0aGlzLl9zZXRQb3NpdGlvbigpLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJpcy1vcGVuaW5nXCIpLmFkZENsYXNzKFwiaXMtb3BlblwiKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6ITF9KSx0aGlzLm9wdGlvbnMuYXV0b0ZvY3VzKXt2YXIgdD1hLktleWJvYXJkLmZpbmRGb2N1c2FibGUodGhpcy4kZWxlbWVudCk7dC5sZW5ndGgmJnQuZXEoMCkuZm9jdXMoKX10aGlzLm9wdGlvbnMuY2xvc2VPbkNsaWNrJiZ0aGlzLl9hZGRCb2R5SGFuZGxlcigpLHRoaXMub3B0aW9ucy50cmFwRm9jdXMmJmEuS2V5Ym9hcmQudHJhcEZvY3VzKHRoaXMuJGVsZW1lbnQpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcInNob3cuemYuZHJvcGRvd25cIixbdGhpcy4kZWxlbWVudF0pfX0se2tleTpcImNsb3NlXCIsdmFsdWU6ZnVuY3Rpb24oKXtpZighdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImlzLW9wZW5cIikpcmV0dXJuITE7dGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhcImlzLW9wZW5cIikuYXR0cih7XCJhcmlhLWhpZGRlblwiOiEwfSksdGhpcy4kYW5jaG9ycy5yZW1vdmVDbGFzcyhcImhvdmVyXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsITEpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcImhpZGUuemYuZHJvcGRvd25cIixbdGhpcy4kZWxlbWVudF0pLHRoaXMub3B0aW9ucy50cmFwRm9jdXMmJmEuS2V5Ym9hcmQucmVsZWFzZUZvY3VzKHRoaXMuJGVsZW1lbnQpfX0se2tleTpcInRvZ2dsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImlzLW9wZW5cIikpe2lmKHRoaXMuJGFuY2hvcnMuZGF0YShcImhvdmVyXCIpKXJldHVybjt0aGlzLmNsb3NlKCl9ZWxzZSB0aGlzLm9wZW4oKX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5vZmYoXCIuemYudHJpZ2dlclwiKS5oaWRlKCksdGhpcy4kYW5jaG9ycy5vZmYoXCIuemYuZHJvcGRvd25cIikscygpKGRvY3VtZW50LmJvZHkpLm9mZihcImNsaWNrLnpmLmRyb3Bkb3duXCIpfX1dKSYmYyhlLnByb3RvdHlwZSxpKSxvJiZjKGUsbyksbn0oKTttLmRlZmF1bHRzPXtwYXJlbnRDbGFzczpudWxsLGhvdmVyRGVsYXk6MjUwLGhvdmVyOiExLGhvdmVyUGFuZTohMSx2T2Zmc2V0OjAsaE9mZnNldDowLHBvc2l0aW9uOlwiYXV0b1wiLGFsaWdubWVudDpcImF1dG9cIixhbGxvd092ZXJsYXA6ITEsYWxsb3dCb3R0b21PdmVybGFwOiEwLHRyYXBGb2N1czohMSxhdXRvRm9jdXM6ITEsY2xvc2VPbkNsaWNrOiExfX0sXCIuL2pzL2ZvdW5kYXRpb24uZHJvcGRvd25NZW51LmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIkRyb3Bkb3duTWVudVwiLGZ1bmN0aW9uKCl7cmV0dXJuIG19KTt2YXIgaT1uKFwianF1ZXJ5XCIpLGg9bi5uKGkpLHM9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnBsdWdpbi5qc1wiKSxyPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxmPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5rZXlib2FyZC5qc1wiKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5uZXN0LmpzXCIpLGw9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLmJveC5qc1wiKTtmdW5jdGlvbiBvKHQpe3JldHVybihvPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiB1KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBjKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1vKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGQodCl7cmV0dXJuKGQ9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4ocD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIG09ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsbiksYyh0aGlzLGQobikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZwKHQsZSl9KG4sc1tcIlBsdWdpblwiXSksZT1uLChpPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPWguYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIkRyb3Bkb3duTWVudVwiLHRoaXMuX2luaXQoKSxmLktleWJvYXJkLnJlZ2lzdGVyKFwiRHJvcGRvd25NZW51XCIse0VOVEVSOlwib3BlblwiLFNQQUNFOlwib3BlblwiLEFSUk9XX1JJR0hUOlwibmV4dFwiLEFSUk9XX1VQOlwidXBcIixBUlJPV19ET1dOOlwiZG93blwiLEFSUk9XX0xFRlQ6XCJwcmV2aW91c1wiLEVTQ0FQRTpcImNsb3NlXCJ9KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7YS5OZXN0LkZlYXRoZXIodGhpcy4kZWxlbWVudCxcImRyb3Bkb3duXCIpO3ZhciB0PXRoaXMuJGVsZW1lbnQuZmluZChcImxpLmlzLWRyb3Bkb3duLXN1Ym1lbnUtcGFyZW50XCIpO3RoaXMuJGVsZW1lbnQuY2hpbGRyZW4oXCIuaXMtZHJvcGRvd24tc3VibWVudS1wYXJlbnRcIikuY2hpbGRyZW4oXCIuaXMtZHJvcGRvd24tc3VibWVudVwiKS5hZGRDbGFzcyhcImZpcnN0LXN1YlwiKSx0aGlzLiRtZW51SXRlbXM9dGhpcy4kZWxlbWVudC5maW5kKCdbcm9sZT1cIm1lbnVpdGVtXCJdJyksdGhpcy4kdGFicz10aGlzLiRlbGVtZW50LmNoaWxkcmVuKCdbcm9sZT1cIm1lbnVpdGVtXCJdJyksdGhpcy4kdGFicy5maW5kKFwidWwuaXMtZHJvcGRvd24tc3VibWVudVwiKS5hZGRDbGFzcyh0aGlzLm9wdGlvbnMudmVydGljYWxDbGFzcyksXCJhdXRvXCI9PT10aGlzLm9wdGlvbnMuYWxpZ25tZW50P3RoaXMuJGVsZW1lbnQuaGFzQ2xhc3ModGhpcy5vcHRpb25zLnJpZ2h0Q2xhc3MpfHxPYmplY3Qoci5ydGwpKCl8fHRoaXMuJGVsZW1lbnQucGFyZW50cyhcIi50b3AtYmFyLXJpZ2h0XCIpLmlzKFwiKlwiKT8odGhpcy5vcHRpb25zLmFsaWdubWVudD1cInJpZ2h0XCIsdC5hZGRDbGFzcyhcIm9wZW5zLWxlZnRcIikpOih0aGlzLm9wdGlvbnMuYWxpZ25tZW50PVwibGVmdFwiLHQuYWRkQ2xhc3MoXCJvcGVucy1yaWdodFwiKSk6XCJyaWdodFwiPT09dGhpcy5vcHRpb25zLmFsaWdubWVudD90LmFkZENsYXNzKFwib3BlbnMtbGVmdFwiKTp0LmFkZENsYXNzKFwib3BlbnMtcmlnaHRcIiksdGhpcy5jaGFuZ2VkPSExLHRoaXMuX2V2ZW50cygpfX0se2tleTpcIl9pc1ZlcnRpY2FsXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cImJsb2NrXCI9PT10aGlzLiR0YWJzLmNzcyhcImRpc3BsYXlcIil8fFwiY29sdW1uXCI9PT10aGlzLiRlbGVtZW50LmNzcyhcImZsZXgtZGlyZWN0aW9uXCIpfX0se2tleTpcIl9pc1J0bFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJhbGlnbi1yaWdodFwiKXx8T2JqZWN0KHIucnRsKSgpJiYhdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImFsaWduLWxlZnRcIil9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcyxzPVwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3d8fHZvaWQgMCE9PXdpbmRvdy5vbnRvdWNoc3RhcnQsYT1cImlzLWRyb3Bkb3duLXN1Ym1lbnUtcGFyZW50XCI7KHRoaXMub3B0aW9ucy5jbGlja09wZW58fHMpJiZ0aGlzLiRtZW51SXRlbXMub24oXCJjbGljay56Zi5kcm9wZG93bm1lbnUgdG91Y2hzdGFydC56Zi5kcm9wZG93bm1lbnVcIixmdW5jdGlvbih0KXt2YXIgZT1oKCkodC50YXJnZXQpLnBhcmVudHNVbnRpbChcInVsXCIsXCIuXCIuY29uY2F0KGEpKSxuPWUuaGFzQ2xhc3MoYSksaT1cInRydWVcIj09PWUuYXR0cihcImRhdGEtaXMtY2xpY2tcIiksbz1lLmNoaWxkcmVuKFwiLmlzLWRyb3Bkb3duLXN1Ym1lbnVcIik7aWYobilpZihpKXtpZighZC5vcHRpb25zLmNsb3NlT25DbGlja3x8IWQub3B0aW9ucy5jbGlja09wZW4mJiFzfHxkLm9wdGlvbnMuZm9yY2VGb2xsb3cmJnMpcmV0dXJuO3Quc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLGQuX2hpZGUoZSl9ZWxzZSB0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSxkLl9zaG93KG8pLGUuYWRkKGUucGFyZW50c1VudGlsKGQuJGVsZW1lbnQsXCIuXCIuY29uY2F0KGEpKSkuYXR0cihcImRhdGEtaXMtY2xpY2tcIiwhMCl9KSxkLm9wdGlvbnMuY2xvc2VPbkNsaWNrSW5zaWRlJiZ0aGlzLiRtZW51SXRlbXMub24oXCJjbGljay56Zi5kcm9wZG93bm1lbnVcIixmdW5jdGlvbih0KXtoKCkodGhpcykuaGFzQ2xhc3MoYSl8fGQuX2hpZGUoKX0pLHRoaXMub3B0aW9ucy5kaXNhYmxlSG92ZXJ8fHRoaXMuJG1lbnVJdGVtcy5vbihcIm1vdXNlZW50ZXIuemYuZHJvcGRvd25tZW51XCIsZnVuY3Rpb24odCl7dmFyIGU9aCgpKHRoaXMpO2UuaGFzQ2xhc3MoYSkmJihjbGVhclRpbWVvdXQoZS5kYXRhKFwiX2RlbGF5XCIpKSxlLmRhdGEoXCJfZGVsYXlcIixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5fc2hvdyhlLmNoaWxkcmVuKFwiLmlzLWRyb3Bkb3duLXN1Ym1lbnVcIikpfSxkLm9wdGlvbnMuaG92ZXJEZWxheSkpKX0pLm9uKFwibW91c2VsZWF2ZS56Zi5kcm9wZG93bk1lbnVcIixPYmplY3Qoci5pZ25vcmVNb3VzZWRpc2FwcGVhcikoZnVuY3Rpb24odCl7dmFyIGU9aCgpKHRoaXMpO2lmKGUuaGFzQ2xhc3MoYSkmJmQub3B0aW9ucy5hdXRvY2xvc2Upe2lmKFwidHJ1ZVwiPT09ZS5hdHRyKFwiZGF0YS1pcy1jbGlja1wiKSYmZC5vcHRpb25zLmNsaWNrT3BlbilyZXR1cm4hMTtjbGVhclRpbWVvdXQoZS5kYXRhKFwiX2RlbGF5XCIpKSxlLmRhdGEoXCJfZGVsYXlcIixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5faGlkZShlKX0sZC5vcHRpb25zLmNsb3NpbmdUaW1lKSl9fSkpLHRoaXMuJG1lbnVJdGVtcy5vbihcImtleWRvd24uemYuZHJvcGRvd25tZW51XCIsZnVuY3Rpb24oZSl7dmFyIG4saSxvPWgoKShlLnRhcmdldCkucGFyZW50c1VudGlsKFwidWxcIiwnW3JvbGU9XCJtZW51aXRlbVwiXScpLHQ9LTE8ZC4kdGFicy5pbmRleChvKSxzPXQ/ZC4kdGFiczpvLnNpYmxpbmdzKFwibGlcIikuYWRkKG8pO3MuZWFjaChmdW5jdGlvbih0KXtpZihoKCkodGhpcykuaXMobykpcmV0dXJuIG49cy5lcSh0LTEpLHZvaWQoaT1zLmVxKHQrMSkpfSk7dmFyIGE9ZnVuY3Rpb24oKXtpLmNoaWxkcmVuKFwiYTpmaXJzdFwiKS5mb2N1cygpLGUucHJldmVudERlZmF1bHQoKX0scj1mdW5jdGlvbigpe24uY2hpbGRyZW4oXCJhOmZpcnN0XCIpLmZvY3VzKCksZS5wcmV2ZW50RGVmYXVsdCgpfSxsPWZ1bmN0aW9uKCl7dmFyIHQ9by5jaGlsZHJlbihcInVsLmlzLWRyb3Bkb3duLXN1Ym1lbnVcIik7dC5sZW5ndGgmJihkLl9zaG93KHQpLG8uZmluZChcImxpID4gYTpmaXJzdFwiKS5mb2N1cygpLGUucHJldmVudERlZmF1bHQoKSl9LHU9ZnVuY3Rpb24oKXt2YXIgdD1vLnBhcmVudChcInVsXCIpLnBhcmVudChcImxpXCIpO3QuY2hpbGRyZW4oXCJhOmZpcnN0XCIpLmZvY3VzKCksZC5faGlkZSh0KSxlLnByZXZlbnREZWZhdWx0KCl9LGM9e29wZW46bCxjbG9zZTpmdW5jdGlvbigpe2QuX2hpZGUoZC4kZWxlbWVudCksZC4kbWVudUl0ZW1zLmVxKDApLmNoaWxkcmVuKFwiYVwiKS5mb2N1cygpLGUucHJldmVudERlZmF1bHQoKX0saGFuZGxlZDpmdW5jdGlvbigpe2Uuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9fTt0P2QuX2lzVmVydGljYWwoKT9kLl9pc1J0bCgpP2guYS5leHRlbmQoYyx7ZG93bjphLHVwOnIsbmV4dDp1LHByZXZpb3VzOmx9KTpoLmEuZXh0ZW5kKGMse2Rvd246YSx1cDpyLG5leHQ6bCxwcmV2aW91czp1fSk6ZC5faXNSdGwoKT9oLmEuZXh0ZW5kKGMse25leHQ6cixwcmV2aW91czphLGRvd246bCx1cDp1fSk6aC5hLmV4dGVuZChjLHtuZXh0OmEscHJldmlvdXM6cixkb3duOmwsdXA6dX0pOmQuX2lzUnRsKCk/aC5hLmV4dGVuZChjLHtuZXh0OnUscHJldmlvdXM6bCxkb3duOmEsdXA6cn0pOmguYS5leHRlbmQoYyx7bmV4dDpsLHByZXZpb3VzOnUsZG93bjphLHVwOnJ9KSxmLktleWJvYXJkLmhhbmRsZUtleShlLFwiRHJvcGRvd25NZW51XCIsYyl9KX19LHtrZXk6XCJfYWRkQm9keUhhbmRsZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWgoKShkb2N1bWVudC5ib2R5KSxuPXRoaXM7ZS5vZmYoXCJtb3VzZXVwLnpmLmRyb3Bkb3dubWVudSB0b3VjaGVuZC56Zi5kcm9wZG93bm1lbnVcIikub24oXCJtb3VzZXVwLnpmLmRyb3Bkb3dubWVudSB0b3VjaGVuZC56Zi5kcm9wZG93bm1lbnVcIixmdW5jdGlvbih0KXtuLiRlbGVtZW50LmZpbmQodC50YXJnZXQpLmxlbmd0aHx8KG4uX2hpZGUoKSxlLm9mZihcIm1vdXNldXAuemYuZHJvcGRvd25tZW51IHRvdWNoZW5kLnpmLmRyb3Bkb3dubWVudVwiKSl9KX19LHtrZXk6XCJfc2hvd1wiLHZhbHVlOmZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMuJHRhYnMuaW5kZXgodGhpcy4kdGFicy5maWx0ZXIoZnVuY3Rpb24odCxlKXtyZXR1cm4gMDxoKCkoZSkuZmluZChuKS5sZW5ndGh9KSksZT1uLnBhcmVudChcImxpLmlzLWRyb3Bkb3duLXN1Ym1lbnUtcGFyZW50XCIpLnNpYmxpbmdzKFwibGkuaXMtZHJvcGRvd24tc3VibWVudS1wYXJlbnRcIik7dGhpcy5faGlkZShlLHQpLG4uY3NzKFwidmlzaWJpbGl0eVwiLFwiaGlkZGVuXCIpLmFkZENsYXNzKFwianMtZHJvcGRvd24tYWN0aXZlXCIpLnBhcmVudChcImxpLmlzLWRyb3Bkb3duLXN1Ym1lbnUtcGFyZW50XCIpLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpO3ZhciBpPWwuQm94LkltTm90VG91Y2hpbmdZb3UobixudWxsLCEwKTtpZighaSl7dmFyIG89XCJsZWZ0XCI9PT10aGlzLm9wdGlvbnMuYWxpZ25tZW50P1wiLXJpZ2h0XCI6XCItbGVmdFwiLHM9bi5wYXJlbnQoXCIuaXMtZHJvcGRvd24tc3VibWVudS1wYXJlbnRcIik7cy5yZW1vdmVDbGFzcyhcIm9wZW5zXCIuY29uY2F0KG8pKS5hZGRDbGFzcyhcIm9wZW5zLVwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuYWxpZ25tZW50KSksKGk9bC5Cb3guSW1Ob3RUb3VjaGluZ1lvdShuLG51bGwsITApKXx8cy5yZW1vdmVDbGFzcyhcIm9wZW5zLVwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuYWxpZ25tZW50KSkuYWRkQ2xhc3MoXCJvcGVucy1pbm5lclwiKSx0aGlzLmNoYW5nZWQ9ITB9bi5jc3MoXCJ2aXNpYmlsaXR5XCIsXCJcIiksdGhpcy5vcHRpb25zLmNsb3NlT25DbGljayYmdGhpcy5fYWRkQm9keUhhbmRsZXIoKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJzaG93LnpmLmRyb3Bkb3dubWVudVwiLFtuXSl9fSx7a2V5OlwiX2hpZGVcIix2YWx1ZTpmdW5jdGlvbih0LG4pe3ZhciBlO2lmKChlPXQmJnQubGVuZ3RoP3Q6dm9pZCAwIT09bj90aGlzLiR0YWJzLm5vdChmdW5jdGlvbih0LGUpe3JldHVybiB0PT09bn0pOnRoaXMuJGVsZW1lbnQpLmhhc0NsYXNzKFwiaXMtYWN0aXZlXCIpfHwwPGUuZmluZChcIi5pcy1hY3RpdmVcIikubGVuZ3RoKXtpZihlLmZpbmQoXCJsaS5pcy1hY3RpdmVcIikuYWRkKGUpLmF0dHIoe1wiZGF0YS1pcy1jbGlja1wiOiExfSkucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIiksZS5maW5kKFwidWwuanMtZHJvcGRvd24tYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwianMtZHJvcGRvd24tYWN0aXZlXCIpLHRoaXMuY2hhbmdlZHx8ZS5maW5kKFwib3BlbnMtaW5uZXJcIikubGVuZ3RoKXt2YXIgaT1cImxlZnRcIj09PXRoaXMub3B0aW9ucy5hbGlnbm1lbnQ/XCJyaWdodFwiOlwibGVmdFwiO2UuZmluZChcImxpLmlzLWRyb3Bkb3duLXN1Ym1lbnUtcGFyZW50XCIpLmFkZChlKS5yZW1vdmVDbGFzcyhcIm9wZW5zLWlubmVyIG9wZW5zLVwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuYWxpZ25tZW50KSkuYWRkQ2xhc3MoXCJvcGVucy1cIi5jb25jYXQoaSkpLHRoaXMuY2hhbmdlZD0hMX10aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJoaWRlLnpmLmRyb3Bkb3dubWVudVwiLFtlXSl9fX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRtZW51SXRlbXMub2ZmKFwiLnpmLmRyb3Bkb3dubWVudVwiKS5yZW1vdmVBdHRyKFwiZGF0YS1pcy1jbGlja1wiKS5yZW1vdmVDbGFzcyhcImlzLXJpZ2h0LWFycm93IGlzLWxlZnQtYXJyb3cgaXMtZG93bi1hcnJvdyBvcGVucy1yaWdodCBvcGVucy1sZWZ0IG9wZW5zLWlubmVyXCIpLGgoKShkb2N1bWVudC5ib2R5KS5vZmYoXCIuemYuZHJvcGRvd25tZW51XCIpLGEuTmVzdC5CdXJuKHRoaXMuJGVsZW1lbnQsXCJkcm9wZG93blwiKX19XSkmJnUoZS5wcm90b3R5cGUsaSksbyYmdShlLG8pLG59KCk7bS5kZWZhdWx0cz17ZGlzYWJsZUhvdmVyOiExLGF1dG9jbG9zZTohMCxob3ZlckRlbGF5OjUwLGNsaWNrT3BlbjohMSxjbG9zaW5nVGltZTo1MDAsYWxpZ25tZW50OlwiYXV0b1wiLGNsb3NlT25DbGljazohMCxjbG9zZU9uQ2xpY2tJbnNpZGU6ITAsdmVydGljYWxDbGFzczpcInZlcnRpY2FsXCIscmlnaHRDbGFzczpcImFsaWduLXJpZ2h0XCIsZm9yY2VGb2xsb3c6ITB9fSxcIi4vanMvZm91bmRhdGlvbi5lcXVhbGl6ZXIuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiRXF1YWxpemVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gcH0pO3ZhciBpPW4oXCJqcXVlcnlcIiksZD1uLm4oaSkscz1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubWVkaWFRdWVyeS5qc1wiKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5pbWFnZUxvYWRlci5qc1wiKSxyPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIik7ZnVuY3Rpb24gbyh0KXtyZXR1cm4obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gdSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gYyh0LGUpe3JldHVybiFlfHxcIm9iamVjdFwiIT09byhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDAhPT10KXJldHVybiB0O3Rocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKX0odCk6ZX1mdW5jdGlvbiBoKHQpe3JldHVybihoPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9KSh0KX1mdW5jdGlvbiBmKHQsZSl7cmV0dXJuKGY9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9KSh0LGUpfXZhciBwPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLG4pLGModGhpcyxoKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9dmFyIGUsaSxvO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmZih0LGUpfShuLGxbXCJQbHVnaW5cIl0pLGU9biwoaT1be2tleTpcIl9zZXR1cFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudD10LHRoaXMub3B0aW9ucz1kLmEuZXh0ZW5kKHt9LG4uZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksZSksdGhpcy5jbGFzc05hbWU9XCJFcXVhbGl6ZXJcIix0aGlzLl9pbml0KCl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnQuYXR0cihcImRhdGEtZXF1YWxpemVyXCIpfHxcIlwiLGU9dGhpcy4kZWxlbWVudC5maW5kKCdbZGF0YS1lcXVhbGl6ZXItd2F0Y2g9XCInLmNvbmNhdCh0LCdcIl0nKSk7cy5NZWRpYVF1ZXJ5Ll9pbml0KCksdGhpcy4kd2F0Y2hlZD1lLmxlbmd0aD9lOnRoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLWVxdWFsaXplci13YXRjaF1cIiksdGhpcy4kZWxlbWVudC5hdHRyKFwiZGF0YS1yZXNpemVcIix0fHxPYmplY3Qoci5HZXRZb0RpZ2l0cykoNixcImVxXCIpKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJkYXRhLW11dGF0ZVwiLHR8fE9iamVjdChyLkdldFlvRGlnaXRzKSg2LFwiZXFcIikpLHRoaXMuaGFzTmVzdGVkPTA8dGhpcy4kZWxlbWVudC5maW5kKFwiW2RhdGEtZXF1YWxpemVyXVwiKS5sZW5ndGgsdGhpcy5pc05lc3RlZD0wPHRoaXMuJGVsZW1lbnQucGFyZW50c1VudGlsKGRvY3VtZW50LmJvZHksXCJbZGF0YS1lcXVhbGl6ZXJdXCIpLmxlbmd0aCx0aGlzLmlzT249ITEsdGhpcy5fYmluZEhhbmRsZXI9e29uUmVzaXplTWVCb3VuZDp0aGlzLl9vblJlc2l6ZU1lLmJpbmQodGhpcyksb25Qb3N0RXF1YWxpemVkQm91bmQ6dGhpcy5fb25Qb3N0RXF1YWxpemVkLmJpbmQodGhpcyl9O3ZhciBuLGk9dGhpcy4kZWxlbWVudC5maW5kKFwiaW1nXCIpO3RoaXMub3B0aW9ucy5lcXVhbGl6ZU9uPyhuPXRoaXMuX2NoZWNrTVEoKSxkKCkod2luZG93KS5vbihcImNoYW5nZWQuemYubWVkaWFxdWVyeVwiLHRoaXMuX2NoZWNrTVEuYmluZCh0aGlzKSkpOnRoaXMuX2V2ZW50cygpLCh2b2lkIDAhPT1uJiYhMT09PW58fHZvaWQgMD09PW4pJiYoaS5sZW5ndGg/T2JqZWN0KGEub25JbWFnZXNMb2FkZWQpKGksdGhpcy5fcmVmbG93LmJpbmQodGhpcykpOnRoaXMuX3JlZmxvdygpKX19LHtrZXk6XCJfcGF1c2VFdmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaXNPbj0hMSx0aGlzLiRlbGVtZW50Lm9mZih7XCIuemYuZXF1YWxpemVyXCI6dGhpcy5fYmluZEhhbmRsZXIub25Qb3N0RXF1YWxpemVkQm91bmQsXCJyZXNpemVtZS56Zi50cmlnZ2VyXCI6dGhpcy5fYmluZEhhbmRsZXIub25SZXNpemVNZUJvdW5kLFwibXV0YXRlbWUuemYudHJpZ2dlclwiOnRoaXMuX2JpbmRIYW5kbGVyLm9uUmVzaXplTWVCb3VuZH0pfX0se2tleTpcIl9vblJlc2l6ZU1lXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5fcmVmbG93KCl9fSx7a2V5OlwiX29uUG9zdEVxdWFsaXplZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3QudGFyZ2V0IT09dGhpcy4kZWxlbWVudFswXSYmdGhpcy5fcmVmbG93KCl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcGF1c2VFdmVudHMoKSx0aGlzLmhhc05lc3RlZD90aGlzLiRlbGVtZW50Lm9uKFwicG9zdGVxdWFsaXplZC56Zi5lcXVhbGl6ZXJcIix0aGlzLl9iaW5kSGFuZGxlci5vblBvc3RFcXVhbGl6ZWRCb3VuZCk6KHRoaXMuJGVsZW1lbnQub24oXCJyZXNpemVtZS56Zi50cmlnZ2VyXCIsdGhpcy5fYmluZEhhbmRsZXIub25SZXNpemVNZUJvdW5kKSx0aGlzLiRlbGVtZW50Lm9uKFwibXV0YXRlbWUuemYudHJpZ2dlclwiLHRoaXMuX2JpbmRIYW5kbGVyLm9uUmVzaXplTWVCb3VuZCkpLHRoaXMuaXNPbj0hMH19LHtrZXk6XCJfY2hlY2tNUVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9IXMuTWVkaWFRdWVyeS5pcyh0aGlzLm9wdGlvbnMuZXF1YWxpemVPbik7cmV0dXJuIHQ/dGhpcy5pc09uJiYodGhpcy5fcGF1c2VFdmVudHMoKSx0aGlzLiR3YXRjaGVkLmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKSk6dGhpcy5pc09ufHx0aGlzLl9ldmVudHMoKSx0fX0se2tleTpcIl9raWxsc3dpdGNoXCIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5OlwiX3JlZmxvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoIXRoaXMub3B0aW9ucy5lcXVhbGl6ZU9uU3RhY2smJnRoaXMuX2lzU3RhY2tlZCgpKXJldHVybiB0aGlzLiR3YXRjaGVkLmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKSwhMTt0aGlzLm9wdGlvbnMuZXF1YWxpemVCeVJvdz90aGlzLmdldEhlaWdodHNCeVJvdyh0aGlzLmFwcGx5SGVpZ2h0QnlSb3cuYmluZCh0aGlzKSk6dGhpcy5nZXRIZWlnaHRzKHRoaXMuYXBwbHlIZWlnaHQuYmluZCh0aGlzKSl9fSx7a2V5OlwiX2lzU3RhY2tlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuJHdhdGNoZWRbMF18fCF0aGlzLiR3YXRjaGVkWzFdfHx0aGlzLiR3YXRjaGVkWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCE9PXRoaXMuJHdhdGNoZWRbMV0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wfX0se2tleTpcImdldEhlaWdodHNcIix2YWx1ZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0wLGk9dGhpcy4kd2F0Y2hlZC5sZW5ndGg7bjxpO24rKyl0aGlzLiR3YXRjaGVkW25dLnN0eWxlLmhlaWdodD1cImF1dG9cIixlLnB1c2godGhpcy4kd2F0Y2hlZFtuXS5vZmZzZXRIZWlnaHQpO3QoZSl9fSx7a2V5OlwiZ2V0SGVpZ2h0c0J5Um93XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy4kd2F0Y2hlZC5sZW5ndGg/dGhpcy4kd2F0Y2hlZC5maXJzdCgpLm9mZnNldCgpLnRvcDowLG49W10saT0wO25baV09W107Zm9yKHZhciBvPTAscz10aGlzLiR3YXRjaGVkLmxlbmd0aDtvPHM7bysrKXt0aGlzLiR3YXRjaGVkW29dLnN0eWxlLmhlaWdodD1cImF1dG9cIjt2YXIgYT1kKCkodGhpcy4kd2F0Y2hlZFtvXSkub2Zmc2V0KCkudG9wO2EhPWUmJihuWysraV09W10sZT1hKSxuW2ldLnB1c2goW3RoaXMuJHdhdGNoZWRbb10sdGhpcy4kd2F0Y2hlZFtvXS5vZmZzZXRIZWlnaHRdKX1mb3IodmFyIHI9MCxsPW4ubGVuZ3RoO3I8bDtyKyspe3ZhciB1PWQoKShuW3JdKS5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1sxXX0pLmdldCgpLGM9TWF0aC5tYXguYXBwbHkobnVsbCx1KTtuW3JdLnB1c2goYyl9dChuKX19LHtrZXk6XCJhcHBseUhlaWdodFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPU1hdGgubWF4LmFwcGx5KG51bGwsdCk7dGhpcy4kZWxlbWVudC50cmlnZ2VyKFwicHJlZXF1YWxpemVkLnpmLmVxdWFsaXplclwiKSx0aGlzLiR3YXRjaGVkLmNzcyhcImhlaWdodFwiLGUpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcInBvc3RlcXVhbGl6ZWQuemYuZXF1YWxpemVyXCIpfX0se2tleTpcImFwcGx5SGVpZ2h0QnlSb3dcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJwcmVlcXVhbGl6ZWQuemYuZXF1YWxpemVyXCIpO2Zvcih2YXIgZT0wLG49dC5sZW5ndGg7ZTxuO2UrKyl7dmFyIGk9dFtlXS5sZW5ndGgsbz10W2VdW2ktMV07aWYoaTw9MilkKCkodFtlXVswXVswXSkuY3NzKHtoZWlnaHQ6XCJhdXRvXCJ9KTtlbHNle3RoaXMuJGVsZW1lbnQudHJpZ2dlcihcInByZWVxdWFsaXplZHJvdy56Zi5lcXVhbGl6ZXJcIik7Zm9yKHZhciBzPTAsYT1pLTE7czxhO3MrKylkKCkodFtlXVtzXVswXSkuY3NzKHtoZWlnaHQ6b30pO3RoaXMuJGVsZW1lbnQudHJpZ2dlcihcInBvc3RlcXVhbGl6ZWRyb3cuemYuZXF1YWxpemVyXCIpfX10aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJwb3N0ZXF1YWxpemVkLnpmLmVxdWFsaXplclwiKX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcGF1c2VFdmVudHMoKSx0aGlzLiR3YXRjaGVkLmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKX19XSkmJnUoZS5wcm90b3R5cGUsaSksbyYmdShlLG8pLG59KCk7cC5kZWZhdWx0cz17ZXF1YWxpemVPblN0YWNrOiExLGVxdWFsaXplQnlSb3c6ITEsZXF1YWxpemVPbjpcIlwifX0sXCIuL2pzL2ZvdW5kYXRpb24uaW50ZXJjaGFuZ2UuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiSW50ZXJjaGFuZ2VcIixmdW5jdGlvbigpe3JldHVybiBmfSk7dmFyIGk9bihcImpxdWVyeVwiKSxvPW4ubihpKSxzPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tZWRpYVF1ZXJ5LmpzXCIpLGE9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnBsdWdpbi5qc1wiKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKTtmdW5jdGlvbiByKHQpe3JldHVybihyPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiB1KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBjKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1yKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGQodCl7cmV0dXJuKGQ9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4oaD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIGY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gcigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsciksYyh0aGlzLGQocikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxuLGk7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZoKHQsZSl9KHIsYVtcIlBsdWdpblwiXSksZT1yLChuPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPW8uYS5leHRlbmQoe30sci5kZWZhdWx0cyxlKSx0aGlzLnJ1bGVzPVtdLHRoaXMuY3VycmVudFBhdGg9XCJcIix0aGlzLmNsYXNzTmFtZT1cIkludGVyY2hhbmdlXCIsdGhpcy5faW5pdCgpLHRoaXMuX2V2ZW50cygpfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXtzLk1lZGlhUXVlcnkuX2luaXQoKTt2YXIgdD10aGlzLiRlbGVtZW50WzBdLmlkfHxPYmplY3QobC5HZXRZb0RpZ2l0cykoNixcImludGVyY2hhbmdlXCIpO3RoaXMuJGVsZW1lbnQuYXR0cih7XCJkYXRhLXJlc2l6ZVwiOnQsaWQ6dH0pLHRoaXMuX2FkZEJyZWFrcG9pbnRzKCksdGhpcy5fZ2VuZXJhdGVSdWxlcygpLHRoaXMuX3JlZmxvdygpfX0se2tleTpcIl9ldmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy4kZWxlbWVudC5vZmYoXCJyZXNpemVtZS56Zi50cmlnZ2VyXCIpLm9uKFwicmVzaXplbWUuemYudHJpZ2dlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHQuX3JlZmxvdygpfSl9fSx7a2V5OlwiX3JlZmxvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ7Zm9yKHZhciBlIGluIHRoaXMucnVsZXMpaWYodGhpcy5ydWxlcy5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIG49dGhpcy5ydWxlc1tlXTt3aW5kb3cubWF0Y2hNZWRpYShuLnF1ZXJ5KS5tYXRjaGVzJiYodD1uKX10JiZ0aGlzLnJlcGxhY2UodC5wYXRoKX19LHtrZXk6XCJfYWRkQnJlYWtwb2ludHNcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdCBpbiBzLk1lZGlhUXVlcnkucXVlcmllcylpZihzLk1lZGlhUXVlcnkucXVlcmllcy5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFyIGU9cy5NZWRpYVF1ZXJ5LnF1ZXJpZXNbdF07ci5TUEVDSUFMX1FVRVJJRVNbZS5uYW1lXT1lLnZhbHVlfX19LHtrZXk6XCJfZ2VuZXJhdGVSdWxlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlLG49W107Zm9yKHZhciBpIGluIGU9XCJzdHJpbmdcIj09dHlwZW9mKGU9dGhpcy5vcHRpb25zLnJ1bGVzP3RoaXMub3B0aW9ucy5ydWxlczp0aGlzLiRlbGVtZW50LmRhdGEoXCJpbnRlcmNoYW5nZVwiKSk/ZS5tYXRjaCgvXFxbLio/LCAuKj9cXF0vZyk6ZSlpZihlLmhhc093blByb3BlcnR5KGkpKXt2YXIgbz1lW2ldLnNsaWNlKDEsLTEpLnNwbGl0KFwiLCBcIikscz1vLnNsaWNlKDAsLTEpLmpvaW4oXCJcIiksYT1vW28ubGVuZ3RoLTFdO3IuU1BFQ0lBTF9RVUVSSUVTW2FdJiYoYT1yLlNQRUNJQUxfUVVFUklFU1thXSksbi5wdXNoKHtwYXRoOnMscXVlcnk6YX0pfXRoaXMucnVsZXM9bn19LHtrZXk6XCJyZXBsYWNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7aWYodGhpcy5jdXJyZW50UGF0aCE9PWUpe3ZhciBuPXRoaXMsaT1cInJlcGxhY2VkLnpmLmludGVyY2hhbmdlXCI7XCJJTUdcIj09PXRoaXMuJGVsZW1lbnRbMF0ubm9kZU5hbWU/dGhpcy4kZWxlbWVudC5hdHRyKFwic3JjXCIsZSkub24oXCJsb2FkXCIsZnVuY3Rpb24oKXtuLmN1cnJlbnRQYXRoPWV9KS50cmlnZ2VyKGkpOmUubWF0Y2goL1xcLihnaWZ8anBnfGpwZWd8cG5nfHN2Z3x0aWZmKShbPyNdLiopPy9pKT8oZT1lLnJlcGxhY2UoL1xcKC9nLFwiJTI4XCIpLnJlcGxhY2UoL1xcKS9nLFwiJTI5XCIpLHRoaXMuJGVsZW1lbnQuY3NzKHtcImJhY2tncm91bmQtaW1hZ2VcIjpcInVybChcIitlK1wiKVwifSkudHJpZ2dlcihpKSk6by5hLmdldChlLGZ1bmN0aW9uKHQpe24uJGVsZW1lbnQuaHRtbCh0KS50cmlnZ2VyKGkpLG8oKSh0KS5mb3VuZGF0aW9uKCksbi5jdXJyZW50UGF0aD1lfSl9fX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcInJlc2l6ZW1lLnpmLnRyaWdnZXJcIil9fV0pJiZ1KGUucHJvdG90eXBlLG4pLGkmJnUoZSxpKSxyfSgpO2YuZGVmYXVsdHM9e3J1bGVzOm51bGx9LGYuU1BFQ0lBTF9RVUVSSUVTPXtsYW5kc2NhcGU6XCJzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKVwiLHBvcnRyYWl0Olwic2NyZWVuIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KVwiLHJldGluYTpcIm9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgb25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCBvbmx5IHNjcmVlbiBhbmQgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIvMSksIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDJkcHB4KVwifX0sXCIuL2pzL2ZvdW5kYXRpb24ubWFnZWxsYW4uanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiTWFnZWxsYW5cIixmdW5jdGlvbigpe3JldHVybiBmfSk7dmFyIGk9bihcImpxdWVyeVwiKSxjPW4ubihpKSxzPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLnNtb290aFNjcm9sbC5qc1wiKTtmdW5jdGlvbiBvKHQpe3JldHVybihvPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiBsKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiB1KHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1vKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGQodCl7cmV0dXJuKGQ9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4oaD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIGY9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsbiksdSh0aGlzLGQobikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZoKHQsZSl9KG4sYVtcIlBsdWdpblwiXSksZT1uLChpPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPWMuYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIk1hZ2VsbGFuXCIsdGhpcy5faW5pdCgpLHRoaXMuY2FsY1BvaW50cygpfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRlbGVtZW50WzBdLmlkfHxPYmplY3Qocy5HZXRZb0RpZ2l0cykoNixcIm1hZ2VsbGFuXCIpO3RoaXMuJHRhcmdldHM9YygpKFwiW2RhdGEtbWFnZWxsYW4tdGFyZ2V0XVwiKSx0aGlzLiRsaW5rcz10aGlzLiRlbGVtZW50LmZpbmQoXCJhXCIpLHRoaXMuJGVsZW1lbnQuYXR0cih7XCJkYXRhLXJlc2l6ZVwiOnQsXCJkYXRhLXNjcm9sbFwiOnQsaWQ6dH0pLHRoaXMuJGFjdGl2ZT1jKCkoKSx0aGlzLnNjcm9sbFBvcz1wYXJzZUludCh3aW5kb3cucGFnZVlPZmZzZXQsMTApLHRoaXMuX2V2ZW50cygpfX0se2tleTpcImNhbGNQb2ludHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBuPXRoaXMsdD1kb2N1bWVudC5ib2R5LGU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O3RoaXMucG9pbnRzPVtdLHRoaXMud2luSGVpZ2h0PU1hdGgucm91bmQoTWF0aC5tYXgod2luZG93LmlubmVySGVpZ2h0LGUuY2xpZW50SGVpZ2h0KSksdGhpcy5kb2NIZWlnaHQ9TWF0aC5yb3VuZChNYXRoLm1heCh0LnNjcm9sbEhlaWdodCx0Lm9mZnNldEhlaWdodCxlLmNsaWVudEhlaWdodCxlLnNjcm9sbEhlaWdodCxlLm9mZnNldEhlaWdodCkpLHRoaXMuJHRhcmdldHMuZWFjaChmdW5jdGlvbigpe3ZhciB0PWMoKSh0aGlzKSxlPU1hdGgucm91bmQodC5vZmZzZXQoKS50b3Atbi5vcHRpb25zLnRocmVzaG9sZCk7dC50YXJnZXRQb2ludD1lLG4ucG9pbnRzLnB1c2goZSl9KX19LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgbj10aGlzO2MoKShcImh0bWwsIGJvZHlcIiksbi5vcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uLG4ub3B0aW9ucy5hbmltYXRpb25FYXNpbmc7YygpKHdpbmRvdykub25lKFwibG9hZFwiLGZ1bmN0aW9uKCl7bi5vcHRpb25zLmRlZXBMaW5raW5nJiZsb2NhdGlvbi5oYXNoJiZuLnNjcm9sbFRvTG9jKGxvY2F0aW9uLmhhc2gpLG4uY2FsY1BvaW50cygpLG4uX3VwZGF0ZUFjdGl2ZSgpfSksbi5vbkxvYWRMaXN0ZW5lcj1PYmplY3Qocy5vbkxvYWQpKGMoKSh3aW5kb3cpLGZ1bmN0aW9uKCl7bi4kZWxlbWVudC5vbih7XCJyZXNpemVtZS56Zi50cmlnZ2VyXCI6bi5yZWZsb3cuYmluZChuKSxcInNjcm9sbG1lLnpmLnRyaWdnZXJcIjpuLl91cGRhdGVBY3RpdmUuYmluZChuKX0pLm9uKFwiY2xpY2suemYubWFnZWxsYW5cIiwnYVtocmVmXj1cIiNcIl0nLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKTt2YXIgZT10aGlzLmdldEF0dHJpYnV0ZShcImhyZWZcIik7bi5zY3JvbGxUb0xvYyhlKX0pfSksdGhpcy5fZGVlcExpbmtTY3JvbGw9ZnVuY3Rpb24odCl7bi5vcHRpb25zLmRlZXBMaW5raW5nJiZuLnNjcm9sbFRvTG9jKHdpbmRvdy5sb2NhdGlvbi5oYXNoKX0sYygpKHdpbmRvdykub24oXCJoYXNoY2hhbmdlXCIsdGhpcy5fZGVlcExpbmtTY3JvbGwpfX0se2tleTpcInNjcm9sbFRvTG9jXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5faW5UcmFuc2l0aW9uPSEwO3ZhciBlPXRoaXMsbj17YW5pbWF0aW9uRWFzaW5nOnRoaXMub3B0aW9ucy5hbmltYXRpb25FYXNpbmcsYW5pbWF0aW9uRHVyYXRpb246dGhpcy5vcHRpb25zLmFuaW1hdGlvbkR1cmF0aW9uLHRocmVzaG9sZDp0aGlzLm9wdGlvbnMudGhyZXNob2xkLG9mZnNldDp0aGlzLm9wdGlvbnMub2Zmc2V0fTtyLlNtb290aFNjcm9sbC5zY3JvbGxUb0xvYyh0LG4sZnVuY3Rpb24oKXtlLl9pblRyYW5zaXRpb249ITF9KX19LHtrZXk6XCJyZWZsb3dcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY2FsY1BvaW50cygpLHRoaXMuX3VwZGF0ZUFjdGl2ZSgpfX0se2tleTpcIl91cGRhdGVBY3RpdmVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBuPXRoaXM7aWYoIXRoaXMuX2luVHJhbnNpdGlvbil7dmFyIHQsaT1wYXJzZUludCh3aW5kb3cucGFnZVlPZmZzZXQsMTApLG89dGhpcy5zY3JvbGxQb3M+aTtpZigodGhpcy5zY3JvbGxQb3M9aSk8dGhpcy5wb2ludHNbMF0pO2Vsc2UgaWYoaSt0aGlzLndpbkhlaWdodD09PXRoaXMuZG9jSGVpZ2h0KXQ9dGhpcy5wb2ludHMubGVuZ3RoLTE7ZWxzZXt2YXIgZT10aGlzLnBvaW50cy5maWx0ZXIoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC1uLm9wdGlvbnMub2Zmc2V0LShvP24ub3B0aW9ucy50aHJlc2hvbGQ6MCk8PWl9KTt0PWUubGVuZ3RoP2UubGVuZ3RoLTE6MH12YXIgcz10aGlzLiRhY3RpdmUsYT1cIlwiO3ZvaWQgMCE9PXQ/KHRoaXMuJGFjdGl2ZT10aGlzLiRsaW5rcy5maWx0ZXIoJ1tocmVmPVwiIycrdGhpcy4kdGFyZ2V0cy5lcSh0KS5kYXRhKFwibWFnZWxsYW4tdGFyZ2V0XCIpKydcIl0nKSx0aGlzLiRhY3RpdmUubGVuZ3RoJiYoYT10aGlzLiRhY3RpdmVbMF0uZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSkpOnRoaXMuJGFjdGl2ZT1jKCkoKTt2YXIgcj0hKCF0aGlzLiRhY3RpdmUubGVuZ3RoJiYhcy5sZW5ndGh8fHRoaXMuJGFjdGl2ZS5pcyhzKSksbD1hIT09d2luZG93LmxvY2F0aW9uLmhhc2g7aWYociYmKHMucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKSx0aGlzLiRhY3RpdmUuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKSksdGhpcy5vcHRpb25zLmRlZXBMaW5raW5nJiZsKWlmKHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSl7dmFyIHU9YXx8d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lK3dpbmRvdy5sb2NhdGlvbi5zZWFyY2g7d2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKG51bGwsbnVsbCx1KX1lbHNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoPWE7ciYmdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwidXBkYXRlLnpmLm1hZ2VsbGFuXCIsW3RoaXMuJGFjdGl2ZV0pfX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy4kZWxlbWVudC5vZmYoXCIuemYudHJpZ2dlciAuemYubWFnZWxsYW5cIikuZmluZChcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKSkucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKSx0aGlzLm9wdGlvbnMuZGVlcExpbmtpbmcpe3ZhciB0PXRoaXMuJGFjdGl2ZVswXS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpO3dpbmRvdy5sb2NhdGlvbi5oYXNoLnJlcGxhY2UodCxcIlwiKX1jKCkod2luZG93KS5vZmYoXCJoYXNoY2hhbmdlXCIsdGhpcy5fZGVlcExpbmtTY3JvbGwpLHRoaXMub25Mb2FkTGlzdGVuZXImJmMoKSh3aW5kb3cpLm9mZih0aGlzLm9uTG9hZExpc3RlbmVyKX19XSkmJmwoZS5wcm90b3R5cGUsaSksbyYmbChlLG8pLG59KCk7Zi5kZWZhdWx0cz17YW5pbWF0aW9uRHVyYXRpb246NTAwLGFuaW1hdGlvbkVhc2luZzpcImxpbmVhclwiLHRocmVzaG9sZDo1MCxhY3RpdmVDbGFzczpcImlzLWFjdGl2ZVwiLGRlZXBMaW5raW5nOiExLG9mZnNldDowfX0sXCIuL2pzL2ZvdW5kYXRpb24ub2ZmY2FudmFzLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIk9mZkNhbnZhc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIG19KTt2YXIgaT1uKFwianF1ZXJ5XCIpLHM9bi5uKGkpLGE9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLHI9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLmtleWJvYXJkLmpzXCIpLGw9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1lZGlhUXVlcnkuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLGM9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLnRyaWdnZXJzLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gZih0KXtyZXR1cm4oZj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gcCh0LGUpe3JldHVybihwPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgbT1mdW5jdGlvbih0KXtmdW5jdGlvbiBpKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxpKSxoKHRoaXMsZihpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLG4sbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJnAodCxlKX0oaSx1W1wiUGx1Z2luXCJdKSxlPWksKG49W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dGhpcy5jbGFzc05hbWU9XCJPZmZDYW52YXNcIix0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPXMuYS5leHRlbmQoe30saS5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNvbnRlbnRDbGFzc2VzPXtiYXNlOltdLHJldmVhbDpbXX0sdGhpcy4kbGFzdFRyaWdnZXI9cygpKCksdGhpcy4kdHJpZ2dlcnM9cygpKCksdGhpcy5wb3NpdGlvbj1cImxlZnRcIix0aGlzLiRjb250ZW50PXMoKSgpLHRoaXMubmVzdGVkPSEhdGhpcy5vcHRpb25zLm5lc3RlZCxzKCkoW1wicHVzaFwiLFwib3ZlcmxhcFwiXSkuZWFjaChmdW5jdGlvbih0LGUpe24uY29udGVudENsYXNzZXMuYmFzZS5wdXNoKFwiaGFzLXRyYW5zaXRpb24tXCIrZSl9KSxzKCkoW1wibGVmdFwiLFwicmlnaHRcIixcInRvcFwiLFwiYm90dG9tXCJdKS5lYWNoKGZ1bmN0aW9uKHQsZSl7bi5jb250ZW50Q2xhc3Nlcy5iYXNlLnB1c2goXCJoYXMtcG9zaXRpb24tXCIrZSksbi5jb250ZW50Q2xhc3Nlcy5yZXZlYWwucHVzaChcImhhcy1yZXZlYWwtXCIrZSl9KSxjLlRyaWdnZXJzLmluaXQocy5hKSxsLk1lZGlhUXVlcnkuX2luaXQoKSx0aGlzLl9pbml0KCksdGhpcy5fZXZlbnRzKCksci5LZXlib2FyZC5yZWdpc3RlcihcIk9mZkNhbnZhc1wiLHtFU0NBUEU6XCJjbG9zZVwifSl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnQuYXR0cihcImlkXCIpO2lmKHRoaXMuJGVsZW1lbnQuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLHRoaXMub3B0aW9ucy5jb250ZW50SWQ/dGhpcy4kY29udGVudD1zKCkoXCIjXCIrdGhpcy5vcHRpb25zLmNvbnRlbnRJZCk6dGhpcy4kZWxlbWVudC5zaWJsaW5ncyhcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikubGVuZ3RoP3RoaXMuJGNvbnRlbnQ9dGhpcy4kZWxlbWVudC5zaWJsaW5ncyhcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikuZmlyc3QoKTp0aGlzLiRjb250ZW50PXRoaXMuJGVsZW1lbnQuY2xvc2VzdChcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikuZmlyc3QoKSx0aGlzLm9wdGlvbnMuY29udGVudElkP3RoaXMub3B0aW9ucy5jb250ZW50SWQmJm51bGw9PT10aGlzLm9wdGlvbnMubmVzdGVkJiZjb25zb2xlLndhcm4oXCJSZW1lbWJlciB0byB1c2UgdGhlIG5lc3RlZCBvcHRpb24gaWYgdXNpbmcgdGhlIGNvbnRlbnQgSUQgb3B0aW9uIVwiKTp0aGlzLm5lc3RlZD0wPT09dGhpcy4kZWxlbWVudC5zaWJsaW5ncyhcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikubGVuZ3RoLCEwPT09dGhpcy5uZXN0ZWQmJih0aGlzLm9wdGlvbnMudHJhbnNpdGlvbj1cIm92ZXJsYXBcIix0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwiaXMtdHJhbnNpdGlvbi1wdXNoXCIpKSx0aGlzLiRlbGVtZW50LmFkZENsYXNzKFwiaXMtdHJhbnNpdGlvbi1cIi5jb25jYXQodGhpcy5vcHRpb25zLnRyYW5zaXRpb24sXCIgaXMtY2xvc2VkXCIpKSx0aGlzLiR0cmlnZ2Vycz1zKCkoZG9jdW1lbnQpLmZpbmQoJ1tkYXRhLW9wZW49XCInK3QrJ1wiXSwgW2RhdGEtY2xvc2U9XCInK3QrJ1wiXSwgW2RhdGEtdG9nZ2xlPVwiJyt0KydcIl0nKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwiZmFsc2VcIikuYXR0cihcImFyaWEtY29udHJvbHNcIix0KSx0aGlzLnBvc2l0aW9uPXRoaXMuJGVsZW1lbnQuaXMoXCIucG9zaXRpb24tbGVmdCwgLnBvc2l0aW9uLXRvcCwgLnBvc2l0aW9uLXJpZ2h0LCAucG9zaXRpb24tYm90dG9tXCIpP3RoaXMuJGVsZW1lbnQuYXR0cihcImNsYXNzXCIpLm1hdGNoKC9wb3NpdGlvblxcLShsZWZ0fHRvcHxyaWdodHxib3R0b20pLylbMV06dGhpcy5wb3NpdGlvbiwhMD09PXRoaXMub3B0aW9ucy5jb250ZW50T3ZlcmxheSl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxuPVwiZml4ZWRcIj09PXMoKSh0aGlzLiRlbGVtZW50KS5jc3MoXCJwb3NpdGlvblwiKT9cImlzLW92ZXJsYXktZml4ZWRcIjpcImlzLW92ZXJsYXktYWJzb2x1dGVcIjtlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsXCJqcy1vZmYtY2FudmFzLW92ZXJsYXkgXCIrbiksdGhpcy4kb3ZlcmxheT1zKCkoZSksXCJpcy1vdmVybGF5LWZpeGVkXCI9PT1uP3MoKSh0aGlzLiRvdmVybGF5KS5pbnNlcnRBZnRlcih0aGlzLiRlbGVtZW50KTp0aGlzLiRjb250ZW50LmFwcGVuZCh0aGlzLiRvdmVybGF5KX12YXIgaT1uZXcgUmVnRXhwKE9iamVjdChhLlJlZ0V4cEVzY2FwZSkodGhpcy5vcHRpb25zLnJldmVhbENsYXNzKStcIihbXlxcXFxzXSspXCIsXCJnXCIpLmV4ZWModGhpcy4kZWxlbWVudFswXS5jbGFzc05hbWUpO2kmJih0aGlzLm9wdGlvbnMuaXNSZXZlYWxlZD0hMCx0aGlzLm9wdGlvbnMucmV2ZWFsT249dGhpcy5vcHRpb25zLnJldmVhbE9ufHxpWzFdKSwhMD09PXRoaXMub3B0aW9ucy5pc1JldmVhbGVkJiZ0aGlzLm9wdGlvbnMucmV2ZWFsT24mJih0aGlzLiRlbGVtZW50LmZpcnN0KCkuYWRkQ2xhc3MoXCJcIi5jb25jYXQodGhpcy5vcHRpb25zLnJldmVhbENsYXNzKS5jb25jYXQodGhpcy5vcHRpb25zLnJldmVhbE9uKSksdGhpcy5fc2V0TVFDaGVja2VyKCkpLHRoaXMub3B0aW9ucy50cmFuc2l0aW9uVGltZSYmdGhpcy4kZWxlbWVudC5jc3MoXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIsdGhpcy5vcHRpb25zLnRyYW5zaXRpb25UaW1lKSx0aGlzLl9yZW1vdmVDb250ZW50Q2xhc3NlcygpfX0se2tleTpcIl9ldmVudHNcIix2YWx1ZTpmdW5jdGlvbigpeyh0aGlzLiRlbGVtZW50Lm9mZihcIi56Zi50cmlnZ2VyIC56Zi5vZmZjYW52YXNcIikub24oe1wib3Blbi56Zi50cmlnZ2VyXCI6dGhpcy5vcGVuLmJpbmQodGhpcyksXCJjbG9zZS56Zi50cmlnZ2VyXCI6dGhpcy5jbG9zZS5iaW5kKHRoaXMpLFwidG9nZ2xlLnpmLnRyaWdnZXJcIjp0aGlzLnRvZ2dsZS5iaW5kKHRoaXMpLFwia2V5ZG93bi56Zi5vZmZjYW52YXNcIjp0aGlzLl9oYW5kbGVLZXlib2FyZC5iaW5kKHRoaXMpfSksITA9PT10aGlzLm9wdGlvbnMuY2xvc2VPbkNsaWNrKSYmKHRoaXMub3B0aW9ucy5jb250ZW50T3ZlcmxheT90aGlzLiRvdmVybGF5OnRoaXMuJGNvbnRlbnQpLm9uKHtcImNsaWNrLnpmLm9mZmNhbnZhc1wiOnRoaXMuY2xvc2UuYmluZCh0aGlzKX0pfX0se2tleTpcIl9zZXRNUUNoZWNrZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5vbkxvYWRMaXN0ZW5lcj1PYmplY3QoYS5vbkxvYWQpKHMoKSh3aW5kb3cpLGZ1bmN0aW9uKCl7bC5NZWRpYVF1ZXJ5LmF0TGVhc3QodC5vcHRpb25zLnJldmVhbE9uKSYmdC5yZXZlYWwoITApfSkscygpKHdpbmRvdykub24oXCJjaGFuZ2VkLnpmLm1lZGlhcXVlcnlcIixmdW5jdGlvbigpe2wuTWVkaWFRdWVyeS5hdExlYXN0KHQub3B0aW9ucy5yZXZlYWxPbik/dC5yZXZlYWwoITApOnQucmV2ZWFsKCExKX0pfX0se2tleTpcIl9yZW1vdmVDb250ZW50Q2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe1wiYm9vbGVhblwiIT10eXBlb2YgdD90aGlzLiRjb250ZW50LnJlbW92ZUNsYXNzKHRoaXMuY29udGVudENsYXNzZXMuYmFzZS5qb2luKFwiIFwiKSk6ITE9PT10JiZ0aGlzLiRjb250ZW50LnJlbW92ZUNsYXNzKFwiaGFzLXJldmVhbC1cIi5jb25jYXQodGhpcy5wb3NpdGlvbikpfX0se2tleTpcIl9hZGRDb250ZW50Q2xhc3Nlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuX3JlbW92ZUNvbnRlbnRDbGFzc2VzKHQpLFwiYm9vbGVhblwiIT10eXBlb2YgdD90aGlzLiRjb250ZW50LmFkZENsYXNzKFwiaGFzLXRyYW5zaXRpb24tXCIuY29uY2F0KHRoaXMub3B0aW9ucy50cmFuc2l0aW9uLFwiIGhhcy1wb3NpdGlvbi1cIikuY29uY2F0KHRoaXMucG9zaXRpb24pKTohMD09PXQmJnRoaXMuJGNvbnRlbnQuYWRkQ2xhc3MoXCJoYXMtcmV2ZWFsLVwiLmNvbmNhdCh0aGlzLnBvc2l0aW9uKSl9fSx7a2V5OlwicmV2ZWFsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dD8odGhpcy5jbG9zZSgpLHRoaXMuaXNSZXZlYWxlZD0hMCx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIiksdGhpcy4kZWxlbWVudC5vZmYoXCJvcGVuLnpmLnRyaWdnZXIgdG9nZ2xlLnpmLnRyaWdnZXJcIiksdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhcImlzLWNsb3NlZFwiKSk6KHRoaXMuaXNSZXZlYWxlZD0hMSx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSx0aGlzLiRlbGVtZW50Lm9mZihcIm9wZW4uemYudHJpZ2dlciB0b2dnbGUuemYudHJpZ2dlclwiKS5vbih7XCJvcGVuLnpmLnRyaWdnZXJcIjp0aGlzLm9wZW4uYmluZCh0aGlzKSxcInRvZ2dsZS56Zi50cmlnZ2VyXCI6dGhpcy50b2dnbGUuYmluZCh0aGlzKX0pLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJpcy1jbG9zZWRcIikpLHRoaXMuX2FkZENvbnRlbnRDbGFzc2VzKHQpfX0se2tleTpcIl9zdG9wU2Nyb2xsaW5nXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuITF9fSx7a2V5OlwiX3JlY29yZFNjcm9sbGFibGVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2Uuc2Nyb2xsSGVpZ2h0IT09ZS5jbGllbnRIZWlnaHQmJigwPT09ZS5zY3JvbGxUb3AmJihlLnNjcm9sbFRvcD0xKSxlLnNjcm9sbFRvcD09PWUuc2Nyb2xsSGVpZ2h0LWUuY2xpZW50SGVpZ2h0JiYoZS5zY3JvbGxUb3A9ZS5zY3JvbGxIZWlnaHQtZS5jbGllbnRIZWlnaHQtMSkpLGUuYWxsb3dVcD0wPGUuc2Nyb2xsVG9wLGUuYWxsb3dEb3duPWUuc2Nyb2xsVG9wPGUuc2Nyb2xsSGVpZ2h0LWUuY2xpZW50SGVpZ2h0LGUubGFzdFk9dC5vcmlnaW5hbEV2ZW50LnBhZ2VZfX0se2tleTpcIl9zdG9wU2Nyb2xsUHJvcGFnYXRpb25cIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10LnBhZ2VZPHRoaXMubGFzdFksbj0hZTt0aGlzLmxhc3RZPXQucGFnZVksZSYmdGhpcy5hbGxvd1VwfHxuJiZ0aGlzLmFsbG93RG93bj90LnN0b3BQcm9wYWdhdGlvbigpOnQucHJldmVudERlZmF1bHQoKX19LHtrZXk6XCJvcGVuXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtpZighdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImlzLW9wZW5cIikmJiF0aGlzLmlzUmV2ZWFsZWQpe3ZhciBuPXRoaXM7ZSYmKHRoaXMuJGxhc3RUcmlnZ2VyPWUpLFwidG9wXCI9PT10aGlzLm9wdGlvbnMuZm9yY2VUbz93aW5kb3cuc2Nyb2xsVG8oMCwwKTpcImJvdHRvbVwiPT09dGhpcy5vcHRpb25zLmZvcmNlVG8mJndpbmRvdy5zY3JvbGxUbygwLGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0KSx0aGlzLm9wdGlvbnMudHJhbnNpdGlvblRpbWUmJlwib3ZlcmxhcFwiIT09dGhpcy5vcHRpb25zLnRyYW5zaXRpb24/dGhpcy4kZWxlbWVudC5zaWJsaW5ncyhcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLHRoaXMub3B0aW9ucy50cmFuc2l0aW9uVGltZSk6dGhpcy4kZWxlbWVudC5zaWJsaW5ncyhcIltkYXRhLW9mZi1jYW52YXMtY29udGVudF1cIikuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLFwiXCIpLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJpcy1vcGVuXCIpLnJlbW92ZUNsYXNzKFwiaXMtY2xvc2VkXCIpLHRoaXMuJHRyaWdnZXJzLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLHRoaXMuJGVsZW1lbnQuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSx0aGlzLiRjb250ZW50LmFkZENsYXNzKFwiaXMtb3Blbi1cIit0aGlzLnBvc2l0aW9uKSwhMT09PXRoaXMub3B0aW9ucy5jb250ZW50U2Nyb2xsJiYocygpKFwiYm9keVwiKS5hZGRDbGFzcyhcImlzLW9mZi1jYW52YXMtb3BlblwiKS5vbihcInRvdWNobW92ZVwiLHRoaXMuX3N0b3BTY3JvbGxpbmcpLHRoaXMuJGVsZW1lbnQub24oXCJ0b3VjaHN0YXJ0XCIsdGhpcy5fcmVjb3JkU2Nyb2xsYWJsZSksdGhpcy4kZWxlbWVudC5vbihcInRvdWNobW92ZVwiLHRoaXMuX3N0b3BTY3JvbGxQcm9wYWdhdGlvbikpLCEwPT09dGhpcy5vcHRpb25zLmNvbnRlbnRPdmVybGF5JiZ0aGlzLiRvdmVybGF5LmFkZENsYXNzKFwiaXMtdmlzaWJsZVwiKSwhMD09PXRoaXMub3B0aW9ucy5jbG9zZU9uQ2xpY2smJiEwPT09dGhpcy5vcHRpb25zLmNvbnRlbnRPdmVybGF5JiZ0aGlzLiRvdmVybGF5LmFkZENsYXNzKFwiaXMtY2xvc2FibGVcIiksITA9PT10aGlzLm9wdGlvbnMuYXV0b0ZvY3VzJiZ0aGlzLiRlbGVtZW50Lm9uZShPYmplY3QoYS50cmFuc2l0aW9uZW5kKSh0aGlzLiRlbGVtZW50KSxmdW5jdGlvbigpe2lmKG4uJGVsZW1lbnQuaGFzQ2xhc3MoXCJpcy1vcGVuXCIpKXt2YXIgdD1uLiRlbGVtZW50LmZpbmQoXCJbZGF0YS1hdXRvZm9jdXNdXCIpO3QubGVuZ3RoP3QuZXEoMCkuZm9jdXMoKTpuLiRlbGVtZW50LmZpbmQoXCJhLCBidXR0b25cIikuZXEoMCkuZm9jdXMoKX19KSwhMD09PXRoaXMub3B0aW9ucy50cmFwRm9jdXMmJih0aGlzLiRjb250ZW50LmF0dHIoXCJ0YWJpbmRleFwiLFwiLTFcIiksci5LZXlib2FyZC50cmFwRm9jdXModGhpcy4kZWxlbWVudCkpLHRoaXMuX2FkZENvbnRlbnRDbGFzc2VzKCksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwib3BlbmVkLnpmLm9mZmNhbnZhc1wiKX19fSx7a2V5OlwiY2xvc2VcIix2YWx1ZTpmdW5jdGlvbih0KXtpZih0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwiaXMtb3BlblwiKSYmIXRoaXMuaXNSZXZlYWxlZCl7dmFyIGU9dGhpczt0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwiaXMtb3BlblwiKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKS50cmlnZ2VyKFwiY2xvc2VkLnpmLm9mZmNhbnZhc1wiKSx0aGlzLiRjb250ZW50LnJlbW92ZUNsYXNzKFwiaXMtb3Blbi1sZWZ0IGlzLW9wZW4tdG9wIGlzLW9wZW4tcmlnaHQgaXMtb3Blbi1ib3R0b21cIiksITE9PT10aGlzLm9wdGlvbnMuY29udGVudFNjcm9sbCYmKHMoKShcImJvZHlcIikucmVtb3ZlQ2xhc3MoXCJpcy1vZmYtY2FudmFzLW9wZW5cIikub2ZmKFwidG91Y2htb3ZlXCIsdGhpcy5fc3RvcFNjcm9sbGluZyksdGhpcy4kZWxlbWVudC5vZmYoXCJ0b3VjaHN0YXJ0XCIsdGhpcy5fcmVjb3JkU2Nyb2xsYWJsZSksdGhpcy4kZWxlbWVudC5vZmYoXCJ0b3VjaG1vdmVcIix0aGlzLl9zdG9wU2Nyb2xsUHJvcGFnYXRpb24pKSwhMD09PXRoaXMub3B0aW9ucy5jb250ZW50T3ZlcmxheSYmdGhpcy4kb3ZlcmxheS5yZW1vdmVDbGFzcyhcImlzLXZpc2libGVcIiksITA9PT10aGlzLm9wdGlvbnMuY2xvc2VPbkNsaWNrJiYhMD09PXRoaXMub3B0aW9ucy5jb250ZW50T3ZlcmxheSYmdGhpcy4kb3ZlcmxheS5yZW1vdmVDbGFzcyhcImlzLWNsb3NhYmxlXCIpLHRoaXMuJHRyaWdnZXJzLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJmYWxzZVwiKSwhMD09PXRoaXMub3B0aW9ucy50cmFwRm9jdXMmJih0aGlzLiRjb250ZW50LnJlbW92ZUF0dHIoXCJ0YWJpbmRleFwiKSxyLktleWJvYXJkLnJlbGVhc2VGb2N1cyh0aGlzLiRlbGVtZW50KSksdGhpcy4kZWxlbWVudC5vbmUoT2JqZWN0KGEudHJhbnNpdGlvbmVuZCkodGhpcy4kZWxlbWVudCksZnVuY3Rpb24odCl7ZS4kZWxlbWVudC5hZGRDbGFzcyhcImlzLWNsb3NlZFwiKSxlLl9yZW1vdmVDb250ZW50Q2xhc3NlcygpfSl9fX0se2tleTpcInRvZ2dsZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImlzLW9wZW5cIik/dGhpcy5jbG9zZSh0LGUpOnRoaXMub3Blbih0LGUpfX0se2tleTpcIl9oYW5kbGVLZXlib2FyZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ci5LZXlib2FyZC5oYW5kbGVLZXkodCxcIk9mZkNhbnZhc1wiLHtjbG9zZTpmdW5jdGlvbigpe3JldHVybiBlLmNsb3NlKCksZS4kbGFzdFRyaWdnZXIuZm9jdXMoKSwhMH0saGFuZGxlZDpmdW5jdGlvbigpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpfX0pfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmNsb3NlKCksdGhpcy4kZWxlbWVudC5vZmYoXCIuemYudHJpZ2dlciAuemYub2ZmY2FudmFzXCIpLHRoaXMuJG92ZXJsYXkub2ZmKFwiLnpmLm9mZmNhbnZhc1wiKSx0aGlzLm9uTG9hZExpc3RlbmVyJiZzKCkod2luZG93KS5vZmYodGhpcy5vbkxvYWRMaXN0ZW5lcil9fV0pJiZkKGUucHJvdG90eXBlLG4pLG8mJmQoZSxvKSxpfSgpO20uZGVmYXVsdHM9e2Nsb3NlT25DbGljazohMCxjb250ZW50T3ZlcmxheTohMCxjb250ZW50SWQ6bnVsbCxuZXN0ZWQ6bnVsbCxjb250ZW50U2Nyb2xsOiEwLHRyYW5zaXRpb25UaW1lOm51bGwsdHJhbnNpdGlvbjpcInB1c2hcIixmb3JjZVRvOm51bGwsaXNSZXZlYWxlZDohMSxyZXZlYWxPbjpudWxsLGF1dG9Gb2N1czohMCxyZXZlYWxDbGFzczpcInJldmVhbC1mb3ItXCIsdHJhcEZvY3VzOiExfX0sXCIuL2pzL2ZvdW5kYXRpb24ub3JiaXQuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiT3JiaXRcIixmdW5jdGlvbigpe3JldHVybiB2fSk7dmFyIGk9bihcImpxdWVyeVwiKSxzPW4ubihpKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5rZXlib2FyZC5qc1wiKSxjPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tb3Rpb24uanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudGltZXIuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuaW1hZ2VMb2FkZXIuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIiksZD1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLGg9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLnRvdWNoLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGYodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gbSh0KXtyZXR1cm4obT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZyh0LGUpe3JldHVybihnPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgdj1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxwKHRoaXMsbShuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmcodCxlKX0obixkW1wiUGx1Z2luXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9cy5hLmV4dGVuZCh7fSxuLmRlZmF1bHRzLHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiT3JiaXRcIixoLlRvdWNoLmluaXQocy5hKSx0aGlzLl9pbml0KCksYS5LZXlib2FyZC5yZWdpc3RlcihcIk9yYml0XCIse2x0cjp7QVJST1dfUklHSFQ6XCJuZXh0XCIsQVJST1dfTEVGVDpcInByZXZpb3VzXCJ9LHJ0bDp7QVJST1dfTEVGVDpcIm5leHRcIixBUlJPV19SSUdIVDpcInByZXZpb3VzXCJ9fSl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3Jlc2V0KCksdGhpcy4kd3JhcHBlcj10aGlzLiRlbGVtZW50LmZpbmQoXCIuXCIuY29uY2F0KHRoaXMub3B0aW9ucy5jb250YWluZXJDbGFzcykpLHRoaXMuJHNsaWRlcz10aGlzLiRlbGVtZW50LmZpbmQoXCIuXCIuY29uY2F0KHRoaXMub3B0aW9ucy5zbGlkZUNsYXNzKSk7dmFyIHQ9dGhpcy4kZWxlbWVudC5maW5kKFwiaW1nXCIpLGU9dGhpcy4kc2xpZGVzLmZpbHRlcihcIi5pcy1hY3RpdmVcIiksbj10aGlzLiRlbGVtZW50WzBdLmlkfHxPYmplY3QodS5HZXRZb0RpZ2l0cykoNixcIm9yYml0XCIpO3RoaXMuJGVsZW1lbnQuYXR0cih7XCJkYXRhLXJlc2l6ZVwiOm4saWQ6bn0pLGUubGVuZ3RofHx0aGlzLiRzbGlkZXMuZXEoMCkuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIiksdGhpcy5vcHRpb25zLnVzZU1VSXx8dGhpcy4kc2xpZGVzLmFkZENsYXNzKFwibm8tbW90aW9udWlcIiksdC5sZW5ndGg/T2JqZWN0KGwub25JbWFnZXNMb2FkZWQpKHQsdGhpcy5fcHJlcGFyZUZvck9yYml0LmJpbmQodGhpcykpOnRoaXMuX3ByZXBhcmVGb3JPcmJpdCgpLHRoaXMub3B0aW9ucy5idWxsZXRzJiZ0aGlzLl9sb2FkQnVsbGV0cygpLHRoaXMuX2V2ZW50cygpLHRoaXMub3B0aW9ucy5hdXRvUGxheSYmMTx0aGlzLiRzbGlkZXMubGVuZ3RoJiZ0aGlzLmdlb1N5bmMoKSx0aGlzLm9wdGlvbnMuYWNjZXNzaWJsZSYmdGhpcy4kd3JhcHBlci5hdHRyKFwidGFiaW5kZXhcIiwwKX19LHtrZXk6XCJfbG9hZEJ1bGxldHNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGJ1bGxldHM9dGhpcy4kZWxlbWVudC5maW5kKFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuYm94T2ZCdWxsZXRzKSkuZmluZChcImJ1dHRvblwiKX19LHtrZXk6XCJnZW9TeW5jXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMudGltZXI9bmV3IHIuVGltZXIodGhpcy4kZWxlbWVudCx7ZHVyYXRpb246dGhpcy5vcHRpb25zLnRpbWVyRGVsYXksaW5maW5pdGU6ITF9LGZ1bmN0aW9uKCl7dC5jaGFuZ2VTbGlkZSghMCl9KSx0aGlzLnRpbWVyLnN0YXJ0KCl9fSx7a2V5OlwiX3ByZXBhcmVGb3JPcmJpdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fc2V0V3JhcHBlckhlaWdodCgpfX0se2tleTpcIl9zZXRXcmFwcGVySGVpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUsbj0wLGk9MCxvPXRoaXM7dGhpcy4kc2xpZGVzLmVhY2goZnVuY3Rpb24oKXtlPXRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0LHMoKSh0aGlzKS5hdHRyKFwiZGF0YS1zbGlkZVwiLGkpLC9tdWkvZy50ZXN0KHMoKSh0aGlzKVswXS5jbGFzc05hbWUpfHxvLiRzbGlkZXMuZmlsdGVyKFwiLmlzLWFjdGl2ZVwiKVswXT09PW8uJHNsaWRlcy5lcShpKVswXXx8cygpKHRoaXMpLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pLG49bjxlP2U6bixpKyt9KSxpPT09dGhpcy4kc2xpZGVzLmxlbmd0aCYmKHRoaXMuJHdyYXBwZXIuY3NzKHtoZWlnaHQ6bn0pLHQmJnQobikpfX0se2tleTpcIl9zZXRTbGlkZUhlaWdodFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uKCl7cygpKHRoaXMpLmNzcyhcIm1heC1oZWlnaHRcIix0KX0pfX0se2tleTpcIl9ldmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBpPXRoaXM7aWYodGhpcy4kZWxlbWVudC5vZmYoXCIucmVzaXplbWUuemYudHJpZ2dlclwiKS5vbih7XCJyZXNpemVtZS56Zi50cmlnZ2VyXCI6dGhpcy5fcHJlcGFyZUZvck9yYml0LmJpbmQodGhpcyl9KSwxPHRoaXMuJHNsaWRlcy5sZW5ndGgpe2lmKHRoaXMub3B0aW9ucy5zd2lwZSYmdGhpcy4kc2xpZGVzLm9mZihcInN3aXBlbGVmdC56Zi5vcmJpdCBzd2lwZXJpZ2h0LnpmLm9yYml0XCIpLm9uKFwic3dpcGVsZWZ0LnpmLm9yYml0XCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkuY2hhbmdlU2xpZGUoITApfSkub24oXCJzd2lwZXJpZ2h0LnpmLm9yYml0XCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkuY2hhbmdlU2xpZGUoITEpfSksdGhpcy5vcHRpb25zLmF1dG9QbGF5JiYodGhpcy4kc2xpZGVzLm9uKFwiY2xpY2suemYub3JiaXRcIixmdW5jdGlvbigpe2kuJGVsZW1lbnQuZGF0YShcImNsaWNrZWRPblwiLCFpLiRlbGVtZW50LmRhdGEoXCJjbGlja2VkT25cIikpLGkudGltZXJbaS4kZWxlbWVudC5kYXRhKFwiY2xpY2tlZE9uXCIpP1wicGF1c2VcIjpcInN0YXJ0XCJdKCl9KSx0aGlzLm9wdGlvbnMucGF1c2VPbkhvdmVyJiZ0aGlzLiRlbGVtZW50Lm9uKFwibW91c2VlbnRlci56Zi5vcmJpdFwiLGZ1bmN0aW9uKCl7aS50aW1lci5wYXVzZSgpfSkub24oXCJtb3VzZWxlYXZlLnpmLm9yYml0XCIsZnVuY3Rpb24oKXtpLiRlbGVtZW50LmRhdGEoXCJjbGlja2VkT25cIil8fGkudGltZXIuc3RhcnQoKX0pKSx0aGlzLm9wdGlvbnMubmF2QnV0dG9ucyl0aGlzLiRlbGVtZW50LmZpbmQoXCIuXCIuY29uY2F0KHRoaXMub3B0aW9ucy5uZXh0Q2xhc3MsXCIsIC5cIikuY29uY2F0KHRoaXMub3B0aW9ucy5wcmV2Q2xhc3MpKS5hdHRyKFwidGFiaW5kZXhcIiwwKS5vbihcImNsaWNrLnpmLm9yYml0IHRvdWNoZW5kLnpmLm9yYml0XCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkuY2hhbmdlU2xpZGUocygpKHRoaXMpLmhhc0NsYXNzKGkub3B0aW9ucy5uZXh0Q2xhc3MpKX0pO3RoaXMub3B0aW9ucy5idWxsZXRzJiZ0aGlzLiRidWxsZXRzLm9uKFwiY2xpY2suemYub3JiaXQgdG91Y2hlbmQuemYub3JiaXRcIixmdW5jdGlvbigpe2lmKC9pcy1hY3RpdmUvZy50ZXN0KHRoaXMuY2xhc3NOYW1lKSlyZXR1cm4hMTt2YXIgdD1zKCkodGhpcykuZGF0YShcInNsaWRlXCIpLGU9dD5pLiRzbGlkZXMuZmlsdGVyKFwiLmlzLWFjdGl2ZVwiKS5kYXRhKFwic2xpZGVcIiksbj1pLiRzbGlkZXMuZXEodCk7aS5jaGFuZ2VTbGlkZShlLG4sdCl9KSx0aGlzLm9wdGlvbnMuYWNjZXNzaWJsZSYmdGhpcy4kd3JhcHBlci5hZGQodGhpcy4kYnVsbGV0cykub24oXCJrZXlkb3duLnpmLm9yYml0XCIsZnVuY3Rpb24odCl7YS5LZXlib2FyZC5oYW5kbGVLZXkodCxcIk9yYml0XCIse25leHQ6ZnVuY3Rpb24oKXtpLmNoYW5nZVNsaWRlKCEwKX0scHJldmlvdXM6ZnVuY3Rpb24oKXtpLmNoYW5nZVNsaWRlKCExKX0saGFuZGxlZDpmdW5jdGlvbigpe3MoKSh0LnRhcmdldCkuaXMoaS4kYnVsbGV0cykmJmkuJGJ1bGxldHMuZmlsdGVyKFwiLmlzLWFjdGl2ZVwiKS5mb2N1cygpfX0pfSl9fX0se2tleTpcIl9yZXNldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dm9pZCAwIT09dGhpcy4kc2xpZGVzJiYxPHRoaXMuJHNsaWRlcy5sZW5ndGgmJih0aGlzLiRlbGVtZW50Lm9mZihcIi56Zi5vcmJpdFwiKS5maW5kKFwiKlwiKS5vZmYoXCIuemYub3JiaXRcIiksdGhpcy5vcHRpb25zLmF1dG9QbGF5JiZ0aGlzLnRpbWVyLnJlc3RhcnQoKSx0aGlzLiRzbGlkZXMuZWFjaChmdW5jdGlvbih0KXtzKCkodCkucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmUgaXMtYWN0aXZlIGlzLWluXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWxpdmVcIikuaGlkZSgpfSksdGhpcy4kc2xpZGVzLmZpcnN0KCkuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIikuc2hvdygpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcInNsaWRlY2hhbmdlLnpmLm9yYml0XCIsW3RoaXMuJHNsaWRlcy5maXJzdCgpXSksdGhpcy5vcHRpb25zLmJ1bGxldHMmJnRoaXMuX3VwZGF0ZUJ1bGxldHMoMCkpfX0se2tleTpcImNoYW5nZVNsaWRlXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4pe2lmKHRoaXMuJHNsaWRlcyl7dmFyIGk9dGhpcy4kc2xpZGVzLmZpbHRlcihcIi5pcy1hY3RpdmVcIikuZXEoMCk7aWYoL211aS9nLnRlc3QoaVswXS5jbGFzc05hbWUpKXJldHVybiExO3ZhciBvLHM9dGhpcy4kc2xpZGVzLmZpcnN0KCksYT10aGlzLiRzbGlkZXMubGFzdCgpLHI9dD9cIlJpZ2h0XCI6XCJMZWZ0XCIsbD10P1wiTGVmdFwiOlwiUmlnaHRcIix1PXRoaXM7KG89ZXx8KHQ/dGhpcy5vcHRpb25zLmluZmluaXRlV3JhcD9pLm5leHQoXCIuXCIuY29uY2F0KHRoaXMub3B0aW9ucy5zbGlkZUNsYXNzKSkubGVuZ3RoP2kubmV4dChcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLnNsaWRlQ2xhc3MpKTpzOmkubmV4dChcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLnNsaWRlQ2xhc3MpKTp0aGlzLm9wdGlvbnMuaW5maW5pdGVXcmFwP2kucHJldihcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLnNsaWRlQ2xhc3MpKS5sZW5ndGg/aS5wcmV2KFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuc2xpZGVDbGFzcykpOmE6aS5wcmV2KFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMuc2xpZGVDbGFzcykpKSkubGVuZ3RoJiYodGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiYmVmb3Jlc2xpZGVjaGFuZ2UuemYub3JiaXRcIixbaSxvXSksdGhpcy5vcHRpb25zLmJ1bGxldHMmJihuPW58fHRoaXMuJHNsaWRlcy5pbmRleChvKSx0aGlzLl91cGRhdGVCdWxsZXRzKG4pKSx0aGlzLm9wdGlvbnMudXNlTVVJJiYhdGhpcy4kZWxlbWVudC5pcyhcIjpoaWRkZW5cIik/KGMuTW90aW9uLmFuaW1hdGVJbihvLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpLHRoaXMub3B0aW9uc1tcImFuaW1JbkZyb21cIi5jb25jYXQocildLGZ1bmN0aW9uKCl7by5jc3Moe2Rpc3BsYXk6XCJibG9ja1wifSkuYXR0cihcImFyaWEtbGl2ZVwiLFwicG9saXRlXCIpfSksYy5Nb3Rpb24uYW5pbWF0ZU91dChpLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpLHRoaXMub3B0aW9uc1tcImFuaW1PdXRUb1wiLmNvbmNhdChsKV0sZnVuY3Rpb24oKXtpLnJlbW92ZUF0dHIoXCJhcmlhLWxpdmVcIiksdS5vcHRpb25zLmF1dG9QbGF5JiYhdS50aW1lci5pc1BhdXNlZCYmdS50aW1lci5yZXN0YXJ0KCl9KSk6KGkucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmUgaXMtaW5cIikucmVtb3ZlQXR0cihcImFyaWEtbGl2ZVwiKS5oaWRlKCksby5hZGRDbGFzcyhcImlzLWFjdGl2ZSBpcy1pblwiKS5hdHRyKFwiYXJpYS1saXZlXCIsXCJwb2xpdGVcIikuc2hvdygpLHRoaXMub3B0aW9ucy5hdXRvUGxheSYmIXRoaXMudGltZXIuaXNQYXVzZWQmJnRoaXMudGltZXIucmVzdGFydCgpKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJzbGlkZWNoYW5nZS56Zi5vcmJpdFwiLFtvXSkpfX19LHtrZXk6XCJfdXBkYXRlQnVsbGV0c1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuJGVsZW1lbnQuZmluZChcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLmJveE9mQnVsbGV0cykpLmZpbmQoXCIuaXMtYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpLmJsdXIoKS5maW5kKFwic3BhbjpsYXN0XCIpLmRldGFjaCgpO3RoaXMuJGJ1bGxldHMuZXEodCkuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIikuYXBwZW5kKGUpfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcIi56Zi5vcmJpdFwiKS5maW5kKFwiKlwiKS5vZmYoXCIuemYub3JiaXRcIikuZW5kKCkuaGlkZSgpfX1dKSYmZihlLnByb3RvdHlwZSxpKSxvJiZmKGUsbyksbn0oKTt2LmRlZmF1bHRzPXtidWxsZXRzOiEwLG5hdkJ1dHRvbnM6ITAsYW5pbUluRnJvbVJpZ2h0Olwic2xpZGUtaW4tcmlnaHRcIixhbmltT3V0VG9SaWdodDpcInNsaWRlLW91dC1yaWdodFwiLGFuaW1JbkZyb21MZWZ0Olwic2xpZGUtaW4tbGVmdFwiLGFuaW1PdXRUb0xlZnQ6XCJzbGlkZS1vdXQtbGVmdFwiLGF1dG9QbGF5OiEwLHRpbWVyRGVsYXk6NWUzLGluZmluaXRlV3JhcDohMCxzd2lwZTohMCxwYXVzZU9uSG92ZXI6ITAsYWNjZXNzaWJsZTohMCxjb250YWluZXJDbGFzczpcIm9yYml0LWNvbnRhaW5lclwiLHNsaWRlQ2xhc3M6XCJvcmJpdC1zbGlkZVwiLGJveE9mQnVsbGV0czpcIm9yYml0LWJ1bGxldHNcIixuZXh0Q2xhc3M6XCJvcmJpdC1uZXh0XCIscHJldkNsYXNzOlwib3JiaXQtcHJldmlvdXNcIix1c2VNVUk6ITB9fSxcIi4vanMvZm91bmRhdGlvbi5wb3NpdGlvbmFibGUuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiUG9zaXRpb25hYmxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gZ30pO3ZhciBhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5ib3guanNcIikscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLHI9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpO2Z1bmN0aW9uIGkodCl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGwodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIHUodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gYyh0KXtyZXR1cm4oYz1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZCh0LGUpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgaD1bXCJsZWZ0XCIsXCJyaWdodFwiLFwidG9wXCIsXCJib3R0b21cIl0sbz1bXCJ0b3BcIixcImJvdHRvbVwiLFwiY2VudGVyXCJdLGY9W1wibGVmdFwiLFwicmlnaHRcIixcImNlbnRlclwiXSxwPXtsZWZ0Om8scmlnaHQ6byx0b3A6Zixib3R0b206Zn07ZnVuY3Rpb24gbSh0LGUpe3ZhciBuPWUuaW5kZXhPZih0KTtyZXR1cm4gbj09PWUubGVuZ3RoLTE/ZVswXTplW24rMV19dmFyIGc9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsZSksdSh0aGlzLGMoZSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgbixpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZkKHQsZSl9KGUsc1tcIlBsdWdpblwiXSksbj1lLChpPVt7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMudHJpZWRQb3NpdGlvbnM9e30sdGhpcy5wb3NpdGlvbj1cImF1dG9cIj09PXRoaXMub3B0aW9ucy5wb3NpdGlvbj90aGlzLl9nZXREZWZhdWx0UG9zaXRpb24oKTp0aGlzLm9wdGlvbnMucG9zaXRpb24sdGhpcy5hbGlnbm1lbnQ9XCJhdXRvXCI9PT10aGlzLm9wdGlvbnMuYWxpZ25tZW50P3RoaXMuX2dldERlZmF1bHRBbGlnbm1lbnQoKTp0aGlzLm9wdGlvbnMuYWxpZ25tZW50LHRoaXMub3JpZ2luYWxQb3NpdGlvbj10aGlzLnBvc2l0aW9uLHRoaXMub3JpZ2luYWxBbGlnbm1lbnQ9dGhpcy5hbGlnbm1lbnR9fSx7a2V5OlwiX2dldERlZmF1bHRQb3NpdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJib3R0b21cIn19LHtrZXk6XCJfZ2V0RGVmYXVsdEFsaWdubWVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMucG9zaXRpb24pe2Nhc2VcImJvdHRvbVwiOmNhc2VcInRvcFwiOnJldHVybiBPYmplY3Qoci5ydGwpKCk/XCJyaWdodFwiOlwibGVmdFwiO2Nhc2VcImxlZnRcIjpjYXNlXCJyaWdodFwiOnJldHVyblwiYm90dG9tXCJ9fX0se2tleTpcIl9yZXBvc2l0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9hbGlnbm1lbnRzRXhoYXVzdGVkKHRoaXMucG9zaXRpb24pPyh0aGlzLnBvc2l0aW9uPW0odGhpcy5wb3NpdGlvbixoKSx0aGlzLmFsaWdubWVudD1wW3RoaXMucG9zaXRpb25dWzBdKTp0aGlzLl9yZWFsaWduKCl9fSx7a2V5OlwiX3JlYWxpZ25cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2FkZFRyaWVkUG9zaXRpb24odGhpcy5wb3NpdGlvbix0aGlzLmFsaWdubWVudCksdGhpcy5hbGlnbm1lbnQ9bSh0aGlzLmFsaWdubWVudCxwW3RoaXMucG9zaXRpb25dKX19LHtrZXk6XCJfYWRkVHJpZWRQb3NpdGlvblwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy50cmllZFBvc2l0aW9uc1t0XT10aGlzLnRyaWVkUG9zaXRpb25zW3RdfHxbXSx0aGlzLnRyaWVkUG9zaXRpb25zW3RdLnB1c2goZSl9fSx7a2V5OlwiX3Bvc2l0aW9uc0V4aGF1c3RlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PSEwLGU9MDtlPGgubGVuZ3RoO2UrKyl0PXQmJnRoaXMuX2FsaWdubWVudHNFeGhhdXN0ZWQoaFtlXSk7cmV0dXJuIHR9fSx7a2V5OlwiX2FsaWdubWVudHNFeGhhdXN0ZWRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50cmllZFBvc2l0aW9uc1t0XSYmdGhpcy50cmllZFBvc2l0aW9uc1t0XS5sZW5ndGg9PXBbdF0ubGVuZ3RofX0se2tleTpcIl9nZXRWT2Zmc2V0XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vcHRpb25zLnZPZmZzZXR9fSx7a2V5OlwiX2dldEhPZmZzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMuaE9mZnNldH19LHtrZXk6XCJfc2V0UG9zaXRpb25cIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7aWYoXCJmYWxzZVwiPT09dC5hdHRyKFwiYXJpYS1leHBhbmRlZFwiKSlyZXR1cm4hMTthLkJveC5HZXREaW1lbnNpb25zKGUpLGEuQm94LkdldERpbWVuc2lvbnModCk7aWYodGhpcy5vcHRpb25zLmFsbG93T3ZlcmxhcHx8KHRoaXMucG9zaXRpb249dGhpcy5vcmlnaW5hbFBvc2l0aW9uLHRoaXMuYWxpZ25tZW50PXRoaXMub3JpZ2luYWxBbGlnbm1lbnQpLGUub2Zmc2V0KGEuQm94LkdldEV4cGxpY2l0T2Zmc2V0cyhlLHQsdGhpcy5wb3NpdGlvbix0aGlzLmFsaWdubWVudCx0aGlzLl9nZXRWT2Zmc2V0KCksdGhpcy5fZ2V0SE9mZnNldCgpKSksIXRoaXMub3B0aW9ucy5hbGxvd092ZXJsYXApe2Zvcih2YXIgaT0xZTgsbz17cG9zaXRpb246dGhpcy5wb3NpdGlvbixhbGlnbm1lbnQ6dGhpcy5hbGlnbm1lbnR9OyF0aGlzLl9wb3NpdGlvbnNFeGhhdXN0ZWQoKTspe3ZhciBzPWEuQm94Lk92ZXJsYXBBcmVhKGUsbiwhMSwhMSx0aGlzLm9wdGlvbnMuYWxsb3dCb3R0b21PdmVybGFwKTtpZigwPT09cylyZXR1cm47czxpJiYoaT1zLG89e3Bvc2l0aW9uOnRoaXMucG9zaXRpb24sYWxpZ25tZW50OnRoaXMuYWxpZ25tZW50fSksdGhpcy5fcmVwb3NpdGlvbigpLGUub2Zmc2V0KGEuQm94LkdldEV4cGxpY2l0T2Zmc2V0cyhlLHQsdGhpcy5wb3NpdGlvbix0aGlzLmFsaWdubWVudCx0aGlzLl9nZXRWT2Zmc2V0KCksdGhpcy5fZ2V0SE9mZnNldCgpKSl9dGhpcy5wb3NpdGlvbj1vLnBvc2l0aW9uLHRoaXMuYWxpZ25tZW50PW8uYWxpZ25tZW50LGUub2Zmc2V0KGEuQm94LkdldEV4cGxpY2l0T2Zmc2V0cyhlLHQsdGhpcy5wb3NpdGlvbix0aGlzLmFsaWdubWVudCx0aGlzLl9nZXRWT2Zmc2V0KCksdGhpcy5fZ2V0SE9mZnNldCgpKSl9fX1dKSYmbChuLnByb3RvdHlwZSxpKSxvJiZsKG4sbyksZX0oKTtnLmRlZmF1bHRzPXtwb3NpdGlvbjpcImF1dG9cIixhbGlnbm1lbnQ6XCJhdXRvXCIsYWxsb3dPdmVybGFwOiExLGFsbG93Qm90dG9tT3ZlcmxhcDohMCx2T2Zmc2V0OjAsaE9mZnNldDowfX0sXCIuL2pzL2ZvdW5kYXRpb24ucmVzcG9uc2l2ZUFjY29yZGlvblRhYnMuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiUmVzcG9uc2l2ZUFjY29yZGlvblRhYnNcIixmdW5jdGlvbigpe3JldHVybiBtfSk7dmFyIGk9bihcImpxdWVyeVwiKSxjPW4ubihpKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tZWRpYVF1ZXJ5LmpzXCIpLGQ9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLHM9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnBsdWdpbi5qc1wiKSxvPW4oXCIuL2pzL2ZvdW5kYXRpb24uYWNjb3JkaW9uLmpzXCIpO2Z1bmN0aW9uIHIodCl7cmV0dXJuKHI9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGwodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIHUodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PXIoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gaCh0KXtyZXR1cm4oaD1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZih0LGUpe3JldHVybihmPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgcD17dGFiczp7Y3NzQ2xhc3M6XCJ0YWJzXCIscGx1Z2luOm4oXCIuL2pzL2ZvdW5kYXRpb24udGFicy5qc1wiKS5UYWJzfSxhY2NvcmRpb246e2Nzc0NsYXNzOlwiYWNjb3JkaW9uXCIscGx1Z2luOm8uQWNjb3JkaW9ufX0sbT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxlKSx1KHRoaXMsaChlKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBuLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmYodCxlKX0oZSxzW1wiUGx1Z2luXCJdKSxuPWUsKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9YygpKHQpLHRoaXMub3B0aW9ucz1jLmEuZXh0ZW5kKHt9LHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMucnVsZXM9dGhpcy4kZWxlbWVudC5kYXRhKFwicmVzcG9uc2l2ZS1hY2NvcmRpb24tdGFic1wiKSx0aGlzLmN1cnJlbnRNcT1udWxsLHRoaXMuY3VycmVudFBsdWdpbj1udWxsLHRoaXMuY2xhc3NOYW1lPVwiUmVzcG9uc2l2ZUFjY29yZGlvblRhYnNcIix0aGlzLiRlbGVtZW50LmF0dHIoXCJpZFwiKXx8dGhpcy4kZWxlbWVudC5hdHRyKFwiaWRcIixPYmplY3QoZC5HZXRZb0RpZ2l0cykoNixcInJlc3BvbnNpdmVhY2NvcmRpb250YWJzXCIpKSx0aGlzLl9pbml0KCksdGhpcy5fZXZlbnRzKCl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe2lmKGEuTWVkaWFRdWVyeS5faW5pdCgpLFwic3RyaW5nXCI9PXR5cGVvZiB0aGlzLnJ1bGVzKXtmb3IodmFyIHQ9e30sZT10aGlzLnJ1bGVzLnNwbGl0KFwiIFwiKSxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl0uc3BsaXQoXCItXCIpLG89MTxpLmxlbmd0aD9pWzBdOlwic21hbGxcIixzPTE8aS5sZW5ndGg/aVsxXTppWzBdO251bGwhPT1wW3NdJiYodFtvXT1wW3NdKX10aGlzLnJ1bGVzPXR9dGhpcy5fZ2V0QWxsT3B0aW9ucygpLGMuYS5pc0VtcHR5T2JqZWN0KHRoaXMucnVsZXMpfHx0aGlzLl9jaGVja01lZGlhUXVlcmllcygpfX0se2tleTpcIl9nZXRBbGxPcHRpb25zXCIsdmFsdWU6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcy5hbGxPcHRpb25zPXt9LHApaWYocC5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFyIGU9cFt0XTt0cnl7dmFyIG49YygpKFwiPHVsPjwvdWw+XCIpLGk9bmV3IGUucGx1Z2luKG4sdGhpcy5vcHRpb25zKTtmb3IodmFyIG8gaW4gaS5vcHRpb25zKWlmKGkub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShvKSYmXCJ6ZlBsdWdpblwiIT09byl7dmFyIHM9aS5vcHRpb25zW29dO3RoaXMuYWxsT3B0aW9uc1tvXT1zfWkuZGVzdHJveSgpfWNhdGNoKHQpe319fX0se2tleTpcIl9ldmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2NoYW5nZWRaZk1lZGlhUXVlcnlIYW5kbGVyPXRoaXMuX2NoZWNrTWVkaWFRdWVyaWVzLmJpbmQodGhpcyksYygpKHdpbmRvdykub24oXCJjaGFuZ2VkLnpmLm1lZGlhcXVlcnlcIix0aGlzLl9jaGFuZ2VkWmZNZWRpYVF1ZXJ5SGFuZGxlcil9fSx7a2V5OlwiX2NoZWNrTWVkaWFRdWVyaWVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZSxuPXRoaXM7Yy5hLmVhY2godGhpcy5ydWxlcyxmdW5jdGlvbih0KXthLk1lZGlhUXVlcnkuYXRMZWFzdCh0KSYmKGU9dCl9KSxlJiYodGhpcy5jdXJyZW50UGx1Z2luIGluc3RhbmNlb2YgdGhpcy5ydWxlc1tlXS5wbHVnaW58fChjLmEuZWFjaChwLGZ1bmN0aW9uKHQsZSl7bi4kZWxlbWVudC5yZW1vdmVDbGFzcyhlLmNzc0NsYXNzKX0pLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3ModGhpcy5ydWxlc1tlXS5jc3NDbGFzcyksdGhpcy5jdXJyZW50UGx1Z2luJiYoIXRoaXMuY3VycmVudFBsdWdpbi4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIikmJnRoaXMuc3RvcmV6ZkRhdGEmJnRoaXMuY3VycmVudFBsdWdpbi4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIix0aGlzLnN0b3JlemZEYXRhKSx0aGlzLmN1cnJlbnRQbHVnaW4uZGVzdHJveSgpKSx0aGlzLl9oYW5kbGVNYXJrdXAodGhpcy5ydWxlc1tlXS5jc3NDbGFzcyksdGhpcy5jdXJyZW50UGx1Z2luPW5ldyB0aGlzLnJ1bGVzW2VdLnBsdWdpbih0aGlzLiRlbGVtZW50LHt9KSx0aGlzLnN0b3JlemZEYXRhPXRoaXMuY3VycmVudFBsdWdpbi4kZWxlbWVudC5kYXRhKFwiemZQbHVnaW5cIikpKX19LHtrZXk6XCJfaGFuZGxlTWFya3VwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG49dGhpcyxlPVwiYWNjb3JkaW9uXCIsaT1jKCkoXCJbZGF0YS10YWJzLWNvbnRlbnQ9XCIrdGhpcy4kZWxlbWVudC5hdHRyKFwiaWRcIikrXCJdXCIpO2lmKGkubGVuZ3RoJiYoZT1cInRhYnNcIiksZSE9PXQpe3ZhciBvPW4uYWxsT3B0aW9ucy5saW5rQ2xhc3M/bi5hbGxPcHRpb25zLmxpbmtDbGFzczpcInRhYnMtdGl0bGVcIixzPW4uYWxsT3B0aW9ucy5wYW5lbENsYXNzP24uYWxsT3B0aW9ucy5wYW5lbENsYXNzOlwidGFicy1wYW5lbFwiO3RoaXMuJGVsZW1lbnQucmVtb3ZlQXR0cihcInJvbGVcIik7dmFyIGE9dGhpcy4kZWxlbWVudC5jaGlsZHJlbihcIi5cIitvK1wiLFtkYXRhLWFjY29yZGlvbi1pdGVtXVwiKS5yZW1vdmVDbGFzcyhvKS5yZW1vdmVDbGFzcyhcImFjY29yZGlvbi1pdGVtXCIpLnJlbW92ZUF0dHIoXCJkYXRhLWFjY29yZGlvbi1pdGVtXCIpLHI9YS5jaGlsZHJlbihcImFcIikucmVtb3ZlQ2xhc3MoXCJhY2NvcmRpb24tdGl0bGVcIik7aWYoXCJ0YWJzXCI9PT1lPyhpPWkuY2hpbGRyZW4oXCIuXCIrcykucmVtb3ZlQ2xhc3MocykucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIikpLmNoaWxkcmVuKFwiYVwiKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1jb250cm9sc1wiKS5yZW1vdmVBdHRyKFwiYXJpYS1zZWxlY3RlZFwiKTppPWEuY2hpbGRyZW4oXCJbZGF0YS10YWItY29udGVudF1cIikucmVtb3ZlQ2xhc3MoXCJhY2NvcmRpb24tY29udGVudFwiKSxpLmNzcyh7ZGlzcGxheTpcIlwiLHZpc2liaWxpdHk6XCJcIn0pLGEuY3NzKHtkaXNwbGF5OlwiXCIsdmlzaWJpbGl0eTpcIlwifSksXCJhY2NvcmRpb25cIj09PXQpaS5lYWNoKGZ1bmN0aW9uKHQsZSl7YygpKGUpLmFwcGVuZFRvKGEuZ2V0KHQpKS5hZGRDbGFzcyhcImFjY29yZGlvbi1jb250ZW50XCIpLmF0dHIoXCJkYXRhLXRhYi1jb250ZW50XCIsXCJcIikucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIikuY3NzKHtoZWlnaHQ6XCJcIn0pLGMoKShcIltkYXRhLXRhYnMtY29udGVudD1cIituLiRlbGVtZW50LmF0dHIoXCJpZFwiKStcIl1cIikuYWZ0ZXIoJzxkaXYgaWQ9XCJ0YWJzLXBsYWNlaG9sZGVyLScrbi4kZWxlbWVudC5hdHRyKFwiaWRcIikrJ1wiPjwvZGl2PicpLmRldGFjaCgpLGEuYWRkQ2xhc3MoXCJhY2NvcmRpb24taXRlbVwiKS5hdHRyKFwiZGF0YS1hY2NvcmRpb24taXRlbVwiLFwiXCIpLHIuYWRkQ2xhc3MoXCJhY2NvcmRpb24tdGl0bGVcIil9KTtlbHNlIGlmKFwidGFic1wiPT09dCl7dmFyIGw9YygpKFwiW2RhdGEtdGFicy1jb250ZW50PVwiK24uJGVsZW1lbnQuYXR0cihcImlkXCIpK1wiXVwiKSx1PWMoKShcIiN0YWJzLXBsYWNlaG9sZGVyLVwiK24uJGVsZW1lbnQuYXR0cihcImlkXCIpKTt1Lmxlbmd0aD8obD1jKCkoJzxkaXYgY2xhc3M9XCJ0YWJzLWNvbnRlbnRcIj48L2Rpdj4nKS5pbnNlcnRBZnRlcih1KS5hdHRyKFwiZGF0YS10YWJzLWNvbnRlbnRcIixuLiRlbGVtZW50LmF0dHIoXCJpZFwiKSksdS5yZW1vdmUoKSk6bD1jKCkoJzxkaXYgY2xhc3M9XCJ0YWJzLWNvbnRlbnRcIj48L2Rpdj4nKS5pbnNlcnRBZnRlcihuLiRlbGVtZW50KS5hdHRyKFwiZGF0YS10YWJzLWNvbnRlbnRcIixuLiRlbGVtZW50LmF0dHIoXCJpZFwiKSksaS5lYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIG49YygpKGUpLmFwcGVuZFRvKGwpLmFkZENsYXNzKHMpLGk9ci5nZXQodCkuaGFzaC5zbGljZSgxKSxvPWMoKShlKS5hdHRyKFwiaWRcIil8fE9iamVjdChkLkdldFlvRGlnaXRzKSg2LFwiYWNjb3JkaW9uXCIpO2khPT1vJiYoXCJcIiE9PWk/YygpKGUpLmF0dHIoXCJpZFwiLGkpOihpPW8sYygpKGUpLmF0dHIoXCJpZFwiLGkpLGMoKShyLmdldCh0KSkuYXR0cihcImhyZWZcIixjKCkoci5nZXQodCkpLmF0dHIoXCJocmVmXCIpLnJlcGxhY2UoXCIjXCIsXCJcIikrXCIjXCIraSkpKSxjKCkoYS5nZXQodCkpLmhhc0NsYXNzKFwiaXMtYWN0aXZlXCIpJiZuLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpfSksYS5hZGRDbGFzcyhvKX19fX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmN1cnJlbnRQbHVnaW4mJnRoaXMuY3VycmVudFBsdWdpbi5kZXN0cm95KCksYygpKHdpbmRvdykub2ZmKFwiY2hhbmdlZC56Zi5tZWRpYXF1ZXJ5XCIsdGhpcy5fY2hhbmdlZFpmTWVkaWFRdWVyeUhhbmRsZXIpfX1dKSYmbChuLnByb3RvdHlwZSxpKSxvJiZsKG4sbyksZX0oKTttLmRlZmF1bHRzPXt9fSxcIi4vanMvZm91bmRhdGlvbi5yZXNwb25zaXZlTWVudS5qc1wiOmZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksbi5kKGUsXCJSZXNwb25zaXZlTWVudVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZ9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLGE9bi5uKGkpLHI9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1lZGlhUXVlcnkuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIikscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLG89bihcIi4vanMvZm91bmRhdGlvbi5kcm9wZG93bk1lbnUuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLmRyaWxsZG93bi5qc1wiKSxjPW4oXCIuL2pzL2ZvdW5kYXRpb24uYWNjb3JkaW9uTWVudS5qc1wiKTtmdW5jdGlvbiBkKHQpe3JldHVybihkPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiBoKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBmKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1kKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIHAodCl7cmV0dXJuKHA9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIG0odCxlKXtyZXR1cm4obT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIGc9e2Ryb3Bkb3duOntjc3NDbGFzczpcImRyb3Bkb3duXCIscGx1Z2luOm8uRHJvcGRvd25NZW51fSxkcmlsbGRvd246e2Nzc0NsYXNzOlwiZHJpbGxkb3duXCIscGx1Z2luOnUuRHJpbGxkb3dufSxhY2NvcmRpb246e2Nzc0NsYXNzOlwiYWNjb3JkaW9uLW1lbnVcIixwbHVnaW46Yy5BY2NvcmRpb25NZW51fX0sdj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxlKSxmKHRoaXMscChlKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBuLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJm0odCxlKX0oZSxzW1wiUGx1Z2luXCJdKSxuPWUsKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9YSgpKHQpLHRoaXMucnVsZXM9dGhpcy4kZWxlbWVudC5kYXRhKFwicmVzcG9uc2l2ZS1tZW51XCIpLHRoaXMuY3VycmVudE1xPW51bGwsdGhpcy5jdXJyZW50UGx1Z2luPW51bGwsdGhpcy5jbGFzc05hbWU9XCJSZXNwb25zaXZlTWVudVwiLHRoaXMuX2luaXQoKSx0aGlzLl9ldmVudHMoKX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoci5NZWRpYVF1ZXJ5Ll9pbml0KCksXCJzdHJpbmdcIj09dHlwZW9mIHRoaXMucnVsZXMpe2Zvcih2YXIgdD17fSxlPXRoaXMucnVsZXMuc3BsaXQoXCIgXCIpLG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXS5zcGxpdChcIi1cIiksbz0xPGkubGVuZ3RoP2lbMF06XCJzbWFsbFwiLHM9MTxpLmxlbmd0aD9pWzFdOmlbMF07bnVsbCE9PWdbc10mJih0W29dPWdbc10pfXRoaXMucnVsZXM9dH1hLmEuaXNFbXB0eU9iamVjdCh0aGlzLnJ1bGVzKXx8dGhpcy5fY2hlY2tNZWRpYVF1ZXJpZXMoKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJkYXRhLW11dGF0ZVwiLHRoaXMuJGVsZW1lbnQuYXR0cihcImRhdGEtbXV0YXRlXCIpfHxPYmplY3QobC5HZXRZb0RpZ2l0cykoNixcInJlc3BvbnNpdmUtbWVudVwiKSl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczthKCkod2luZG93KS5vbihcImNoYW5nZWQuemYubWVkaWFxdWVyeVwiLGZ1bmN0aW9uKCl7dC5fY2hlY2tNZWRpYVF1ZXJpZXMoKX0pfX0se2tleTpcIl9jaGVja01lZGlhUXVlcmllc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGUsbj10aGlzO2EuYS5lYWNoKHRoaXMucnVsZXMsZnVuY3Rpb24odCl7ci5NZWRpYVF1ZXJ5LmF0TGVhc3QodCkmJihlPXQpfSksZSYmKHRoaXMuY3VycmVudFBsdWdpbiBpbnN0YW5jZW9mIHRoaXMucnVsZXNbZV0ucGx1Z2lufHwoYS5hLmVhY2goZyxmdW5jdGlvbih0LGUpe24uJGVsZW1lbnQucmVtb3ZlQ2xhc3MoZS5jc3NDbGFzcyl9KSx0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMucnVsZXNbZV0uY3NzQ2xhc3MpLHRoaXMuY3VycmVudFBsdWdpbiYmdGhpcy5jdXJyZW50UGx1Z2luLmRlc3Ryb3koKSx0aGlzLmN1cnJlbnRQbHVnaW49bmV3IHRoaXMucnVsZXNbZV0ucGx1Z2luKHRoaXMuJGVsZW1lbnQse30pKSl9fSx7a2V5OlwiX2Rlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY3VycmVudFBsdWdpbi5kZXN0cm95KCksYSgpKHdpbmRvdykub2ZmKFwiLnpmLlJlc3BvbnNpdmVNZW51XCIpfX1dKSYmaChuLnByb3RvdHlwZSxpKSxvJiZoKG4sbyksZX0oKTt2LmRlZmF1bHRzPXt9fSxcIi4vanMvZm91bmRhdGlvbi5yZXNwb25zaXZlVG9nZ2xlLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIlJlc3BvbnNpdmVUb2dnbGVcIixmdW5jdGlvbigpe3JldHVybiBmfSk7dmFyIGk9bihcImpxdWVyeVwiKSxzPW4ubihpKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tZWRpYVF1ZXJ5LmpzXCIpLHI9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1vdGlvbi5qc1wiKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIik7ZnVuY3Rpb24gbyh0KXtyZXR1cm4obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gdSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gYyh0LGUpe3JldHVybiFlfHxcIm9iamVjdFwiIT09byhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDAhPT10KXJldHVybiB0O3Rocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKX0odCk6ZX1mdW5jdGlvbiBkKHQpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9KSh0KX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuKGg9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9KSh0LGUpfXZhciBmPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLG4pLGModGhpcyxkKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9dmFyIGUsaSxvO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmaCh0LGUpfShuLGxbXCJQbHVnaW5cIl0pLGU9biwoaT1be2tleTpcIl9zZXR1cFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudD1zKCkodCksdGhpcy5vcHRpb25zPXMuYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIlJlc3BvbnNpdmVUb2dnbGVcIix0aGlzLl9pbml0KCksdGhpcy5fZXZlbnRzKCl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe2EuTWVkaWFRdWVyeS5faW5pdCgpO3ZhciBlPXRoaXMuJGVsZW1lbnQuZGF0YShcInJlc3BvbnNpdmUtdG9nZ2xlXCIpO2lmKGV8fGNvbnNvbGUuZXJyb3IoXCJZb3VyIHRhYiBiYXIgbmVlZHMgYW4gSUQgb2YgYSBNZW51IGFzIHRoZSB2YWx1ZSBvZiBkYXRhLXRhYi1iYXIuXCIpLHRoaXMuJHRhcmdldE1lbnU9cygpKFwiI1wiLmNvbmNhdChlKSksdGhpcy4kdG9nZ2xlcj10aGlzLiRlbGVtZW50LmZpbmQoXCJbZGF0YS10b2dnbGVdXCIpLmZpbHRlcihmdW5jdGlvbigpe3ZhciB0PXMoKSh0aGlzKS5kYXRhKFwidG9nZ2xlXCIpO3JldHVybiB0PT09ZXx8XCJcIj09PXR9KSx0aGlzLm9wdGlvbnM9cy5hLmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsdGhpcy4kdGFyZ2V0TWVudS5kYXRhKCkpLHRoaXMub3B0aW9ucy5hbmltYXRlKXt2YXIgdD10aGlzLm9wdGlvbnMuYW5pbWF0ZS5zcGxpdChcIiBcIik7dGhpcy5hbmltYXRpb25Jbj10WzBdLHRoaXMuYW5pbWF0aW9uT3V0PXRbMV18fG51bGx9dGhpcy5fdXBkYXRlKCl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fdXBkYXRlTXFIYW5kbGVyPXRoaXMuX3VwZGF0ZS5iaW5kKHRoaXMpLHMoKSh3aW5kb3cpLm9uKFwiY2hhbmdlZC56Zi5tZWRpYXF1ZXJ5XCIsdGhpcy5fdXBkYXRlTXFIYW5kbGVyKSx0aGlzLiR0b2dnbGVyLm9uKFwiY2xpY2suemYucmVzcG9uc2l2ZVRvZ2dsZVwiLHRoaXMudG9nZ2xlTWVudS5iaW5kKHRoaXMpKX19LHtrZXk6XCJfdXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXthLk1lZGlhUXVlcnkuYXRMZWFzdCh0aGlzLm9wdGlvbnMuaGlkZUZvcik/KHRoaXMuJGVsZW1lbnQuaGlkZSgpLHRoaXMuJHRhcmdldE1lbnUuc2hvdygpKToodGhpcy4kZWxlbWVudC5zaG93KCksdGhpcy4kdGFyZ2V0TWVudS5oaWRlKCkpfX0se2tleTpcInRvZ2dsZU1lbnVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7YS5NZWRpYVF1ZXJ5LmF0TGVhc3QodGhpcy5vcHRpb25zLmhpZGVGb3IpfHwodGhpcy5vcHRpb25zLmFuaW1hdGU/dGhpcy4kdGFyZ2V0TWVudS5pcyhcIjpoaWRkZW5cIik/ci5Nb3Rpb24uYW5pbWF0ZUluKHRoaXMuJHRhcmdldE1lbnUsdGhpcy5hbmltYXRpb25JbixmdW5jdGlvbigpe3QuJGVsZW1lbnQudHJpZ2dlcihcInRvZ2dsZWQuemYucmVzcG9uc2l2ZVRvZ2dsZVwiKSx0LiR0YXJnZXRNZW51LmZpbmQoXCJbZGF0YS1tdXRhdGVdXCIpLnRyaWdnZXJIYW5kbGVyKFwibXV0YXRlbWUuemYudHJpZ2dlclwiKX0pOnIuTW90aW9uLmFuaW1hdGVPdXQodGhpcy4kdGFyZ2V0TWVudSx0aGlzLmFuaW1hdGlvbk91dCxmdW5jdGlvbigpe3QuJGVsZW1lbnQudHJpZ2dlcihcInRvZ2dsZWQuemYucmVzcG9uc2l2ZVRvZ2dsZVwiKX0pOih0aGlzLiR0YXJnZXRNZW51LnRvZ2dsZSgwKSx0aGlzLiR0YXJnZXRNZW51LmZpbmQoXCJbZGF0YS1tdXRhdGVdXCIpLnRyaWdnZXIoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcInRvZ2dsZWQuemYucmVzcG9uc2l2ZVRvZ2dsZVwiKSkpfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcIi56Zi5yZXNwb25zaXZlVG9nZ2xlXCIpLHRoaXMuJHRvZ2dsZXIub2ZmKFwiLnpmLnJlc3BvbnNpdmVUb2dnbGVcIikscygpKHdpbmRvdykub2ZmKFwiY2hhbmdlZC56Zi5tZWRpYXF1ZXJ5XCIsdGhpcy5fdXBkYXRlTXFIYW5kbGVyKX19XSkmJnUoZS5wcm90b3R5cGUsaSksbyYmdShlLG8pLG59KCk7Zi5kZWZhdWx0cz17aGlkZUZvcjpcIm1lZGl1bVwiLGFuaW1hdGU6ITF9fSxcIi4vanMvZm91bmRhdGlvbi5yZXZlYWwuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiUmV2ZWFsXCIsZnVuY3Rpb24oKXtyZXR1cm4gZ30pO3ZhciBpPW4oXCJqcXVlcnlcIiksYT1uLm4oaSkscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwua2V5Ym9hcmQuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubWVkaWFRdWVyeS5qc1wiKSx1PW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tb3Rpb24uanNcIiksYz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLGQ9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLnRyaWdnZXJzLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGgodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGYodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gcCh0KXtyZXR1cm4ocD1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gbSh0LGUpe3JldHVybihtPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgZz1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxmKHRoaXMscChuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJm0odCxlKX0obixjW1wiUGx1Z2luXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9YS5hLmV4dGVuZCh7fSxuLmRlZmF1bHRzLHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiUmV2ZWFsXCIsdGhpcy5faW5pdCgpLGQuVHJpZ2dlcnMuaW5pdChhLmEpLHIuS2V5Ym9hcmQucmVnaXN0ZXIoXCJSZXZlYWxcIix7RVNDQVBFOlwiY2xvc2VcIn0pfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2wuTWVkaWFRdWVyeS5faW5pdCgpLHRoaXMuaWQ9dGhpcy4kZWxlbWVudC5hdHRyKFwiaWRcIiksdGhpcy5pc0FjdGl2ZT0hMSx0aGlzLmNhY2hlZD17bXE6bC5NZWRpYVF1ZXJ5LmN1cnJlbnR9LHRoaXMuJGFuY2hvcj1hKCkoJ1tkYXRhLW9wZW49XCInLmNvbmNhdCh0aGlzLmlkLCdcIl0nKSkubGVuZ3RoP2EoKSgnW2RhdGEtb3Blbj1cIicuY29uY2F0KHRoaXMuaWQsJ1wiXScpKTphKCkoJ1tkYXRhLXRvZ2dsZT1cIicuY29uY2F0KHRoaXMuaWQsJ1wiXScpKSx0aGlzLiRhbmNob3IuYXR0cih7XCJhcmlhLWNvbnRyb2xzXCI6dGhpcy5pZCxcImFyaWEtaGFzcG9wdXBcIjohMCx0YWJpbmRleDowfSksKHRoaXMub3B0aW9ucy5mdWxsU2NyZWVufHx0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwiZnVsbFwiKSkmJih0aGlzLm9wdGlvbnMuZnVsbFNjcmVlbj0hMCx0aGlzLm9wdGlvbnMub3ZlcmxheT0hMSksdGhpcy5vcHRpb25zLm92ZXJsYXkmJiF0aGlzLiRvdmVybGF5JiYodGhpcy4kb3ZlcmxheT10aGlzLl9tYWtlT3ZlcmxheSh0aGlzLmlkKSksdGhpcy4kZWxlbWVudC5hdHRyKHtyb2xlOlwiZGlhbG9nXCIsXCJhcmlhLWhpZGRlblwiOiEwLFwiZGF0YS15ZXRpLWJveFwiOnRoaXMuaWQsXCJkYXRhLXJlc2l6ZVwiOnRoaXMuaWR9KSx0aGlzLiRvdmVybGF5P3RoaXMuJGVsZW1lbnQuZGV0YWNoKCkuYXBwZW5kVG8odGhpcy4kb3ZlcmxheSk6KHRoaXMuJGVsZW1lbnQuZGV0YWNoKCkuYXBwZW5kVG8oYSgpKHRoaXMub3B0aW9ucy5hcHBlbmRUbykpLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJ3aXRob3V0LW92ZXJsYXlcIikpLHRoaXMuX2V2ZW50cygpLHRoaXMub3B0aW9ucy5kZWVwTGluayYmd2luZG93LmxvY2F0aW9uLmhhc2g9PT1cIiNcIi5jb25jYXQodGhpcy5pZCkmJih0aGlzLm9uTG9hZExpc3RlbmVyPU9iamVjdChzLm9uTG9hZCkoYSgpKHdpbmRvdyksZnVuY3Rpb24oKXtyZXR1cm4gdC5vcGVuKCl9KSl9fSx7a2V5OlwiX21ha2VPdmVybGF5XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1cIlwiO3JldHVybiB0aGlzLm9wdGlvbnMuYWRkaXRpb25hbE92ZXJsYXlDbGFzc2VzJiYodD1cIiBcIit0aGlzLm9wdGlvbnMuYWRkaXRpb25hbE92ZXJsYXlDbGFzc2VzKSxhKCkoXCI8ZGl2PjwvZGl2PlwiKS5hZGRDbGFzcyhcInJldmVhbC1vdmVybGF5XCIrdCkuYXBwZW5kVG8odGhpcy5vcHRpb25zLmFwcGVuZFRvKX19LHtrZXk6XCJfdXBkYXRlUG9zaXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy4kZWxlbWVudC5vdXRlcldpZHRoKCksbj1hKCkod2luZG93KS53aWR0aCgpLGk9dGhpcy4kZWxlbWVudC5vdXRlckhlaWdodCgpLG89YSgpKHdpbmRvdykuaGVpZ2h0KCkscz1udWxsO3Q9XCJhdXRvXCI9PT10aGlzLm9wdGlvbnMuaE9mZnNldD9wYXJzZUludCgobi1lKS8yLDEwKTpwYXJzZUludCh0aGlzLm9wdGlvbnMuaE9mZnNldCwxMCksXCJhdXRvXCI9PT10aGlzLm9wdGlvbnMudk9mZnNldD9zPW88aT9wYXJzZUludChNYXRoLm1pbigxMDAsby8xMCksMTApOnBhcnNlSW50KChvLWkpLzQsMTApOm51bGwhPT10aGlzLm9wdGlvbnMudk9mZnNldCYmKHM9cGFyc2VJbnQodGhpcy5vcHRpb25zLnZPZmZzZXQsMTApKSxudWxsIT09cyYmdGhpcy4kZWxlbWVudC5jc3Moe3RvcDpzK1wicHhcIn0pLHRoaXMuJG92ZXJsYXkmJlwiYXV0b1wiPT09dGhpcy5vcHRpb25zLmhPZmZzZXR8fCh0aGlzLiRlbGVtZW50LmNzcyh7bGVmdDp0K1wicHhcIn0pLHRoaXMuJGVsZW1lbnQuY3NzKHttYXJnaW46XCIwcHhcIn0pKX19LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgbj10aGlzLGk9dGhpczt0aGlzLiRlbGVtZW50Lm9uKHtcIm9wZW4uemYudHJpZ2dlclwiOnRoaXMub3Blbi5iaW5kKHRoaXMpLFwiY2xvc2UuemYudHJpZ2dlclwiOmZ1bmN0aW9uKHQsZSl7aWYodC50YXJnZXQ9PT1pLiRlbGVtZW50WzBdfHxhKCkodC50YXJnZXQpLnBhcmVudHMoXCJbZGF0YS1jbG9zYWJsZV1cIilbMF09PT1lKXJldHVybiBuLmNsb3NlLmFwcGx5KG4pfSxcInRvZ2dsZS56Zi50cmlnZ2VyXCI6dGhpcy50b2dnbGUuYmluZCh0aGlzKSxcInJlc2l6ZW1lLnpmLnRyaWdnZXJcIjpmdW5jdGlvbigpe2kuX3VwZGF0ZVBvc2l0aW9uKCl9fSksdGhpcy5vcHRpb25zLmNsb3NlT25DbGljayYmdGhpcy5vcHRpb25zLm92ZXJsYXkmJnRoaXMuJG92ZXJsYXkub2ZmKFwiLnpmLnJldmVhbFwiKS5vbihcImNsaWNrLnpmLnJldmVhbFwiLGZ1bmN0aW9uKHQpe3QudGFyZ2V0IT09aS4kZWxlbWVudFswXSYmIWEuYS5jb250YWlucyhpLiRlbGVtZW50WzBdLHQudGFyZ2V0KSYmYS5hLmNvbnRhaW5zKGRvY3VtZW50LHQudGFyZ2V0KSYmaS5jbG9zZSgpfSksdGhpcy5vcHRpb25zLmRlZXBMaW5rJiZhKCkod2luZG93KS5vbihcImhhc2hjaGFuZ2UuemYucmV2ZWFsOlwiLmNvbmNhdCh0aGlzLmlkKSx0aGlzLl9oYW5kbGVTdGF0ZS5iaW5kKHRoaXMpKX19LHtrZXk6XCJfaGFuZGxlU3RhdGVcIix2YWx1ZTpmdW5jdGlvbih0KXt3aW5kb3cubG9jYXRpb24uaGFzaCE9PVwiI1wiK3RoaXMuaWR8fHRoaXMuaXNBY3RpdmU/dGhpcy5jbG9zZSgpOnRoaXMub3BlbigpfX0se2tleTpcIl9kaXNhYmxlU2Nyb2xsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dD10fHxhKCkod2luZG93KS5zY3JvbGxUb3AoKSxhKCkoZG9jdW1lbnQpLmhlaWdodCgpPmEoKSh3aW5kb3cpLmhlaWdodCgpJiZhKCkoXCJodG1sXCIpLmNzcyhcInRvcFwiLC10KX19LHtrZXk6XCJfZW5hYmxlU2Nyb2xsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dD10fHxwYXJzZUludChhKCkoXCJodG1sXCIpLmNzcyhcInRvcFwiKSksYSgpKGRvY3VtZW50KS5oZWlnaHQoKT5hKCkod2luZG93KS5oZWlnaHQoKSYmKGEoKShcImh0bWxcIikuY3NzKFwidG9wXCIsXCJcIiksYSgpKHdpbmRvdykuc2Nyb2xsVG9wKC10KSl9fSx7a2V5Olwib3BlblwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVwiI1wiLmNvbmNhdCh0aGlzLmlkKTt0aGlzLm9wdGlvbnMuZGVlcExpbmsmJndpbmRvdy5sb2NhdGlvbi5oYXNoIT09ZSYmKHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZT90aGlzLm9wdGlvbnMudXBkYXRlSGlzdG9yeT93aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoe30sXCJcIixlKTp3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoe30sXCJcIixlKTp3aW5kb3cubG9jYXRpb24uaGFzaD1lKSx0aGlzLiRhY3RpdmVBbmNob3I9YSgpKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpLmlzKHRoaXMuJGFuY2hvcik/YSgpKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpOnRoaXMuJGFuY2hvcix0aGlzLmlzQWN0aXZlPSEwLHRoaXMuJGVsZW1lbnQuY3NzKHt2aXNpYmlsaXR5OlwiaGlkZGVuXCJ9KS5zaG93KCkuc2Nyb2xsVG9wKDApLHRoaXMub3B0aW9ucy5vdmVybGF5JiZ0aGlzLiRvdmVybGF5LmNzcyh7dmlzaWJpbGl0eTpcImhpZGRlblwifSkuc2hvdygpLHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCksdGhpcy4kZWxlbWVudC5oaWRlKCkuY3NzKHt2aXNpYmlsaXR5OlwiXCJ9KSx0aGlzLiRvdmVybGF5JiYodGhpcy4kb3ZlcmxheS5jc3Moe3Zpc2liaWxpdHk6XCJcIn0pLmhpZGUoKSx0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwiZmFzdFwiKT90aGlzLiRvdmVybGF5LmFkZENsYXNzKFwiZmFzdFwiKTp0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwic2xvd1wiKSYmdGhpcy4kb3ZlcmxheS5hZGRDbGFzcyhcInNsb3dcIikpLHRoaXMub3B0aW9ucy5tdWx0aXBsZU9wZW5lZHx8dGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiY2xvc2VtZS56Zi5yZXZlYWxcIix0aGlzLmlkKSx0aGlzLl9kaXNhYmxlU2Nyb2xsKCk7dmFyIG49dGhpcztpZih0aGlzLm9wdGlvbnMuYW5pbWF0aW9uSW4pe3RoaXMub3B0aW9ucy5vdmVybGF5JiZ1Lk1vdGlvbi5hbmltYXRlSW4odGhpcy4kb3ZlcmxheSxcImZhZGUtaW5cIiksdS5Nb3Rpb24uYW5pbWF0ZUluKHRoaXMuJGVsZW1lbnQsdGhpcy5vcHRpb25zLmFuaW1hdGlvbkluLGZ1bmN0aW9uKCl7dC4kZWxlbWVudCYmKHQuZm9jdXNhYmxlRWxlbWVudHM9ci5LZXlib2FyZC5maW5kRm9jdXNhYmxlKHQuJGVsZW1lbnQpLG4uJGVsZW1lbnQuYXR0cih7XCJhcmlhLWhpZGRlblwiOiExLHRhYmluZGV4Oi0xfSkuZm9jdXMoKSxuLl9hZGRHbG9iYWxDbGFzc2VzKCksci5LZXlib2FyZC50cmFwRm9jdXMobi4kZWxlbWVudCkpfSl9ZWxzZSB0aGlzLm9wdGlvbnMub3ZlcmxheSYmdGhpcy4kb3ZlcmxheS5zaG93KDApLHRoaXMuJGVsZW1lbnQuc2hvdyh0aGlzLm9wdGlvbnMuc2hvd0RlbGF5KTt0aGlzLiRlbGVtZW50LmF0dHIoe1wiYXJpYS1oaWRkZW5cIjohMSx0YWJpbmRleDotMX0pLmZvY3VzKCksci5LZXlib2FyZC50cmFwRm9jdXModGhpcy4kZWxlbWVudCksdGhpcy5fYWRkR2xvYmFsQ2xhc3NlcygpLHRoaXMuX2FkZEdsb2JhbExpc3RlbmVycygpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcIm9wZW4uemYucmV2ZWFsXCIpfX0se2tleTpcIl9hZGRHbG9iYWxDbGFzc2VzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbigpe2EoKShcImh0bWxcIikudG9nZ2xlQ2xhc3MoXCJ6Zi1oYXMtc2Nyb2xsXCIsISEoYSgpKGRvY3VtZW50KS5oZWlnaHQoKT5hKCkod2luZG93KS5oZWlnaHQoKSkpfTt0aGlzLiRlbGVtZW50Lm9uKFwicmVzaXplbWUuemYudHJpZ2dlci5yZXZlYWxTY3JvbGxiYXJMaXN0ZW5lclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHQoKX0pLHQoKSxhKCkoXCJodG1sXCIpLmFkZENsYXNzKFwiaXMtcmV2ZWFsLW9wZW5cIil9fSx7a2V5OlwiX3JlbW92ZUdsb2JhbENsYXNzZXNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQub2ZmKFwicmVzaXplbWUuemYudHJpZ2dlci5yZXZlYWxTY3JvbGxiYXJMaXN0ZW5lclwiKSxhKCkoXCJodG1sXCIpLnJlbW92ZUNsYXNzKFwiaXMtcmV2ZWFsLW9wZW5cIiksYSgpKFwiaHRtbFwiKS5yZW1vdmVDbGFzcyhcInpmLWhhcy1zY3JvbGxcIil9fSx7a2V5OlwiX2FkZEdsb2JhbExpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLiRlbGVtZW50JiYodGhpcy5mb2N1c2FibGVFbGVtZW50cz1yLktleWJvYXJkLmZpbmRGb2N1c2FibGUodGhpcy4kZWxlbWVudCksdGhpcy5vcHRpb25zLm92ZXJsYXl8fCF0aGlzLm9wdGlvbnMuY2xvc2VPbkNsaWNrfHx0aGlzLm9wdGlvbnMuZnVsbFNjcmVlbnx8YSgpKFwiYm9keVwiKS5vbihcImNsaWNrLnpmLnJldmVhbFwiLGZ1bmN0aW9uKHQpe3QudGFyZ2V0IT09ZS4kZWxlbWVudFswXSYmIWEuYS5jb250YWlucyhlLiRlbGVtZW50WzBdLHQudGFyZ2V0KSYmYS5hLmNvbnRhaW5zKGRvY3VtZW50LHQudGFyZ2V0KSYmZS5jbG9zZSgpfSksdGhpcy5vcHRpb25zLmNsb3NlT25Fc2MmJmEoKSh3aW5kb3cpLm9uKFwia2V5ZG93bi56Zi5yZXZlYWxcIixmdW5jdGlvbih0KXtyLktleWJvYXJkLmhhbmRsZUtleSh0LFwiUmV2ZWFsXCIse2Nsb3NlOmZ1bmN0aW9uKCl7ZS5vcHRpb25zLmNsb3NlT25Fc2MmJmUuY2xvc2UoKX19KX0pKX19LHtrZXk6XCJjbG9zZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoIXRoaXMuaXNBY3RpdmV8fCF0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIikpcmV0dXJuITE7dmFyIGU9dGhpcztmdW5jdGlvbiB0KCl7dmFyIHQ9cGFyc2VJbnQoYSgpKFwiaHRtbFwiKS5jc3MoXCJ0b3BcIikpOzA9PT1hKCkoXCIucmV2ZWFsOnZpc2libGVcIikubGVuZ3RoJiZlLl9yZW1vdmVHbG9iYWxDbGFzc2VzKCksci5LZXlib2FyZC5yZWxlYXNlRm9jdXMoZS4kZWxlbWVudCksZS4kZWxlbWVudC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwhMCksZS5fZW5hYmxlU2Nyb2xsKHQpLGUuJGVsZW1lbnQudHJpZ2dlcihcImNsb3NlZC56Zi5yZXZlYWxcIil9aWYodGhpcy5vcHRpb25zLmFuaW1hdGlvbk91dD8odGhpcy5vcHRpb25zLm92ZXJsYXkmJnUuTW90aW9uLmFuaW1hdGVPdXQodGhpcy4kb3ZlcmxheSxcImZhZGUtb3V0XCIpLHUuTW90aW9uLmFuaW1hdGVPdXQodGhpcy4kZWxlbWVudCx0aGlzLm9wdGlvbnMuYW5pbWF0aW9uT3V0LHQpKToodGhpcy4kZWxlbWVudC5oaWRlKHRoaXMub3B0aW9ucy5oaWRlRGVsYXkpLHRoaXMub3B0aW9ucy5vdmVybGF5P3RoaXMuJG92ZXJsYXkuaGlkZSgwLHQpOnQoKSksdGhpcy5vcHRpb25zLmNsb3NlT25Fc2MmJmEoKSh3aW5kb3cpLm9mZihcImtleWRvd24uemYucmV2ZWFsXCIpLCF0aGlzLm9wdGlvbnMub3ZlcmxheSYmdGhpcy5vcHRpb25zLmNsb3NlT25DbGljayYmYSgpKFwiYm9keVwiKS5vZmYoXCJjbGljay56Zi5yZXZlYWxcIiksdGhpcy4kZWxlbWVudC5vZmYoXCJrZXlkb3duLnpmLnJldmVhbFwiKSx0aGlzLm9wdGlvbnMucmVzZXRPbkNsb3NlJiZ0aGlzLiRlbGVtZW50Lmh0bWwodGhpcy4kZWxlbWVudC5odG1sKCkpLHRoaXMuaXNBY3RpdmU9ITEsZS5vcHRpb25zLmRlZXBMaW5rJiZ3aW5kb3cubG9jYXRpb24uaGFzaD09PVwiI1wiLmNvbmNhdCh0aGlzLmlkKSlpZih3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUpe3ZhciBuPXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSt3aW5kb3cubG9jYXRpb24uc2VhcmNoO3RoaXMub3B0aW9ucy51cGRhdGVIaXN0b3J5P3dpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh7fSxcIlwiLG4pOndpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShcIlwiLGRvY3VtZW50LnRpdGxlLG4pfWVsc2Ugd2luZG93LmxvY2F0aW9uLmhhc2g9XCJcIjt0aGlzLiRhY3RpdmVBbmNob3IuZm9jdXMoKX19LHtrZXk6XCJ0b2dnbGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaXNBY3RpdmU/dGhpcy5jbG9zZSgpOnRoaXMub3BlbigpfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMub3ZlcmxheSYmKHRoaXMuJGVsZW1lbnQuYXBwZW5kVG8oYSgpKHRoaXMub3B0aW9ucy5hcHBlbmRUbykpLHRoaXMuJG92ZXJsYXkuaGlkZSgpLm9mZigpLnJlbW92ZSgpKSx0aGlzLiRlbGVtZW50LmhpZGUoKS5vZmYoKSx0aGlzLiRhbmNob3Iub2ZmKFwiLnpmXCIpLGEoKSh3aW5kb3cpLm9mZihcIi56Zi5yZXZlYWw6XCIuY29uY2F0KHRoaXMuaWQpKSx0aGlzLm9uTG9hZExpc3RlbmVyJiZhKCkod2luZG93KS5vZmYodGhpcy5vbkxvYWRMaXN0ZW5lciksMD09PWEoKShcIi5yZXZlYWw6dmlzaWJsZVwiKS5sZW5ndGgmJnRoaXMuX3JlbW92ZUdsb2JhbENsYXNzZXMoKX19XSkmJmgoZS5wcm90b3R5cGUsaSksbyYmaChlLG8pLG59KCk7Zy5kZWZhdWx0cz17YW5pbWF0aW9uSW46XCJcIixhbmltYXRpb25PdXQ6XCJcIixzaG93RGVsYXk6MCxoaWRlRGVsYXk6MCxjbG9zZU9uQ2xpY2s6ITAsY2xvc2VPbkVzYzohMCxtdWx0aXBsZU9wZW5lZDohMSx2T2Zmc2V0OlwiYXV0b1wiLGhPZmZzZXQ6XCJhdXRvXCIsZnVsbFNjcmVlbjohMSxvdmVybGF5OiEwLHJlc2V0T25DbG9zZTohMSxkZWVwTGluazohMSx1cGRhdGVIaXN0b3J5OiExLGFwcGVuZFRvOlwiYm9keVwiLGFkZGl0aW9uYWxPdmVybGF5Q2xhc3NlczpcIlwifX0sXCIuL2pzL2ZvdW5kYXRpb24uc2xpZGVyLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIlNsaWRlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLG09bi5uKGkpLGE9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLmtleWJvYXJkLmpzXCIpLF89bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1vdGlvbi5qc1wiKSxnPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxzPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudG91Y2guanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudHJpZ2dlcnMuanNcIik7ZnVuY3Rpb24gbyh0KXtyZXR1cm4obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gdSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gYyh0LGUpe3JldHVybiFlfHxcIm9iamVjdFwiIT09byhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDAhPT10KXJldHVybiB0O3Rocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKX0odCk6ZX1mdW5jdGlvbiBkKHQpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9KSh0KX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuKGg9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9KSh0LGUpfXZhciBmPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLG4pLGModGhpcyxkKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9dmFyIGUsaSxvO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmaCh0LGUpfShuLHNbXCJQbHVnaW5cIl0pLGU9biwoaT1be2tleTpcIl9zZXR1cFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudD10LHRoaXMub3B0aW9ucz1tLmEuZXh0ZW5kKHt9LG4uZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksZSksdGhpcy5jbGFzc05hbWU9XCJTbGlkZXJcIixyLlRvdWNoLmluaXQobS5hKSxsLlRyaWdnZXJzLmluaXQobS5hKSx0aGlzLl9pbml0KCksYS5LZXlib2FyZC5yZWdpc3RlcihcIlNsaWRlclwiLHtsdHI6e0FSUk9XX1JJR0hUOlwiaW5jcmVhc2VcIixBUlJPV19VUDpcImluY3JlYXNlXCIsQVJST1dfRE9XTjpcImRlY3JlYXNlXCIsQVJST1dfTEVGVDpcImRlY3JlYXNlXCIsU0hJRlRfQVJST1dfUklHSFQ6XCJpbmNyZWFzZV9mYXN0XCIsU0hJRlRfQVJST1dfVVA6XCJpbmNyZWFzZV9mYXN0XCIsU0hJRlRfQVJST1dfRE9XTjpcImRlY3JlYXNlX2Zhc3RcIixTSElGVF9BUlJPV19MRUZUOlwiZGVjcmVhc2VfZmFzdFwiLEhPTUU6XCJtaW5cIixFTkQ6XCJtYXhcIn0scnRsOntBUlJPV19MRUZUOlwiaW5jcmVhc2VcIixBUlJPV19SSUdIVDpcImRlY3JlYXNlXCIsU0hJRlRfQVJST1dfTEVGVDpcImluY3JlYXNlX2Zhc3RcIixTSElGVF9BUlJPV19SSUdIVDpcImRlY3JlYXNlX2Zhc3RcIn19KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pbnB1dHM9dGhpcy4kZWxlbWVudC5maW5kKFwiaW5wdXRcIiksdGhpcy5oYW5kbGVzPXRoaXMuJGVsZW1lbnQuZmluZChcIltkYXRhLXNsaWRlci1oYW5kbGVdXCIpLHRoaXMuJGhhbmRsZT10aGlzLmhhbmRsZXMuZXEoMCksdGhpcy4kaW5wdXQ9dGhpcy5pbnB1dHMubGVuZ3RoP3RoaXMuaW5wdXRzLmVxKDApOm0oKShcIiNcIi5jb25jYXQodGhpcy4kaGFuZGxlLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpKSksdGhpcy4kZmlsbD10aGlzLiRlbGVtZW50LmZpbmQoXCJbZGF0YS1zbGlkZXItZmlsbF1cIikuY3NzKHRoaXMub3B0aW9ucy52ZXJ0aWNhbD9cImhlaWdodFwiOlwid2lkdGhcIiwwKTsodGhpcy5vcHRpb25zLmRpc2FibGVkfHx0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKHRoaXMub3B0aW9ucy5kaXNhYmxlZENsYXNzKSkmJih0aGlzLm9wdGlvbnMuZGlzYWJsZWQ9ITAsdGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZGlzYWJsZWRDbGFzcykpLHRoaXMuaW5wdXRzLmxlbmd0aHx8KHRoaXMuaW5wdXRzPW0oKSgpLmFkZCh0aGlzLiRpbnB1dCksdGhpcy5vcHRpb25zLmJpbmRpbmc9ITApLHRoaXMuX3NldEluaXRBdHRyKDApLHRoaXMuaGFuZGxlc1sxXSYmKHRoaXMub3B0aW9ucy5kb3VibGVTaWRlZD0hMCx0aGlzLiRoYW5kbGUyPXRoaXMuaGFuZGxlcy5lcSgxKSx0aGlzLiRpbnB1dDI9MTx0aGlzLmlucHV0cy5sZW5ndGg/dGhpcy5pbnB1dHMuZXEoMSk6bSgpKFwiI1wiLmNvbmNhdCh0aGlzLiRoYW5kbGUyLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpKSksdGhpcy5pbnB1dHNbMV18fCh0aGlzLmlucHV0cz10aGlzLmlucHV0cy5hZGQodGhpcy4kaW5wdXQyKSksITAsdGhpcy5fc2V0SW5pdEF0dHIoMSkpLHRoaXMuc2V0SGFuZGxlcygpLHRoaXMuX2V2ZW50cygpfX0se2tleTpcInNldEhhbmRsZXNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5oYW5kbGVzWzFdP3RoaXMuX3NldEhhbmRsZVBvcyh0aGlzLiRoYW5kbGUsdGhpcy5pbnB1dHMuZXEoMCkudmFsKCksITAsZnVuY3Rpb24oKXt0Ll9zZXRIYW5kbGVQb3ModC4kaGFuZGxlMix0LmlucHV0cy5lcSgxKS52YWwoKSwhMCl9KTp0aGlzLl9zZXRIYW5kbGVQb3ModGhpcy4kaGFuZGxlLHRoaXMuaW5wdXRzLmVxKDApLnZhbCgpLCEwKX19LHtrZXk6XCJfcmVmbG93XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnNldEhhbmRsZXMoKX19LHtrZXk6XCJfcGN0T2ZCYXJcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT0kKHQtdGhpcy5vcHRpb25zLnN0YXJ0LHRoaXMub3B0aW9ucy5lbmQtdGhpcy5vcHRpb25zLnN0YXJ0KTtzd2l0Y2godGhpcy5vcHRpb25zLnBvc2l0aW9uVmFsdWVGdW5jdGlvbil7Y2FzZVwicG93XCI6ZT10aGlzLl9sb2dUcmFuc2Zvcm0oZSk7YnJlYWs7Y2FzZVwibG9nXCI6ZT10aGlzLl9wb3dUcmFuc2Zvcm0oZSl9cmV0dXJuIGUudG9GaXhlZCgyKX19LHtrZXk6XCJfdmFsdWVcIix2YWx1ZTpmdW5jdGlvbih0KXtzd2l0Y2godGhpcy5vcHRpb25zLnBvc2l0aW9uVmFsdWVGdW5jdGlvbil7Y2FzZVwicG93XCI6dD10aGlzLl9wb3dUcmFuc2Zvcm0odCk7YnJlYWs7Y2FzZVwibG9nXCI6dD10aGlzLl9sb2dUcmFuc2Zvcm0odCl9cmV0dXJuKHRoaXMub3B0aW9ucy5lbmQtdGhpcy5vcHRpb25zLnN0YXJ0KSp0K3BhcnNlRmxvYXQodGhpcy5vcHRpb25zLnN0YXJ0KX19LHtrZXk6XCJfbG9nVHJhbnNmb3JtXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIGU9dGhpcy5vcHRpb25zLm5vbkxpbmVhckJhc2Usbj10Kih0aGlzLm9wdGlvbnMubm9uTGluZWFyQmFzZS0xKSsxLE1hdGgubG9nKG4pL01hdGgubG9nKGUpO3ZhciBlLG59fSx7a2V5OlwiX3Bvd1RyYW5zZm9ybVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybihNYXRoLnBvdyh0aGlzLm9wdGlvbnMubm9uTGluZWFyQmFzZSx0KS0xKS8odGhpcy5vcHRpb25zLm5vbkxpbmVhckJhc2UtMSl9fSx7a2V5OlwiX3NldEhhbmRsZVBvc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuLGkpe2lmKCF0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKHRoaXMub3B0aW9ucy5kaXNhYmxlZENsYXNzKSl7KGU9cGFyc2VGbG9hdChlKSk8dGhpcy5vcHRpb25zLnN0YXJ0P2U9dGhpcy5vcHRpb25zLnN0YXJ0OmU+dGhpcy5vcHRpb25zLmVuZCYmKGU9dGhpcy5vcHRpb25zLmVuZCk7dmFyIG89dGhpcy5vcHRpb25zLmRvdWJsZVNpZGVkO2lmKHRoaXMub3B0aW9ucy52ZXJ0aWNhbCYmIW4mJihlPXRoaXMub3B0aW9ucy5lbmQtZSksbylpZigwPT09dGhpcy5oYW5kbGVzLmluZGV4KHQpKXt2YXIgcz1wYXJzZUZsb2F0KHRoaXMuJGhhbmRsZTIuYXR0cihcImFyaWEtdmFsdWVub3dcIikpO2U9czw9ZT9zLXRoaXMub3B0aW9ucy5zdGVwOmV9ZWxzZXt2YXIgYT1wYXJzZUZsb2F0KHRoaXMuJGhhbmRsZS5hdHRyKFwiYXJpYS12YWx1ZW5vd1wiKSk7ZT1lPD1hP2ErdGhpcy5vcHRpb25zLnN0ZXA6ZX12YXIgcj10aGlzLGw9dGhpcy5vcHRpb25zLnZlcnRpY2FsLHU9bD9cImhlaWdodFwiOlwid2lkdGhcIixjPWw/XCJ0b3BcIjpcImxlZnRcIixkPXRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbdV0saD10aGlzLiRlbGVtZW50WzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW3VdLGY9dGhpcy5fcGN0T2ZCYXIoZSkscD0oMTAwKiQoKGgtZCkqZixoKSkudG9GaXhlZCh0aGlzLm9wdGlvbnMuZGVjaW1hbCk7ZT1wYXJzZUZsb2F0KGUudG9GaXhlZCh0aGlzLm9wdGlvbnMuZGVjaW1hbCkpO3ZhciBtPXt9O2lmKHRoaXMuX3NldFZhbHVlcyh0LGUpLG8pe3ZhciBnLHY9MD09PXRoaXMuaGFuZGxlcy5pbmRleCh0KSx5PX5+KDEwMCokKGQsaCkpO2lmKHYpbVtjXT1cIlwiLmNvbmNhdChwLFwiJVwiKSxnPXBhcnNlRmxvYXQodGhpcy4kaGFuZGxlMlswXS5zdHlsZVtjXSktcCt5LGkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGkmJmkoKTtlbHNle3ZhciBiPXBhcnNlRmxvYXQodGhpcy4kaGFuZGxlWzBdLnN0eWxlW2NdKTtnPXAtKGlzTmFOKGIpPyh0aGlzLm9wdGlvbnMuaW5pdGlhbFN0YXJ0LXRoaXMub3B0aW9ucy5zdGFydCkvKCh0aGlzLm9wdGlvbnMuZW5kLXRoaXMub3B0aW9ucy5zdGFydCkvMTAwKTpiKSt5fW1bXCJtaW4tXCIuY29uY2F0KHUpXT1cIlwiLmNvbmNhdChnLFwiJVwiKX10aGlzLiRlbGVtZW50Lm9uZShcImZpbmlzaGVkLnpmLmFuaW1hdGVcIixmdW5jdGlvbigpe3IuJGVsZW1lbnQudHJpZ2dlcihcIm1vdmVkLnpmLnNsaWRlclwiLFt0XSl9KTt2YXIgdz10aGlzLiRlbGVtZW50LmRhdGEoXCJkcmFnZ2luZ1wiKT8xZTMvNjA6dGhpcy5vcHRpb25zLm1vdmVUaW1lO09iamVjdChfLk1vdmUpKHcsdCxmdW5jdGlvbigpe2lzTmFOKHApP3QuY3NzKGMsXCJcIi5jb25jYXQoMTAwKmYsXCIlXCIpKTp0LmNzcyhjLFwiXCIuY29uY2F0KHAsXCIlXCIpKSxyLm9wdGlvbnMuZG91YmxlU2lkZWQ/ci4kZmlsbC5jc3MobSk6ci4kZmlsbC5jc3ModSxcIlwiLmNvbmNhdCgxMDAqZixcIiVcIikpfSksY2xlYXJUaW1lb3V0KHIudGltZW91dCksci50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtyLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2VkLnpmLnNsaWRlclwiLFt0XSl9LHIub3B0aW9ucy5jaGFuZ2VkRGVsYXkpfX19LHtrZXk6XCJfc2V0SW5pdEF0dHJcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT0wPT09dD90aGlzLm9wdGlvbnMuaW5pdGlhbFN0YXJ0OnRoaXMub3B0aW9ucy5pbml0aWFsRW5kLG49dGhpcy5pbnB1dHMuZXEodCkuYXR0cihcImlkXCIpfHxPYmplY3QoZy5HZXRZb0RpZ2l0cykoNixcInNsaWRlclwiKTt0aGlzLmlucHV0cy5lcSh0KS5hdHRyKHtpZDpuLG1heDp0aGlzLm9wdGlvbnMuZW5kLG1pbjp0aGlzLm9wdGlvbnMuc3RhcnQsc3RlcDp0aGlzLm9wdGlvbnMuc3RlcH0pLHRoaXMuaW5wdXRzLmVxKHQpLnZhbChlKSx0aGlzLmhhbmRsZXMuZXEodCkuYXR0cih7cm9sZTpcInNsaWRlclwiLFwiYXJpYS1jb250cm9sc1wiOm4sXCJhcmlhLXZhbHVlbWF4XCI6dGhpcy5vcHRpb25zLmVuZCxcImFyaWEtdmFsdWVtaW5cIjp0aGlzLm9wdGlvbnMuc3RhcnQsXCJhcmlhLXZhbHVlbm93XCI6ZSxcImFyaWEtb3JpZW50YXRpb25cIjp0aGlzLm9wdGlvbnMudmVydGljYWw/XCJ2ZXJ0aWNhbFwiOlwiaG9yaXpvbnRhbFwiLHRhYmluZGV4OjB9KX19LHtrZXk6XCJfc2V0VmFsdWVzXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLm9wdGlvbnMuZG91YmxlU2lkZWQ/dGhpcy5oYW5kbGVzLmluZGV4KHQpOjA7dGhpcy5pbnB1dHMuZXEobikudmFsKGUpLHQuYXR0cihcImFyaWEtdmFsdWVub3dcIixlKX19LHtrZXk6XCJfaGFuZGxlRXZlbnRcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dmFyIGksbztpZihuKWk9dGhpcy5fYWRqdXN0VmFsdWUobnVsbCxuKSxvPSEwO2Vsc2V7dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBzPXRoaXMub3B0aW9ucy52ZXJ0aWNhbCxhPXM/XCJoZWlnaHRcIjpcIndpZHRoXCIscj1zP1widG9wXCI6XCJsZWZ0XCIsbD1zP3QucGFnZVk6dC5wYWdlWCx1PSh0aGlzLiRoYW5kbGVbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbYV0sdGhpcy4kZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVthXSksYz1zP20oKSh3aW5kb3cpLnNjcm9sbFRvcCgpOm0oKSh3aW5kb3cpLnNjcm9sbExlZnQoKSxkPXRoaXMuJGVsZW1lbnQub2Zmc2V0KClbcl07dC5jbGllbnRZPT09dC5wYWdlWSYmKGwrPWMpO3ZhciBoLGY9bC1kLHA9JChoPWY8MD8wOnU8Zj91OmYsdSk7aWYoaT10aGlzLl92YWx1ZShwKSxPYmplY3QoZy5ydGwpKCkmJiF0aGlzLm9wdGlvbnMudmVydGljYWwmJihpPXRoaXMub3B0aW9ucy5lbmQtaSksaT10aGlzLl9hZGp1c3RWYWx1ZShudWxsLGkpLG89ITEsIWUpZT12KHRoaXMuJGhhbmRsZSxyLGgsYSk8PXYodGhpcy4kaGFuZGxlMixyLGgsYSk/dGhpcy4kaGFuZGxlOnRoaXMuJGhhbmRsZTJ9dGhpcy5fc2V0SGFuZGxlUG9zKGUsaSxvKX19LHtrZXk6XCJfYWRqdXN0VmFsdWVcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuLGksbyxzPXRoaXMub3B0aW9ucy5zdGVwLGE9cGFyc2VGbG9hdChzLzIpO3JldHVybiAwPT09KGk9MDw9KG49dD9wYXJzZUZsb2F0KHQuYXR0cihcImFyaWEtdmFsdWVub3dcIikpOmUpP24lczpzK24lcyk/bjpuPShvPW4taSkrYTw9bj9vK3M6b319LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9ldmVudHNGb3JIYW5kbGUodGhpcy4kaGFuZGxlKSx0aGlzLmhhbmRsZXNbMV0mJnRoaXMuX2V2ZW50c0ZvckhhbmRsZSh0aGlzLiRoYW5kbGUyKX19LHtrZXk6XCJfZXZlbnRzRm9ySGFuZGxlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIG4scz10aGlzLGk9ZnVuY3Rpb24odCl7dmFyIGU9cy5pbnB1dHMuaW5kZXgobSgpKHRoaXMpKTtzLl9oYW5kbGVFdmVudCh0LHMuaGFuZGxlcy5lcShlKSxtKCkodGhpcykudmFsKCkpfTtpZih0aGlzLmlucHV0cy5vZmYoXCJrZXl1cC56Zi5zbGlkZXJcIikub24oXCJrZXl1cC56Zi5zbGlkZXJcIixmdW5jdGlvbih0KXsxMz09dC5rZXlDb2RlJiZpLmNhbGwodGhpcyx0KX0pLHRoaXMuaW5wdXRzLm9mZihcImNoYW5nZS56Zi5zbGlkZXJcIikub24oXCJjaGFuZ2UuemYuc2xpZGVyXCIsaSksdGhpcy5vcHRpb25zLmNsaWNrU2VsZWN0JiZ0aGlzLiRlbGVtZW50Lm9mZihcImNsaWNrLnpmLnNsaWRlclwiKS5vbihcImNsaWNrLnpmLnNsaWRlclwiLGZ1bmN0aW9uKHQpe2lmKHMuJGVsZW1lbnQuZGF0YShcImRyYWdnaW5nXCIpKXJldHVybiExO20oKSh0LnRhcmdldCkuaXMoXCJbZGF0YS1zbGlkZXItaGFuZGxlXVwiKXx8KHMub3B0aW9ucy5kb3VibGVTaWRlZD9zLl9oYW5kbGVFdmVudCh0KTpzLl9oYW5kbGVFdmVudCh0LHMuJGhhbmRsZSkpfSksdGhpcy5vcHRpb25zLmRyYWdnYWJsZSl7dGhpcy5oYW5kbGVzLmFkZFRvdWNoKCk7dmFyIG89bSgpKFwiYm9keVwiKTtlLm9mZihcIm1vdXNlZG93bi56Zi5zbGlkZXJcIikub24oXCJtb3VzZWRvd24uemYuc2xpZGVyXCIsZnVuY3Rpb24odCl7ZS5hZGRDbGFzcyhcImlzLWRyYWdnaW5nXCIpLHMuJGZpbGwuYWRkQ2xhc3MoXCJpcy1kcmFnZ2luZ1wiKSxzLiRlbGVtZW50LmRhdGEoXCJkcmFnZ2luZ1wiLCEwKSxuPW0oKSh0LmN1cnJlbnRUYXJnZXQpLG8ub24oXCJtb3VzZW1vdmUuemYuc2xpZGVyXCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHMuX2hhbmRsZUV2ZW50KHQsbil9KS5vbihcIm1vdXNldXAuemYuc2xpZGVyXCIsZnVuY3Rpb24odCl7cy5faGFuZGxlRXZlbnQodCxuKSxlLnJlbW92ZUNsYXNzKFwiaXMtZHJhZ2dpbmdcIikscy4kZmlsbC5yZW1vdmVDbGFzcyhcImlzLWRyYWdnaW5nXCIpLHMuJGVsZW1lbnQuZGF0YShcImRyYWdnaW5nXCIsITEpLG8ub2ZmKFwibW91c2Vtb3ZlLnpmLnNsaWRlciBtb3VzZXVwLnpmLnNsaWRlclwiKX0pfSkub24oXCJzZWxlY3RzdGFydC56Zi5zbGlkZXIgdG91Y2htb3ZlLnpmLnNsaWRlclwiLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0pfWUub2ZmKFwia2V5ZG93bi56Zi5zbGlkZXJcIikub24oXCJrZXlkb3duLnpmLnNsaWRlclwiLGZ1bmN0aW9uKHQpe3ZhciBlLG49bSgpKHRoaXMpLGk9cy5vcHRpb25zLmRvdWJsZVNpZGVkP3MuaGFuZGxlcy5pbmRleChuKTowLG89cGFyc2VGbG9hdChzLmlucHV0cy5lcShpKS52YWwoKSk7YS5LZXlib2FyZC5oYW5kbGVLZXkodCxcIlNsaWRlclwiLHtkZWNyZWFzZTpmdW5jdGlvbigpe2U9by1zLm9wdGlvbnMuc3RlcH0saW5jcmVhc2U6ZnVuY3Rpb24oKXtlPW8rcy5vcHRpb25zLnN0ZXB9LGRlY3JlYXNlX2Zhc3Q6ZnVuY3Rpb24oKXtlPW8tMTAqcy5vcHRpb25zLnN0ZXB9LGluY3JlYXNlX2Zhc3Q6ZnVuY3Rpb24oKXtlPW8rMTAqcy5vcHRpb25zLnN0ZXB9LG1pbjpmdW5jdGlvbigpe2U9cy5vcHRpb25zLnN0YXJ0fSxtYXg6ZnVuY3Rpb24oKXtlPXMub3B0aW9ucy5lbmR9LGhhbmRsZWQ6ZnVuY3Rpb24oKXt0LnByZXZlbnREZWZhdWx0KCkscy5fc2V0SGFuZGxlUG9zKG4sZSwhMCl9fSl9KX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5oYW5kbGVzLm9mZihcIi56Zi5zbGlkZXJcIiksdGhpcy5pbnB1dHMub2ZmKFwiLnpmLnNsaWRlclwiKSx0aGlzLiRlbGVtZW50Lm9mZihcIi56Zi5zbGlkZXJcIiksY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dCl9fV0pJiZ1KGUucHJvdG90eXBlLGkpLG8mJnUoZSxvKSxufSgpO2Z1bmN0aW9uICQodCxlKXtyZXR1cm4gdC9lfWZ1bmN0aW9uIHYodCxlLG4saSl7cmV0dXJuIE1hdGguYWJzKHQucG9zaXRpb24oKVtlXSt0W2ldKCkvMi1uKX1mLmRlZmF1bHRzPXtzdGFydDowLGVuZDoxMDAsc3RlcDoxLGluaXRpYWxTdGFydDowLGluaXRpYWxFbmQ6MTAwLGJpbmRpbmc6ITEsY2xpY2tTZWxlY3Q6ITAsdmVydGljYWw6ITEsZHJhZ2dhYmxlOiEwLGRpc2FibGVkOiExLGRvdWJsZVNpZGVkOiExLGRlY2ltYWw6Mixtb3ZlVGltZToyMDAsZGlzYWJsZWRDbGFzczpcImRpc2FibGVkXCIsaW52ZXJ0VmVydGljYWw6ITEsY2hhbmdlZERlbGF5OjUwMCxub25MaW5lYXJCYXNlOjUscG9zaXRpb25WYWx1ZUZ1bmN0aW9uOlwibGluZWFyXCJ9fSxcIi4vanMvZm91bmRhdGlvbi5zbW9vdGhTY3JvbGwuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiU21vb3RoU2Nyb2xsXCIsZnVuY3Rpb24oKXtyZXR1cm4gaH0pO3ZhciBpPW4oXCJqcXVlcnlcIiksYT1uLm4oaSksbz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpO2Z1bmN0aW9uIHModCl7cmV0dXJuKHM9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGwodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIHUodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PXMoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gYyh0KXtyZXR1cm4oYz1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZCh0LGUpe3JldHVybihkPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgaD1mdW5jdGlvbih0KXtmdW5jdGlvbiBzKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxzKSx1KHRoaXMsYyhzKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLG4saTtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmQodCxlKX0ocyxyW1wiUGx1Z2luXCJdKSxlPXMsaT1be2tleTpcInNjcm9sbFRvTG9jXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnMuZGVmYXVsdHMsbj0yPGFyZ3VtZW50cy5sZW5ndGg/YXJndW1lbnRzWzJdOnZvaWQgMCxpPWEoKSh0KTtpZighaS5sZW5ndGgpcmV0dXJuITE7dmFyIG89TWF0aC5yb3VuZChpLm9mZnNldCgpLnRvcC1lLnRocmVzaG9sZC8yLWUub2Zmc2V0KTthKCkoXCJodG1sLCBib2R5XCIpLnN0b3AoITApLmFuaW1hdGUoe3Njcm9sbFRvcDpvfSxlLmFuaW1hdGlvbkR1cmF0aW9uLGUuYW5pbWF0aW9uRWFzaW5nLGZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT10eXBlb2YgbiYmbigpfSl9fV0sKG49W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9YS5hLmV4dGVuZCh7fSxzLmRlZmF1bHRzLHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiU21vb3RoU2Nyb2xsXCIsdGhpcy5faW5pdCgpfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRlbGVtZW50WzBdLmlkfHxPYmplY3Qoby5HZXRZb0RpZ2l0cykoNixcInNtb290aC1zY3JvbGxcIik7dGhpcy4kZWxlbWVudC5hdHRyKHtpZDp0fSksdGhpcy5fZXZlbnRzKCl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5vbihcImNsaWNrLnpmLnNtb290aFNjcm9sbFwiLHRoaXMuX2hhbmRsZUxpbmtDbGljayksdGhpcy4kZWxlbWVudC5vbihcImNsaWNrLnpmLnNtb290aFNjcm9sbFwiLCdhW2hyZWZePVwiI1wiXScsdGhpcy5faGFuZGxlTGlua0NsaWNrKX19LHtrZXk6XCJfaGFuZGxlTGlua0NsaWNrXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZihhKCkodC5jdXJyZW50VGFyZ2V0KS5pcygnYVtocmVmXj1cIiNcIl0nKSl7dmFyIG49dC5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZShcImhyZWZcIik7dGhpcy5faW5UcmFuc2l0aW9uPSEwLHMuc2Nyb2xsVG9Mb2Mobix0aGlzLm9wdGlvbnMsZnVuY3Rpb24oKXtlLl9pblRyYW5zaXRpb249ITF9KSx0LnByZXZlbnREZWZhdWx0KCl9fX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcImNsaWNrLnpmLnNtb290aFNjcm9sbFwiLHRoaXMuX2hhbmRsZUxpbmtDbGljayksdGhpcy4kZWxlbWVudC5vZmYoXCJjbGljay56Zi5zbW9vdGhTY3JvbGxcIiwnYVtocmVmXj1cIiNcIl0nLHRoaXMuX2hhbmRsZUxpbmtDbGljayl9fV0pJiZsKGUucHJvdG90eXBlLG4pLGkmJmwoZSxpKSxzfSgpO2guZGVmYXVsdHM9e2FuaW1hdGlvbkR1cmF0aW9uOjUwMCxhbmltYXRpb25FYXNpbmc6XCJsaW5lYXJcIix0aHJlc2hvbGQ6NTAsb2Zmc2V0OjB9fSxcIi4vanMvZm91bmRhdGlvbi5zdGlja3kuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiU3RpY2t5XCIsZnVuY3Rpb24oKXtyZXR1cm4gcH0pO3ZhciBpPW4oXCJqcXVlcnlcIikscj1uLm4oaSkscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubWVkaWFRdWVyeS5qc1wiKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS5wbHVnaW4uanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudHJpZ2dlcnMuanNcIik7ZnVuY3Rpb24gbyh0KXtyZXR1cm4obz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gYyh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gZCh0LGUpe3JldHVybiFlfHxcIm9iamVjdFwiIT09byhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDAhPT10KXJldHVybiB0O3Rocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKX0odCk6ZX1mdW5jdGlvbiBoKHQpe3JldHVybihoPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9KSh0KX1mdW5jdGlvbiBmKHQsZSl7cmV0dXJuKGY9T2JqZWN0LnNldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0LGUpe3JldHVybiB0Ll9fcHJvdG9fXz1lLHR9KSh0LGUpfXZhciBwPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLG4pLGQodGhpcyxoKG4pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9dmFyIGUsaSxvO3JldHVybiBmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksZSYmZih0LGUpfShuLGFbXCJQbHVnaW5cIl0pLGU9biwoaT1be2tleTpcIl9zZXR1cFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy4kZWxlbWVudD10LHRoaXMub3B0aW9ucz1yLmEuZXh0ZW5kKHt9LG4uZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksZSksdGhpcy5jbGFzc05hbWU9XCJTdGlja3lcIix1LlRyaWdnZXJzLmluaXQoci5hKSx0aGlzLl9pbml0KCl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe2wuTWVkaWFRdWVyeS5faW5pdCgpO3ZhciB0PXRoaXMuJGVsZW1lbnQucGFyZW50KFwiW2RhdGEtc3RpY2t5LWNvbnRhaW5lcl1cIiksZT10aGlzLiRlbGVtZW50WzBdLmlkfHxPYmplY3Qocy5HZXRZb0RpZ2l0cykoNixcInN0aWNreVwiKSxuPXRoaXM7dC5sZW5ndGg/dGhpcy4kY29udGFpbmVyPXQ6KHRoaXMud2FzV3JhcHBlZD0hMCx0aGlzLiRlbGVtZW50LndyYXAodGhpcy5vcHRpb25zLmNvbnRhaW5lciksdGhpcy4kY29udGFpbmVyPXRoaXMuJGVsZW1lbnQucGFyZW50KCkpLHRoaXMuJGNvbnRhaW5lci5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuY29udGFpbmVyQ2xhc3MpLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3ModGhpcy5vcHRpb25zLnN0aWNreUNsYXNzKS5hdHRyKHtcImRhdGEtcmVzaXplXCI6ZSxcImRhdGEtbXV0YXRlXCI6ZX0pLFwiXCIhPT10aGlzLm9wdGlvbnMuYW5jaG9yJiZyKCkoXCIjXCIrbi5vcHRpb25zLmFuY2hvcikuYXR0cih7XCJkYXRhLW11dGF0ZVwiOmV9KSx0aGlzLnNjcm9sbENvdW50PXRoaXMub3B0aW9ucy5jaGVja0V2ZXJ5LHRoaXMuaXNTdHVjaz0hMSx0aGlzLm9uTG9hZExpc3RlbmVyPU9iamVjdChzLm9uTG9hZCkocigpKHdpbmRvdyksZnVuY3Rpb24oKXtuLmNvbnRhaW5lckhlaWdodD1cIm5vbmVcIj09bi4kZWxlbWVudC5jc3MoXCJkaXNwbGF5XCIpPzA6bi4kZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQsbi4kY29udGFpbmVyLmNzcyhcImhlaWdodFwiLG4uY29udGFpbmVySGVpZ2h0KSxuLmVsZW1IZWlnaHQ9bi5jb250YWluZXJIZWlnaHQsXCJcIiE9PW4ub3B0aW9ucy5hbmNob3I/bi4kYW5jaG9yPXIoKShcIiNcIituLm9wdGlvbnMuYW5jaG9yKTpuLl9wYXJzZVBvaW50cygpLG4uX3NldFNpemVzKGZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LnBhZ2VZT2Zmc2V0O24uX2NhbGMoITEsdCksbi5pc1N0dWNrfHxuLl9yZW1vdmVTdGlja3koISh0Pj1uLnRvcFBvaW50KSl9KSxuLl9ldmVudHMoZS5zcGxpdChcIi1cIikucmV2ZXJzZSgpLmpvaW4oXCItXCIpKX0pfX0se2tleTpcIl9wYXJzZVBvaW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtcIlwiPT10aGlzLm9wdGlvbnMudG9wQW5jaG9yPzE6dGhpcy5vcHRpb25zLnRvcEFuY2hvcixcIlwiPT10aGlzLm9wdGlvbnMuYnRtQW5jaG9yP2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQ6dGhpcy5vcHRpb25zLmJ0bUFuY2hvcl0sZT17fSxuPTAsaT10Lmxlbmd0aDtuPGkmJnRbbl07bisrKXt2YXIgbztpZihcIm51bWJlclwiPT10eXBlb2YgdFtuXSlvPXRbbl07ZWxzZXt2YXIgcz10W25dLnNwbGl0KFwiOlwiKSxhPXIoKShcIiNcIi5jb25jYXQoc1swXSkpO289YS5vZmZzZXQoKS50b3Asc1sxXSYmXCJib3R0b21cIj09PXNbMV0udG9Mb3dlckNhc2UoKSYmKG8rPWFbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0KX1lW25dPW99dGhpcy5wb2ludHM9ZX19LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24obil7dmFyIGk9dGhpcyx0PXRoaXMuc2Nyb2xsTGlzdGVuZXI9XCJzY3JvbGwuemYuXCIuY29uY2F0KG4pO3RoaXMuaXNPbnx8KHRoaXMuY2FuU3RpY2smJih0aGlzLmlzT249ITAscigpKHdpbmRvdykub2ZmKHQpLm9uKHQsZnVuY3Rpb24odCl7MD09PWkuc2Nyb2xsQ291bnQ/KGkuc2Nyb2xsQ291bnQ9aS5vcHRpb25zLmNoZWNrRXZlcnksaS5fc2V0U2l6ZXMoZnVuY3Rpb24oKXtpLl9jYWxjKCExLHdpbmRvdy5wYWdlWU9mZnNldCl9KSk6KGkuc2Nyb2xsQ291bnQtLSxpLl9jYWxjKCExLHdpbmRvdy5wYWdlWU9mZnNldCkpfSkpLHRoaXMuJGVsZW1lbnQub2ZmKFwicmVzaXplbWUuemYudHJpZ2dlclwiKS5vbihcInJlc2l6ZW1lLnpmLnRyaWdnZXJcIixmdW5jdGlvbih0LGUpe2kuX2V2ZW50c0hhbmRsZXIobil9KSx0aGlzLiRlbGVtZW50Lm9uKFwibXV0YXRlbWUuemYudHJpZ2dlclwiLGZ1bmN0aW9uKHQsZSl7aS5fZXZlbnRzSGFuZGxlcihuKX0pLHRoaXMuJGFuY2hvciYmdGhpcy4kYW5jaG9yLm9uKFwibXV0YXRlbWUuemYudHJpZ2dlclwiLGZ1bmN0aW9uKHQsZSl7aS5fZXZlbnRzSGFuZGxlcihuKX0pKX19LHtrZXk6XCJfZXZlbnRzSGFuZGxlclwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLnNjcm9sbExpc3RlbmVyPVwic2Nyb2xsLnpmLlwiLmNvbmNhdCh0KTtlLl9zZXRTaXplcyhmdW5jdGlvbigpe2UuX2NhbGMoITEpLGUuY2FuU3RpY2s/ZS5pc09ufHxlLl9ldmVudHModCk6ZS5pc09uJiZlLl9wYXVzZUxpc3RlbmVycyhuKX0pfX0se2tleTpcIl9wYXVzZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuaXNPbj0hMSxyKCkod2luZG93KS5vZmYodCksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwicGF1c2UuemYuc3RpY2t5XCIpfX0se2tleTpcIl9jYWxjXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtpZih0JiZ0aGlzLl9zZXRTaXplcygpLCF0aGlzLmNhblN0aWNrKXJldHVybiB0aGlzLmlzU3R1Y2smJnRoaXMuX3JlbW92ZVN0aWNreSghMCksITE7ZXx8KGU9d2luZG93LnBhZ2VZT2Zmc2V0KSxlPj10aGlzLnRvcFBvaW50P2U8PXRoaXMuYm90dG9tUG9pbnQ/dGhpcy5pc1N0dWNrfHx0aGlzLl9zZXRTdGlja3koKTp0aGlzLmlzU3R1Y2smJnRoaXMuX3JlbW92ZVN0aWNreSghMSk6dGhpcy5pc1N0dWNrJiZ0aGlzLl9yZW1vdmVTdGlja3koITApfX0se2tleTpcIl9zZXRTdGlja3lcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLm9wdGlvbnMuc3RpY2tUbyxuPVwidG9wXCI9PT1lP1wibWFyZ2luVG9wXCI6XCJtYXJnaW5Cb3R0b21cIixpPVwidG9wXCI9PT1lP1wiYm90dG9tXCI6XCJ0b3BcIixvPXt9O29bbl09XCJcIi5jb25jYXQodGhpcy5vcHRpb25zW25dLFwiZW1cIiksb1tlXT0wLG9baV09XCJhdXRvXCIsdGhpcy5pc1N0dWNrPSEwLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJpcy1hbmNob3JlZCBpcy1hdC1cIi5jb25jYXQoaSkpLmFkZENsYXNzKFwiaXMtc3R1Y2sgaXMtYXQtXCIuY29uY2F0KGUpKS5jc3MobykudHJpZ2dlcihcInN0aWNreS56Zi5zdHVja3RvOlwiLmNvbmNhdChlKSksdGhpcy4kZWxlbWVudC5vbihcInRyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBvdHJhbnNpdGlvbmVuZCBNU1RyYW5zaXRpb25FbmRcIixmdW5jdGlvbigpe3QuX3NldFNpemVzKCl9KX19LHtrZXk6XCJfcmVtb3ZlU3RpY2t5XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb25zLnN0aWNrVG8sbj1cInRvcFwiPT09ZSxpPXt9LG89KHRoaXMucG9pbnRzP3RoaXMucG9pbnRzWzFdLXRoaXMucG9pbnRzWzBdOnRoaXMuYW5jaG9ySGVpZ2h0KS10aGlzLmVsZW1IZWlnaHQscz10P1widG9wXCI6XCJib3R0b21cIjtpW24/XCJtYXJnaW5Ub3BcIjpcIm1hcmdpbkJvdHRvbVwiXT0wLGkuYm90dG9tPVwiYXV0b1wiLGkudG9wPXQ/MDpvLHRoaXMuaXNTdHVjaz0hMSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwiaXMtc3R1Y2sgaXMtYXQtXCIuY29uY2F0KGUpKS5hZGRDbGFzcyhcImlzLWFuY2hvcmVkIGlzLWF0LVwiLmNvbmNhdChzKSkuY3NzKGkpLnRyaWdnZXIoXCJzdGlja3kuemYudW5zdHVja2Zyb206XCIuY29uY2F0KHMpKX19LHtrZXk6XCJfc2V0U2l6ZXNcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmNhblN0aWNrPWwuTWVkaWFRdWVyeS5pcyh0aGlzLm9wdGlvbnMuc3RpY2t5T24pLHRoaXMuY2FuU3RpY2t8fHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQoKTt2YXIgZT10aGlzLiRjb250YWluZXJbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgsbj13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLiRjb250YWluZXJbMF0pLGk9cGFyc2VJbnQobltcInBhZGRpbmctbGVmdFwiXSwxMCksbz1wYXJzZUludChuW1wicGFkZGluZy1yaWdodFwiXSwxMCk7dGhpcy4kYW5jaG9yJiZ0aGlzLiRhbmNob3IubGVuZ3RoP3RoaXMuYW5jaG9ySGVpZ2h0PXRoaXMuJGFuY2hvclswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ6dGhpcy5fcGFyc2VQb2ludHMoKSx0aGlzLiRlbGVtZW50LmNzcyh7XCJtYXgtd2lkdGhcIjpcIlwiLmNvbmNhdChlLWktbyxcInB4XCIpfSk7dmFyIHM9dGhpcy4kZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHR8fHRoaXMuY29udGFpbmVySGVpZ2h0O2lmKFwibm9uZVwiPT10aGlzLiRlbGVtZW50LmNzcyhcImRpc3BsYXlcIikmJihzPTApLHRoaXMuY29udGFpbmVySGVpZ2h0PXMsdGhpcy4kY29udGFpbmVyLmNzcyh7aGVpZ2h0OnN9KSx0aGlzLmVsZW1IZWlnaHQ9cywhdGhpcy5pc1N0dWNrJiZ0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwiaXMtYXQtYm90dG9tXCIpKXt2YXIgYT0odGhpcy5wb2ludHM/dGhpcy5wb2ludHNbMV0tdGhpcy4kY29udGFpbmVyLm9mZnNldCgpLnRvcDp0aGlzLmFuY2hvckhlaWdodCktdGhpcy5lbGVtSGVpZ2h0O3RoaXMuJGVsZW1lbnQuY3NzKFwidG9wXCIsYSl9dGhpcy5fc2V0QnJlYWtQb2ludHMocyxmdW5jdGlvbigpe3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQoKX0pfX0se2tleTpcIl9zZXRCcmVha1BvaW50c1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7aWYoIXRoaXMuY2FuU3RpY2spe2lmKCFlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybiExO2UoKX12YXIgbj1tKHRoaXMub3B0aW9ucy5tYXJnaW5Ub3ApLGk9bSh0aGlzLm9wdGlvbnMubWFyZ2luQm90dG9tKSxvPXRoaXMucG9pbnRzP3RoaXMucG9pbnRzWzBdOnRoaXMuJGFuY2hvci5vZmZzZXQoKS50b3Ascz10aGlzLnBvaW50cz90aGlzLnBvaW50c1sxXTpvK3RoaXMuYW5jaG9ySGVpZ2h0LGE9d2luZG93LmlubmVySGVpZ2h0O1widG9wXCI9PT10aGlzLm9wdGlvbnMuc3RpY2tUbz8oby09bixzLT10K24pOlwiYm90dG9tXCI9PT10aGlzLm9wdGlvbnMuc3RpY2tUbyYmKG8tPWEtKHQraSkscy09YS1pKSx0aGlzLnRvcFBvaW50PW8sdGhpcy5ib3R0b21Qb2ludD1zLGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUoKX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlU3RpY2t5KCEwKSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwiXCIuY29uY2F0KHRoaXMub3B0aW9ucy5zdGlja3lDbGFzcyxcIiBpcy1hbmNob3JlZCBpcy1hdC10b3BcIikpLmNzcyh7aGVpZ2h0OlwiXCIsdG9wOlwiXCIsYm90dG9tOlwiXCIsXCJtYXgtd2lkdGhcIjpcIlwifSkub2ZmKFwicmVzaXplbWUuemYudHJpZ2dlclwiKS5vZmYoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIpLHRoaXMuJGFuY2hvciYmdGhpcy4kYW5jaG9yLmxlbmd0aCYmdGhpcy4kYW5jaG9yLm9mZihcImNoYW5nZS56Zi5zdGlja3lcIiksdGhpcy5zY3JvbGxMaXN0ZW5lciYmcigpKHdpbmRvdykub2ZmKHRoaXMuc2Nyb2xsTGlzdGVuZXIpLHRoaXMub25Mb2FkTGlzdGVuZXImJnIoKSh3aW5kb3cpLm9mZih0aGlzLm9uTG9hZExpc3RlbmVyKSx0aGlzLndhc1dyYXBwZWQ/dGhpcy4kZWxlbWVudC51bndyYXAoKTp0aGlzLiRjb250YWluZXIucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmNvbnRhaW5lckNsYXNzKS5jc3Moe2hlaWdodDpcIlwifSl9fV0pJiZjKGUucHJvdG90eXBlLGkpLG8mJmMoZSxvKSxufSgpO2Z1bmN0aW9uIG0odCl7cmV0dXJuIHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHksbnVsbCkuZm9udFNpemUsMTApKnR9cC5kZWZhdWx0cz17Y29udGFpbmVyOlwiPGRpdiBkYXRhLXN0aWNreS1jb250YWluZXI+PC9kaXY+XCIsc3RpY2tUbzpcInRvcFwiLGFuY2hvcjpcIlwiLHRvcEFuY2hvcjpcIlwiLGJ0bUFuY2hvcjpcIlwiLG1hcmdpblRvcDoxLG1hcmdpbkJvdHRvbToxLHN0aWNreU9uOlwibWVkaXVtXCIsc3RpY2t5Q2xhc3M6XCJzdGlja3lcIixjb250YWluZXJDbGFzczpcInN0aWNreS1jb250YWluZXJcIixjaGVja0V2ZXJ5Oi0xfX0sXCIuL2pzL2ZvdW5kYXRpb24udGFicy5qc1wiOmZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksbi5kKGUsXCJUYWJzXCIsZnVuY3Rpb24oKXtyZXR1cm4gb30pO3ZhciBpPW4oXCJqcXVlcnlcIikscj1uLm4oaSksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIiksYT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwua2V5Ym9hcmQuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuaW1hZ2VMb2FkZXIuanNcIikscz1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpO2Z1bmN0aW9uIGModCl7cmV0dXJuKGM9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PWMoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gZih0KXtyZXR1cm4oZj1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gcCh0LGUpe3JldHVybihwPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgbz1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxoKHRoaXMsZihuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJnAodCxlKX0obixzW1wiUGx1Z2luXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9ci5hLmV4dGVuZCh7fSxuLmRlZmF1bHRzLHRoaXMuJGVsZW1lbnQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiVGFic1wiLHRoaXMuX2luaXQoKSxhLktleWJvYXJkLnJlZ2lzdGVyKFwiVGFic1wiLHtFTlRFUjpcIm9wZW5cIixTUEFDRTpcIm9wZW5cIixBUlJPV19SSUdIVDpcIm5leHRcIixBUlJPV19VUDpcInByZXZpb3VzXCIsQVJST1dfRE9XTjpcIm5leHRcIixBUlJPV19MRUZUOlwicHJldmlvdXNcIn0pfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgcz10aGlzLGE9dGhpcztpZih0aGlzLl9pc0luaXRpYWxpemluZz0hMCx0aGlzLiRlbGVtZW50LmF0dHIoe3JvbGU6XCJ0YWJsaXN0XCJ9KSx0aGlzLiR0YWJUaXRsZXM9dGhpcy4kZWxlbWVudC5maW5kKFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMubGlua0NsYXNzKSksdGhpcy4kdGFiQ29udGVudD1yKCkoJ1tkYXRhLXRhYnMtY29udGVudD1cIicuY29uY2F0KHRoaXMuJGVsZW1lbnRbMF0uaWQsJ1wiXScpKSx0aGlzLiR0YWJUaXRsZXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PXIoKSh0aGlzKSxlPXQuZmluZChcImFcIiksbj10Lmhhc0NsYXNzKFwiXCIuY29uY2F0KGEub3B0aW9ucy5saW5rQWN0aXZlQ2xhc3MpKSxpPWUuYXR0cihcImRhdGEtdGFicy10YXJnZXRcIil8fGVbMF0uaGFzaC5zbGljZSgxKSxvPWVbMF0uaWQ/ZVswXS5pZDpcIlwiLmNvbmNhdChpLFwiLWxhYmVsXCIpLHM9cigpKFwiI1wiLmNvbmNhdChpKSk7dC5hdHRyKHtyb2xlOlwicHJlc2VudGF0aW9uXCJ9KSxlLmF0dHIoe3JvbGU6XCJ0YWJcIixcImFyaWEtY29udHJvbHNcIjppLFwiYXJpYS1zZWxlY3RlZFwiOm4saWQ6byx0YWJpbmRleDpuP1wiMFwiOlwiLTFcIn0pLHMuYXR0cih7cm9sZTpcInRhYnBhbmVsXCIsXCJhcmlhLWxhYmVsbGVkYnlcIjpvfSksbiYmKGEuX2luaXRpYWxBbmNob3I9XCIjXCIuY29uY2F0KGkpKSxufHxzLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSxuJiZhLm9wdGlvbnMuYXV0b0ZvY3VzJiYoYS5vbkxvYWRMaXN0ZW5lcj1PYmplY3QobC5vbkxvYWQpKHIoKSh3aW5kb3cpLGZ1bmN0aW9uKCl7cigpKFwiaHRtbCwgYm9keVwiKS5hbmltYXRlKHtzY3JvbGxUb3A6dC5vZmZzZXQoKS50b3B9LGEub3B0aW9ucy5kZWVwTGlua1NtdWRnZURlbGF5LGZ1bmN0aW9uKCl7ZS5mb2N1cygpfSl9KSl9KSx0aGlzLm9wdGlvbnMubWF0Y2hIZWlnaHQpe3ZhciB0PXRoaXMuJHRhYkNvbnRlbnQuZmluZChcImltZ1wiKTt0Lmxlbmd0aD9PYmplY3QodS5vbkltYWdlc0xvYWRlZCkodCx0aGlzLl9zZXRIZWlnaHQuYmluZCh0aGlzKSk6dGhpcy5fc2V0SGVpZ2h0KCl9dGhpcy5fY2hlY2tEZWVwTGluaz1mdW5jdGlvbigpe3ZhciB0PXdpbmRvdy5sb2NhdGlvbi5oYXNoO2lmKCF0Lmxlbmd0aCl7aWYocy5faXNJbml0aWFsaXppbmcpcmV0dXJuO3MuX2luaXRpYWxBbmNob3ImJih0PXMuX2luaXRpYWxBbmNob3IpfXZhciBlPXQmJnIoKSh0KSxuPXQmJnMuJGVsZW1lbnQuZmluZCgnW2hyZWYkPVwiJyt0KydcIl0nKSxpPSEoIWUubGVuZ3RofHwhbi5sZW5ndGgpO2lmKGUmJmUubGVuZ3RoJiZuJiZuLmxlbmd0aD9zLnNlbGVjdFRhYihlLCEwKTpzLl9jb2xsYXBzZSgpLGkpe2lmKHMub3B0aW9ucy5kZWVwTGlua1NtdWRnZSl7dmFyIG89cy4kZWxlbWVudC5vZmZzZXQoKTtyKCkoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoe3Njcm9sbFRvcDpvLnRvcH0scy5vcHRpb25zLmRlZXBMaW5rU211ZGdlRGVsYXkpfXMuJGVsZW1lbnQudHJpZ2dlcihcImRlZXBsaW5rLnpmLnRhYnNcIixbbixlXSl9fSx0aGlzLm9wdGlvbnMuZGVlcExpbmsmJnRoaXMuX2NoZWNrRGVlcExpbmsoKSx0aGlzLl9ldmVudHMoKSx0aGlzLl9pc0luaXRpYWxpemluZz0hMX19LHtrZXk6XCJfZXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9hZGRLZXlIYW5kbGVyKCksdGhpcy5fYWRkQ2xpY2tIYW5kbGVyKCksdGhpcy5fc2V0SGVpZ2h0TXFIYW5kbGVyPW51bGwsdGhpcy5vcHRpb25zLm1hdGNoSGVpZ2h0JiYodGhpcy5fc2V0SGVpZ2h0TXFIYW5kbGVyPXRoaXMuX3NldEhlaWdodC5iaW5kKHRoaXMpLHIoKSh3aW5kb3cpLm9uKFwiY2hhbmdlZC56Zi5tZWRpYXF1ZXJ5XCIsdGhpcy5fc2V0SGVpZ2h0TXFIYW5kbGVyKSksdGhpcy5vcHRpb25zLmRlZXBMaW5rJiZyKCkod2luZG93KS5vbihcImhhc2hjaGFuZ2VcIix0aGlzLl9jaGVja0RlZXBMaW5rKX19LHtrZXk6XCJfYWRkQ2xpY2tIYW5kbGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuJGVsZW1lbnQub2ZmKFwiY2xpY2suemYudGFic1wiKS5vbihcImNsaWNrLnpmLnRhYnNcIixcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLmxpbmtDbGFzcyksZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCksZS5faGFuZGxlVGFiQ2hhbmdlKHIoKSh0aGlzKSl9KX19LHtrZXk6XCJfYWRkS2V5SGFuZGxlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHM9dGhpczt0aGlzLiR0YWJUaXRsZXMub2ZmKFwia2V5ZG93bi56Zi50YWJzXCIpLm9uKFwia2V5ZG93bi56Zi50YWJzXCIsZnVuY3Rpb24odCl7aWYoOSE9PXQud2hpY2gpe3ZhciBlLG4saT1yKCkodGhpcyksbz1pLnBhcmVudChcInVsXCIpLmNoaWxkcmVuKFwibGlcIik7by5lYWNoKGZ1bmN0aW9uKHQpe3IoKSh0aGlzKS5pcyhpKSYmKG49cy5vcHRpb25zLndyYXBPbktleXM/KGU9MD09PXQ/by5sYXN0KCk6by5lcSh0LTEpLHQ9PT1vLmxlbmd0aC0xP28uZmlyc3QoKTpvLmVxKHQrMSkpOihlPW8uZXEoTWF0aC5tYXgoMCx0LTEpKSxvLmVxKE1hdGgubWluKHQrMSxvLmxlbmd0aC0xKSkpKX0pLGEuS2V5Ym9hcmQuaGFuZGxlS2V5KHQsXCJUYWJzXCIse29wZW46ZnVuY3Rpb24oKXtpLmZpbmQoJ1tyb2xlPVwidGFiXCJdJykuZm9jdXMoKSxzLl9oYW5kbGVUYWJDaGFuZ2UoaSl9LHByZXZpb3VzOmZ1bmN0aW9uKCl7ZS5maW5kKCdbcm9sZT1cInRhYlwiXScpLmZvY3VzKCkscy5faGFuZGxlVGFiQ2hhbmdlKGUpfSxuZXh0OmZ1bmN0aW9uKCl7bi5maW5kKCdbcm9sZT1cInRhYlwiXScpLmZvY3VzKCkscy5faGFuZGxlVGFiQ2hhbmdlKG4pfSxoYW5kbGVkOmZ1bmN0aW9uKCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCl9fSl9fSl9fSx7a2V5OlwiX2hhbmRsZVRhYkNoYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7aWYodC5oYXNDbGFzcyhcIlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMubGlua0FjdGl2ZUNsYXNzKSkpdGhpcy5vcHRpb25zLmFjdGl2ZUNvbGxhcHNlJiZ0aGlzLl9jb2xsYXBzZSgpO2Vsc2V7dmFyIG49dGhpcy4kZWxlbWVudC5maW5kKFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMubGlua0NsYXNzLFwiLlwiKS5jb25jYXQodGhpcy5vcHRpb25zLmxpbmtBY3RpdmVDbGFzcykpLGk9dC5maW5kKCdbcm9sZT1cInRhYlwiXScpLG89aS5hdHRyKFwiZGF0YS10YWJzLXRhcmdldFwiKSxzPW8mJm8ubGVuZ3RoP1wiI1wiLmNvbmNhdChvKTppWzBdLmhhc2gsYT10aGlzLiR0YWJDb250ZW50LmZpbmQocyk7dGhpcy5fY29sbGFwc2VUYWIobiksdGhpcy5fb3BlblRhYih0KSx0aGlzLm9wdGlvbnMuZGVlcExpbmsmJiFlJiYodGhpcy5vcHRpb25zLnVwZGF0ZUhpc3Rvcnk/aGlzdG9yeS5wdXNoU3RhdGUoe30sXCJcIixzKTpoaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSxcIlwiLHMpKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2UuemYudGFic1wiLFt0LGFdKSxhLmZpbmQoXCJbZGF0YS1tdXRhdGVdXCIpLnRyaWdnZXIoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIpfX19LHtrZXk6XCJfb3BlblRhYlwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZmluZCgnW3JvbGU9XCJ0YWJcIl0nKSxuPWUuYXR0cihcImRhdGEtdGFicy10YXJnZXRcIil8fGVbMF0uaGFzaC5zbGljZSgxKSxpPXRoaXMuJHRhYkNvbnRlbnQuZmluZChcIiNcIi5jb25jYXQobikpO3QuYWRkQ2xhc3MoXCJcIi5jb25jYXQodGhpcy5vcHRpb25zLmxpbmtBY3RpdmVDbGFzcykpLGUuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCIwXCJ9KSxpLmFkZENsYXNzKFwiXCIuY29uY2F0KHRoaXMub3B0aW9ucy5wYW5lbEFjdGl2ZUNsYXNzKSkucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpfX0se2tleTpcIl9jb2xsYXBzZVRhYlwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQucmVtb3ZlQ2xhc3MoXCJcIi5jb25jYXQodGhpcy5vcHRpb25zLmxpbmtBY3RpdmVDbGFzcykpLmZpbmQoJ1tyb2xlPVwidGFiXCJdJykuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLHRhYmluZGV4Oi0xfSk7cigpKFwiI1wiLmNvbmNhdChlLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpKSkucmVtb3ZlQ2xhc3MoXCJcIi5jb25jYXQodGhpcy5vcHRpb25zLnBhbmVsQWN0aXZlQ2xhc3MpKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KX19LHtrZXk6XCJfY29sbGFwc2VcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnQuZmluZChcIi5cIi5jb25jYXQodGhpcy5vcHRpb25zLmxpbmtDbGFzcyxcIi5cIikuY29uY2F0KHRoaXMub3B0aW9ucy5saW5rQWN0aXZlQ2xhc3MpKTt0Lmxlbmd0aCYmKHRoaXMuX2NvbGxhcHNlVGFiKHQpLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcImNvbGxhcHNlLnpmLnRhYnNcIixbdF0pKX19LHtrZXk6XCJzZWxlY3RUYWJcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuOyhuPVwib2JqZWN0XCI9PT1jKHQpP3RbMF0uaWQ6dCkuaW5kZXhPZihcIiNcIik8MCYmKG49XCIjXCIuY29uY2F0KG4pKTt2YXIgaT10aGlzLiR0YWJUaXRsZXMuaGFzKCdbaHJlZiQ9XCInLmNvbmNhdChuLCdcIl0nKSk7dGhpcy5faGFuZGxlVGFiQ2hhbmdlKGksZSl9fSx7a2V5OlwiX3NldEhlaWdodFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGk9MCxvPXRoaXM7dGhpcy4kdGFiQ29udGVudC5maW5kKFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMucGFuZWxDbGFzcykpLmNzcyhcImhlaWdodFwiLFwiXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1yKCkodGhpcyksZT10Lmhhc0NsYXNzKFwiXCIuY29uY2F0KG8ub3B0aW9ucy5wYW5lbEFjdGl2ZUNsYXNzKSk7ZXx8dC5jc3Moe3Zpc2liaWxpdHk6XCJoaWRkZW5cIixkaXNwbGF5OlwiYmxvY2tcIn0pO3ZhciBuPXRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O2V8fHQuY3NzKHt2aXNpYmlsaXR5OlwiXCIsZGlzcGxheTpcIlwifSksaT1pPG4/bjppfSkuY3NzKFwiaGVpZ2h0XCIsXCJcIi5jb25jYXQoaSxcInB4XCIpKX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5maW5kKFwiLlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMubGlua0NsYXNzKSkub2ZmKFwiLnpmLnRhYnNcIikuaGlkZSgpLmVuZCgpLmZpbmQoXCIuXCIuY29uY2F0KHRoaXMub3B0aW9ucy5wYW5lbENsYXNzKSkuaGlkZSgpLHRoaXMub3B0aW9ucy5tYXRjaEhlaWdodCYmbnVsbCE9dGhpcy5fc2V0SGVpZ2h0TXFIYW5kbGVyJiZyKCkod2luZG93KS5vZmYoXCJjaGFuZ2VkLnpmLm1lZGlhcXVlcnlcIix0aGlzLl9zZXRIZWlnaHRNcUhhbmRsZXIpLHRoaXMub3B0aW9ucy5kZWVwTGluayYmcigpKHdpbmRvdykub2ZmKFwiaGFzaGNoYW5nZVwiLHRoaXMuX2NoZWNrRGVlcExpbmspLHRoaXMub25Mb2FkTGlzdGVuZXImJnIoKSh3aW5kb3cpLm9mZih0aGlzLm9uTG9hZExpc3RlbmVyKX19XSkmJmQoZS5wcm90b3R5cGUsaSksbyYmZChlLG8pLG59KCk7by5kZWZhdWx0cz17ZGVlcExpbms6ITEsZGVlcExpbmtTbXVkZ2U6ITEsZGVlcExpbmtTbXVkZ2VEZWxheTozMDAsdXBkYXRlSGlzdG9yeTohMSxhdXRvRm9jdXM6ITEsd3JhcE9uS2V5czohMCxtYXRjaEhlaWdodDohMSxhY3RpdmVDb2xsYXBzZTohMSxsaW5rQ2xhc3M6XCJ0YWJzLXRpdGxlXCIsbGlua0FjdGl2ZUNsYXNzOlwiaXMtYWN0aXZlXCIscGFuZWxDbGFzczpcInRhYnMtcGFuZWxcIixwYW5lbEFjdGl2ZUNsYXNzOlwiaXMtYWN0aXZlXCJ9fSxcIi4vanMvZm91bmRhdGlvbi50b2dnbGVyLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIlRvZ2dsZXJcIixmdW5jdGlvbigpe3JldHVybiBwfSk7dmFyIGk9bihcImpxdWVyeVwiKSxzPW4ubihpKSxhPW4oXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5tb3Rpb24uanNcIikscj1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUucGx1Z2luLmpzXCIpLGw9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLHU9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLnRyaWdnZXJzLmpzXCIpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIGModCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fWZ1bmN0aW9uIGQodCxlKXtyZXR1cm4hZXx8XCJvYmplY3RcIiE9PW8oZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGU/ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClyZXR1cm4gdDt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIil9KHQpOmV9ZnVuY3Rpb24gaCh0KXtyZXR1cm4oaD1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gZih0LGUpe3JldHVybihmPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSkodCxlKX12YXIgcD1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxuKSxkKHRoaXMsaChuKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXZhciBlLGksbztyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmYodCxlKX0obixyW1wiUGx1Z2luXCJdKSxlPW4sKGk9W3trZXk6XCJfc2V0dXBcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuJGVsZW1lbnQ9dCx0aGlzLm9wdGlvbnM9cy5hLmV4dGVuZCh7fSxuLmRlZmF1bHRzLHQuZGF0YSgpLGUpLHRoaXMuY2xhc3NOYW1lPVwiXCIsdGhpcy5jbGFzc05hbWU9XCJUb2dnbGVyXCIsdS5UcmlnZ2Vycy5pbml0KHMuYSksdGhpcy5faW5pdCgpLHRoaXMuX2V2ZW50cygpfX0se2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdDt0aGlzLm9wdGlvbnMuYW5pbWF0ZT8odD10aGlzLm9wdGlvbnMuYW5pbWF0ZS5zcGxpdChcIiBcIiksdGhpcy5hbmltYXRpb25Jbj10WzBdLHRoaXMuYW5pbWF0aW9uT3V0PXRbMV18fG51bGwpOih0PXRoaXMuJGVsZW1lbnQuZGF0YShcInRvZ2dsZXJcIiksdGhpcy5jbGFzc05hbWU9XCIuXCI9PT10WzBdP3Quc2xpY2UoMSk6dCk7dmFyIG89dGhpcy4kZWxlbWVudFswXS5pZCxlPXMoKSgnW2RhdGEtb3Blbn49XCInLmNvbmNhdChvLCdcIl0sIFtkYXRhLWNsb3Nlfj1cIicpLmNvbmNhdChvLCdcIl0sIFtkYXRhLXRvZ2dsZX49XCInKS5jb25jYXQobywnXCJdJykpO2UuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwhdGhpcy4kZWxlbWVudC5pcyhcIjpoaWRkZW5cIikpLGUuZWFjaChmdW5jdGlvbih0LGUpe3ZhciBuPXMoKShlKSxpPW4uYXR0cihcImFyaWEtY29udHJvbHNcIil8fFwiXCI7bmV3IFJlZ0V4cChcIlxcXFxiXCIuY29uY2F0KE9iamVjdChsLlJlZ0V4cEVzY2FwZSkobyksXCJcXFxcYlwiKSkudGVzdChpKXx8bi5hdHRyKFwiYXJpYS1jb250cm9sc1wiLGk/XCJcIi5jb25jYXQoaSxcIiBcIikuY29uY2F0KG8pOm8pfSl9fSx7a2V5OlwiX2V2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5vZmYoXCJ0b2dnbGUuemYudHJpZ2dlclwiKS5vbihcInRvZ2dsZS56Zi50cmlnZ2VyXCIsdGhpcy50b2dnbGUuYmluZCh0aGlzKSl9fSx7a2V5OlwidG9nZ2xlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzW3RoaXMub3B0aW9ucy5hbmltYXRlP1wiX3RvZ2dsZUFuaW1hdGVcIjpcIl90b2dnbGVDbGFzc1wiXSgpfX0se2tleTpcIl90b2dnbGVDbGFzc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC50b2dnbGVDbGFzcyh0aGlzLmNsYXNzTmFtZSk7dmFyIHQ9dGhpcy4kZWxlbWVudC5oYXNDbGFzcyh0aGlzLmNsYXNzTmFtZSk7dD90aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJvbi56Zi50b2dnbGVyXCIpOnRoaXMuJGVsZW1lbnQudHJpZ2dlcihcIm9mZi56Zi50b2dnbGVyXCIpLHRoaXMuX3VwZGF0ZUFSSUEodCksdGhpcy4kZWxlbWVudC5maW5kKFwiW2RhdGEtbXV0YXRlXVwiKS50cmlnZ2VyKFwibXV0YXRlbWUuemYudHJpZ2dlclwiKX19LHtrZXk6XCJfdG9nZ2xlQW5pbWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLiRlbGVtZW50LmlzKFwiOmhpZGRlblwiKT9hLk1vdGlvbi5hbmltYXRlSW4odGhpcy4kZWxlbWVudCx0aGlzLmFuaW1hdGlvbkluLGZ1bmN0aW9uKCl7dC5fdXBkYXRlQVJJQSghMCksdGhpcy50cmlnZ2VyKFwib24uemYudG9nZ2xlclwiKSx0aGlzLmZpbmQoXCJbZGF0YS1tdXRhdGVdXCIpLnRyaWdnZXIoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIpfSk6YS5Nb3Rpb24uYW5pbWF0ZU91dCh0aGlzLiRlbGVtZW50LHRoaXMuYW5pbWF0aW9uT3V0LGZ1bmN0aW9uKCl7dC5fdXBkYXRlQVJJQSghMSksdGhpcy50cmlnZ2VyKFwib2ZmLnpmLnRvZ2dsZXJcIiksdGhpcy5maW5kKFwiW2RhdGEtbXV0YXRlXVwiKS50cmlnZ2VyKFwibXV0YXRlbWUuemYudHJpZ2dlclwiKX0pfX0se2tleTpcIl91cGRhdGVBUklBXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy4kZWxlbWVudFswXS5pZDtzKCkoJ1tkYXRhLW9wZW49XCInLmNvbmNhdChlLCdcIl0sIFtkYXRhLWNsb3NlPVwiJykuY29uY2F0KGUsJ1wiXSwgW2RhdGEtdG9nZ2xlPVwiJykuY29uY2F0KGUsJ1wiXScpKS5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjohIXR9KX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5vZmYoXCIuemYudG9nZ2xlclwiKX19XSkmJmMoZS5wcm90b3R5cGUsaSksbyYmYyhlLG8pLG59KCk7cC5kZWZhdWx0cz17YW5pbWF0ZTohMX19LFwiLi9qcy9mb3VuZGF0aW9uLnRvb2x0aXAuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiVG9vbHRpcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIG19KTt2YXIgaT1uKFwianF1ZXJ5XCIpLHM9bi5uKGkpLGE9bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLHI9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1lZGlhUXVlcnkuanNcIiksbD1uKFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudHJpZ2dlcnMuanNcIiksdT1uKFwiLi9qcy9mb3VuZGF0aW9uLnBvc2l0aW9uYWJsZS5qc1wiKTtmdW5jdGlvbiBvKHQpe3JldHVybihvPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX1mdW5jdGlvbiBjKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07aS5lbnVtZXJhYmxlPWkuZW51bWVyYWJsZXx8ITEsaS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gaSYmKGkud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGkua2V5LGkpfX1mdW5jdGlvbiBkKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1vKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP2Z1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PXQpcmV0dXJuIHQ7dGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpfSh0KTplfWZ1bmN0aW9uIGgodCxlLG4pe3JldHVybihoPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmdldD9SZWZsZWN0LmdldDpmdW5jdGlvbih0LGUsbil7dmFyIGk9ZnVuY3Rpb24odCxlKXtmb3IoOyFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSYmbnVsbCE9PSh0PWYodCkpOyk7cmV0dXJuIHR9KHQsZSk7aWYoaSl7dmFyIG89T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLGUpO3JldHVybiBvLmdldD9vLmdldC5jYWxsKG4pOm8udmFsdWV9fSkodCxlLG58fHQpfWZ1bmN0aW9uIGYodCl7cmV0dXJuKGY9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KX0pKHQpfWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4ocD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9dmFyIG09ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbigpe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsbiksZCh0aGlzLGYobikuYXBwbHkodGhpcyxhcmd1bWVudHMpKX12YXIgZSxpLG87cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxlJiZwKHQsZSl9KG4sdVtcIlBvc2l0aW9uYWJsZVwiXSksZT1uLChpPVt7a2V5OlwiX3NldHVwXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLiRlbGVtZW50PXQsdGhpcy5vcHRpb25zPXMuYS5leHRlbmQoe30sbi5kZWZhdWx0cyx0aGlzLiRlbGVtZW50LmRhdGEoKSxlKSx0aGlzLmNsYXNzTmFtZT1cIlRvb2x0aXBcIix0aGlzLmlzQWN0aXZlPSExLHRoaXMuaXNDbGljaz0hMSxsLlRyaWdnZXJzLmluaXQocy5hKSx0aGlzLl9pbml0KCl9fSx7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe3IuTWVkaWFRdWVyeS5faW5pdCgpO3ZhciB0PXRoaXMuJGVsZW1lbnQuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIil8fE9iamVjdChhLkdldFlvRGlnaXRzKSg2LFwidG9vbHRpcFwiKTt0aGlzLm9wdGlvbnMudGlwVGV4dD10aGlzLm9wdGlvbnMudGlwVGV4dHx8dGhpcy4kZWxlbWVudC5hdHRyKFwidGl0bGVcIiksdGhpcy50ZW1wbGF0ZT10aGlzLm9wdGlvbnMudGVtcGxhdGU/cygpKHRoaXMub3B0aW9ucy50ZW1wbGF0ZSk6dGhpcy5fYnVpbGRUZW1wbGF0ZSh0KSx0aGlzLm9wdGlvbnMuYWxsb3dIdG1sP3RoaXMudGVtcGxhdGUuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSkuaHRtbCh0aGlzLm9wdGlvbnMudGlwVGV4dCkuaGlkZSgpOnRoaXMudGVtcGxhdGUuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSkudGV4dCh0aGlzLm9wdGlvbnMudGlwVGV4dCkuaGlkZSgpLHRoaXMuJGVsZW1lbnQuYXR0cih7dGl0bGU6XCJcIixcImFyaWEtZGVzY3JpYmVkYnlcIjp0LFwiZGF0YS15ZXRpLWJveFwiOnQsXCJkYXRhLXRvZ2dsZVwiOnQsXCJkYXRhLXJlc2l6ZVwiOnR9KS5hZGRDbGFzcyh0aGlzLm9wdGlvbnMudHJpZ2dlckNsYXNzKSxoKGYobi5wcm90b3R5cGUpLFwiX2luaXRcIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX2V2ZW50cygpfX0se2tleTpcIl9nZXREZWZhdWx0UG9zaXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGVsZW1lbnRbMF0uY2xhc3NOYW1lLm1hdGNoKC9cXGIodG9wfGxlZnR8cmlnaHR8Ym90dG9tKVxcYi9nKTtyZXR1cm4gdD90WzBdOlwidG9wXCJ9fSx7a2V5OlwiX2dldERlZmF1bHRBbGlnbm1lbnRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVyblwiY2VudGVyXCJ9fSx7a2V5OlwiX2dldEhPZmZzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVyblwibGVmdFwiPT09dGhpcy5wb3NpdGlvbnx8XCJyaWdodFwiPT09dGhpcy5wb3NpdGlvbj90aGlzLm9wdGlvbnMuaE9mZnNldCt0aGlzLm9wdGlvbnMudG9vbHRpcFdpZHRoOnRoaXMub3B0aW9ucy5oT2Zmc2V0fX0se2tleTpcIl9nZXRWT2Zmc2V0XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cInRvcFwiPT09dGhpcy5wb3NpdGlvbnx8XCJib3R0b21cIj09PXRoaXMucG9zaXRpb24/dGhpcy5vcHRpb25zLnZPZmZzZXQrdGhpcy5vcHRpb25zLnRvb2x0aXBIZWlnaHQ6dGhpcy5vcHRpb25zLnZPZmZzZXR9fSx7a2V5OlwiX2J1aWxkVGVtcGxhdGVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT1cIlwiLmNvbmNhdCh0aGlzLm9wdGlvbnMudG9vbHRpcENsYXNzLFwiIFwiKS5jb25jYXQodGhpcy5vcHRpb25zLnRlbXBsYXRlQ2xhc3NlcykudHJpbSgpO3JldHVybiBzKCkoXCI8ZGl2PjwvZGl2PlwiKS5hZGRDbGFzcyhlKS5hdHRyKHtyb2xlOlwidG9vbHRpcFwiLFwiYXJpYS1oaWRkZW5cIjohMCxcImRhdGEtaXMtYWN0aXZlXCI6ITEsXCJkYXRhLWlzLWZvY3VzXCI6ITEsaWQ6dH0pfX0se2tleTpcIl9zZXRQb3NpdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7aChmKG4ucHJvdG90eXBlKSxcIl9zZXRQb3NpdGlvblwiLHRoaXMpLmNhbGwodGhpcyx0aGlzLiRlbGVtZW50LHRoaXMudGVtcGxhdGUpfX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe2lmKFwiYWxsXCIhPT10aGlzLm9wdGlvbnMuc2hvd09uJiYhci5NZWRpYVF1ZXJ5LmlzKHRoaXMub3B0aW9ucy5zaG93T24pKXJldHVybiExO3RoaXMudGVtcGxhdGUuY3NzKFwidmlzaWJpbGl0eVwiLFwiaGlkZGVuXCIpLnNob3coKSx0aGlzLl9zZXRQb3NpdGlvbigpLHRoaXMudGVtcGxhdGUucmVtb3ZlQ2xhc3MoXCJ0b3AgYm90dG9tIGxlZnQgcmlnaHRcIikuYWRkQ2xhc3ModGhpcy5wb3NpdGlvbiksdGhpcy50ZW1wbGF0ZS5yZW1vdmVDbGFzcyhcImFsaWduLXRvcCBhbGlnbi1ib3R0b20gYWxpZ24tbGVmdCBhbGlnbi1yaWdodCBhbGlnbi1jZW50ZXJcIikuYWRkQ2xhc3MoXCJhbGlnbi1cIit0aGlzLmFsaWdubWVudCksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiY2xvc2VtZS56Zi50b29sdGlwXCIsdGhpcy50ZW1wbGF0ZS5hdHRyKFwiaWRcIikpLHRoaXMudGVtcGxhdGUuYXR0cih7XCJkYXRhLWlzLWFjdGl2ZVwiOiEwLFwiYXJpYS1oaWRkZW5cIjohMX0pLHRoaXMuaXNBY3RpdmU9ITAsdGhpcy50ZW1wbGF0ZS5zdG9wKCkuaGlkZSgpLmNzcyhcInZpc2liaWxpdHlcIixcIlwiKS5mYWRlSW4odGhpcy5vcHRpb25zLmZhZGVJbkR1cmF0aW9uLGZ1bmN0aW9uKCl7fSksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwic2hvdy56Zi50b29sdGlwXCIpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy50ZW1wbGF0ZS5zdG9wKCkuYXR0cih7XCJhcmlhLWhpZGRlblwiOiEwLFwiZGF0YS1pcy1hY3RpdmVcIjohMX0pLmZhZGVPdXQodGhpcy5vcHRpb25zLmZhZGVPdXREdXJhdGlvbixmdW5jdGlvbigpe3QuaXNBY3RpdmU9ITEsdC5pc0NsaWNrPSExfSksdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiaGlkZS56Zi50b29sdGlwXCIpfX0se2tleTpcIl9ldmVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsbj0odGhpcy50ZW1wbGF0ZSwhMSk7dGhpcy5vcHRpb25zLmRpc2FibGVIb3Zlcnx8dGhpcy4kZWxlbWVudC5vbihcIm1vdXNlZW50ZXIuemYudG9vbHRpcFwiLGZ1bmN0aW9uKHQpe2UuaXNBY3RpdmV8fChlLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2Uuc2hvdygpfSxlLm9wdGlvbnMuaG92ZXJEZWxheSkpfSkub24oXCJtb3VzZWxlYXZlLnpmLnRvb2x0aXBcIixPYmplY3QoYS5pZ25vcmVNb3VzZWRpc2FwcGVhcikoZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KGUudGltZW91dCksKCFufHxlLmlzQ2xpY2smJiFlLm9wdGlvbnMuY2xpY2tPcGVuKSYmZS5oaWRlKCl9KSksdGhpcy5vcHRpb25zLmNsaWNrT3Blbj90aGlzLiRlbGVtZW50Lm9uKFwibW91c2Vkb3duLnpmLnRvb2x0aXBcIixmdW5jdGlvbih0KXt0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGUuaXNDbGlja3x8KGUuaXNDbGljaz0hMCwhZS5vcHRpb25zLmRpc2FibGVIb3ZlciYmZS4kZWxlbWVudC5hdHRyKFwidGFiaW5kZXhcIil8fGUuaXNBY3RpdmV8fGUuc2hvdygpKX0pOnRoaXMuJGVsZW1lbnQub24oXCJtb3VzZWRvd24uemYudG9vbHRpcFwiLGZ1bmN0aW9uKHQpe3Quc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksZS5pc0NsaWNrPSEwfSksdGhpcy5vcHRpb25zLmRpc2FibGVGb3JUb3VjaHx8dGhpcy4kZWxlbWVudC5vbihcInRhcC56Zi50b29sdGlwIHRvdWNoZW5kLnpmLnRvb2x0aXBcIixmdW5jdGlvbih0KXtlLmlzQWN0aXZlP2UuaGlkZSgpOmUuc2hvdygpfSksdGhpcy4kZWxlbWVudC5vbih7XCJjbG9zZS56Zi50cmlnZ2VyXCI6dGhpcy5oaWRlLmJpbmQodGhpcyl9KSx0aGlzLiRlbGVtZW50Lm9uKFwiZm9jdXMuemYudG9vbHRpcFwiLGZ1bmN0aW9uKHQpe2lmKG49ITAsZS5pc0NsaWNrKXJldHVybiBlLm9wdGlvbnMuY2xpY2tPcGVufHwobj0hMSksITE7ZS5zaG93KCl9KS5vbihcImZvY3Vzb3V0LnpmLnRvb2x0aXBcIixmdW5jdGlvbih0KXtuPSExLGUuaXNDbGljaz0hMSxlLmhpZGUoKX0pLm9uKFwicmVzaXplbWUuemYudHJpZ2dlclwiLGZ1bmN0aW9uKCl7ZS5pc0FjdGl2ZSYmZS5fc2V0UG9zaXRpb24oKX0pfX0se2tleTpcInRvZ2dsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pc0FjdGl2ZT90aGlzLmhpZGUoKTp0aGlzLnNob3coKX19LHtrZXk6XCJfZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5hdHRyKFwidGl0bGVcIix0aGlzLnRlbXBsYXRlLnRleHQoKSkub2ZmKFwiLnpmLnRyaWdnZXIgLnpmLnRvb2x0aXBcIikucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnRyaWdnZXJDbGFzcykucmVtb3ZlQ2xhc3MoXCJ0b3AgcmlnaHQgbGVmdCBib3R0b21cIikucmVtb3ZlQXR0cihcImFyaWEtZGVzY3JpYmVkYnkgZGF0YS1kaXNhYmxlLWhvdmVyIGRhdGEtcmVzaXplIGRhdGEtdG9nZ2xlIGRhdGEtdG9vbHRpcCBkYXRhLXlldGktYm94XCIpLHRoaXMudGVtcGxhdGUucmVtb3ZlKCl9fV0pJiZjKGUucHJvdG90eXBlLGkpLG8mJmMoZSxvKSxufSgpO20uZGVmYXVsdHM9e2Rpc2FibGVGb3JUb3VjaDohMSxob3ZlckRlbGF5OjIwMCxmYWRlSW5EdXJhdGlvbjoxNTAsZmFkZU91dER1cmF0aW9uOjE1MCxkaXNhYmxlSG92ZXI6ITEsdGVtcGxhdGVDbGFzc2VzOlwiXCIsdG9vbHRpcENsYXNzOlwidG9vbHRpcFwiLHRyaWdnZXJDbGFzczpcImhhcy10aXBcIixzaG93T246XCJzbWFsbFwiLHRlbXBsYXRlOlwiXCIsdGlwVGV4dDpcIlwiLHRvdWNoQ2xvc2VUZXh0OlwiVGFwIHRvIGNsb3NlLlwiLGNsaWNrT3BlbjohMCxwb3NpdGlvbjpcImF1dG9cIixhbGlnbm1lbnQ6XCJhdXRvXCIsYWxsb3dPdmVybGFwOiExLGFsbG93Qm90dG9tT3ZlcmxhcDohMSx2T2Zmc2V0OjAsaE9mZnNldDowLHRvb2x0aXBIZWlnaHQ6MTQsdG9vbHRpcFdpZHRoOjEyLGFsbG93SHRtbDohMX19LFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwuYm94LmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIkJveFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGl9KTt2YXIgYT1uKFwiLi9qcy9mb3VuZGF0aW9uLmNvcmUudXRpbHMuanNcIiksaT17SW1Ob3RUb3VjaGluZ1lvdTpmdW5jdGlvbih0LGUsbixpLG8pe3JldHVybiAwPT09cyh0LGUsbixpLG8pfSxPdmVybGFwQXJlYTpzLEdldERpbWVuc2lvbnM6ZCxHZXRPZmZzZXRzOmZ1bmN0aW9uKHQsZSxuLGksbyxzKXtzd2l0Y2goY29uc29sZS5sb2coXCJOT1RFOiBHZXRPZmZzZXRzIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgR2V0RXhwbGljaXRPZmZzZXRzIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gNi41XCIpLG4pe2Nhc2VcInRvcFwiOnJldHVybiBPYmplY3QoYS5ydGwpKCk/cih0LGUsXCJ0b3BcIixcImxlZnRcIixpLG8scyk6cih0LGUsXCJ0b3BcIixcInJpZ2h0XCIsaSxvLHMpO2Nhc2VcImJvdHRvbVwiOnJldHVybiBPYmplY3QoYS5ydGwpKCk/cih0LGUsXCJib3R0b21cIixcImxlZnRcIixpLG8scyk6cih0LGUsXCJib3R0b21cIixcInJpZ2h0XCIsaSxvLHMpO2Nhc2VcImNlbnRlciB0b3BcIjpyZXR1cm4gcih0LGUsXCJ0b3BcIixcImNlbnRlclwiLGksbyxzKTtjYXNlXCJjZW50ZXIgYm90dG9tXCI6cmV0dXJuIHIodCxlLFwiYm90dG9tXCIsXCJjZW50ZXJcIixpLG8scyk7Y2FzZVwiY2VudGVyIGxlZnRcIjpyZXR1cm4gcih0LGUsXCJsZWZ0XCIsXCJjZW50ZXJcIixpLG8scyk7Y2FzZVwiY2VudGVyIHJpZ2h0XCI6cmV0dXJuIHIodCxlLFwicmlnaHRcIixcImNlbnRlclwiLGksbyxzKTtjYXNlXCJsZWZ0IGJvdHRvbVwiOnJldHVybiByKHQsZSxcImJvdHRvbVwiLFwibGVmdFwiLGksbyxzKTtjYXNlXCJyaWdodCBib3R0b21cIjpyZXR1cm4gcih0LGUsXCJib3R0b21cIixcInJpZ2h0XCIsaSxvLHMpO2Nhc2VcImNlbnRlclwiOnJldHVybntsZWZ0OiRlbGVEaW1zLndpbmRvd0RpbXMub2Zmc2V0LmxlZnQrJGVsZURpbXMud2luZG93RGltcy53aWR0aC8yLSRlbGVEaW1zLndpZHRoLzIrbyx0b3A6JGVsZURpbXMud2luZG93RGltcy5vZmZzZXQudG9wKyRlbGVEaW1zLndpbmRvd0RpbXMuaGVpZ2h0LzItKCRlbGVEaW1zLmhlaWdodC8yK2kpfTtjYXNlXCJyZXZlYWxcIjpyZXR1cm57bGVmdDooJGVsZURpbXMud2luZG93RGltcy53aWR0aC0kZWxlRGltcy53aWR0aCkvMitvLHRvcDokZWxlRGltcy53aW5kb3dEaW1zLm9mZnNldC50b3AraX07Y2FzZVwicmV2ZWFsIGZ1bGxcIjpyZXR1cm57bGVmdDokZWxlRGltcy53aW5kb3dEaW1zLm9mZnNldC5sZWZ0LHRvcDokZWxlRGltcy53aW5kb3dEaW1zLm9mZnNldC50b3B9O2RlZmF1bHQ6cmV0dXJue2xlZnQ6T2JqZWN0KGEucnRsKSgpPyRhbmNob3JEaW1zLm9mZnNldC5sZWZ0LSRlbGVEaW1zLndpZHRoKyRhbmNob3JEaW1zLndpZHRoLW86JGFuY2hvckRpbXMub2Zmc2V0LmxlZnQrbyx0b3A6JGFuY2hvckRpbXMub2Zmc2V0LnRvcCskYW5jaG9yRGltcy5oZWlnaHQraX19fSxHZXRFeHBsaWNpdE9mZnNldHM6cn07ZnVuY3Rpb24gcyh0LGUsbixpLG8pe3ZhciBzLGEscixsLHU9ZCh0KTtpZihlKXt2YXIgYz1kKGUpO2E9Yy5oZWlnaHQrYy5vZmZzZXQudG9wLSh1Lm9mZnNldC50b3ArdS5oZWlnaHQpLHM9dS5vZmZzZXQudG9wLWMub2Zmc2V0LnRvcCxyPXUub2Zmc2V0LmxlZnQtYy5vZmZzZXQubGVmdCxsPWMud2lkdGgrYy5vZmZzZXQubGVmdC0odS5vZmZzZXQubGVmdCt1LndpZHRoKX1lbHNlIGE9dS53aW5kb3dEaW1zLmhlaWdodCt1LndpbmRvd0RpbXMub2Zmc2V0LnRvcC0odS5vZmZzZXQudG9wK3UuaGVpZ2h0KSxzPXUub2Zmc2V0LnRvcC11LndpbmRvd0RpbXMub2Zmc2V0LnRvcCxyPXUub2Zmc2V0LmxlZnQtdS53aW5kb3dEaW1zLm9mZnNldC5sZWZ0LGw9dS53aW5kb3dEaW1zLndpZHRoLSh1Lm9mZnNldC5sZWZ0K3Uud2lkdGgpO3JldHVybiBhPW8/MDpNYXRoLm1pbihhLDApLHM9TWF0aC5taW4ocywwKSxyPU1hdGgubWluKHIsMCksbD1NYXRoLm1pbihsLDApLG4/citsOmk/cythOk1hdGguc3FydChzKnMrYSphK3IqcitsKmwpfWZ1bmN0aW9uIGQodCl7aWYoKHQ9dC5sZW5ndGg/dFswXTp0KT09PXdpbmRvd3x8dD09PWRvY3VtZW50KXRocm93IG5ldyBFcnJvcihcIkknbSBzb3JyeSwgRGF2ZS4gSSdtIGFmcmFpZCBJIGNhbid0IGRvIHRoYXQuXCIpO3ZhciBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbj10LnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaT1kb2N1bWVudC5ib2R5LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG89d2luZG93LnBhZ2VZT2Zmc2V0LHM9d2luZG93LnBhZ2VYT2Zmc2V0O3JldHVybnt3aWR0aDplLndpZHRoLGhlaWdodDplLmhlaWdodCxvZmZzZXQ6e3RvcDplLnRvcCtvLGxlZnQ6ZS5sZWZ0K3N9LHBhcmVudERpbXM6e3dpZHRoOm4ud2lkdGgsaGVpZ2h0Om4uaGVpZ2h0LG9mZnNldDp7dG9wOm4udG9wK28sbGVmdDpuLmxlZnQrc319LHdpbmRvd0RpbXM6e3dpZHRoOmkud2lkdGgsaGVpZ2h0OmkuaGVpZ2h0LG9mZnNldDp7dG9wOm8sbGVmdDpzfX19fWZ1bmN0aW9uIHIodCxlLG4saSxvLHMsYSl7dmFyIHIsbCx1PWQodCksYz1lP2QoZSk6bnVsbDtzd2l0Y2gobil7Y2FzZVwidG9wXCI6cj1jLm9mZnNldC50b3AtKHUuaGVpZ2h0K28pO2JyZWFrO2Nhc2VcImJvdHRvbVwiOnI9Yy5vZmZzZXQudG9wK2MuaGVpZ2h0K287YnJlYWs7Y2FzZVwibGVmdFwiOmw9Yy5vZmZzZXQubGVmdC0odS53aWR0aCtzKTticmVhaztjYXNlXCJyaWdodFwiOmw9Yy5vZmZzZXQubGVmdCtjLndpZHRoK3N9c3dpdGNoKG4pe2Nhc2VcInRvcFwiOmNhc2VcImJvdHRvbVwiOnN3aXRjaChpKXtjYXNlXCJsZWZ0XCI6bD1jLm9mZnNldC5sZWZ0K3M7YnJlYWs7Y2FzZVwicmlnaHRcIjpsPWMub2Zmc2V0LmxlZnQtdS53aWR0aCtjLndpZHRoLXM7YnJlYWs7Y2FzZVwiY2VudGVyXCI6bD1hP3M6Yy5vZmZzZXQubGVmdCtjLndpZHRoLzItdS53aWR0aC8yK3N9YnJlYWs7Y2FzZVwicmlnaHRcIjpjYXNlXCJsZWZ0XCI6c3dpdGNoKGkpe2Nhc2VcImJvdHRvbVwiOnI9Yy5vZmZzZXQudG9wLW8rYy5oZWlnaHQtdS5oZWlnaHQ7YnJlYWs7Y2FzZVwidG9wXCI6cj1jLm9mZnNldC50b3ArbzticmVhaztjYXNlXCJjZW50ZXJcIjpyPWMub2Zmc2V0LnRvcCtvK2MuaGVpZ2h0LzItdS5oZWlnaHQvMn19cmV0dXJue3RvcDpyLGxlZnQ6bH19fSxcIi4vanMvZm91bmRhdGlvbi51dGlsLmltYWdlTG9hZGVyLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIm9uSW1hZ2VzTG9hZGVkXCIsZnVuY3Rpb24oKXtyZXR1cm4gc30pO3ZhciBpPW4oXCJqcXVlcnlcIiksbz1uLm4oaSk7ZnVuY3Rpb24gcyh0LGUpe3ZhciBuPXQubGVuZ3RoO2Z1bmN0aW9uIGkoKXswPT09LS1uJiZlKCl9MD09PW4mJmUoKSx0LmVhY2goZnVuY3Rpb24oKXtpZih0aGlzLmNvbXBsZXRlJiZ2b2lkIDAhPT10aGlzLm5hdHVyYWxXaWR0aClpKCk7ZWxzZXt2YXIgdD1uZXcgSW1hZ2Usbj1cImxvYWQuemYuaW1hZ2VzIGVycm9yLnpmLmltYWdlc1wiO28oKSh0KS5vbmUobixmdW5jdGlvbiB0KGUpe28oKSh0aGlzKS5vZmYobix0KSxpKCl9KSx0LnNyYz1vKCkodGhpcykuYXR0cihcInNyY1wiKX19KX19LFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwua2V5Ym9hcmQuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiS2V5Ym9hcmRcIixmdW5jdGlvbigpe3JldHVybiBjfSk7dmFyIGk9bihcImpxdWVyeVwiKSxyPW4ubihpKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSxvPXs5OlwiVEFCXCIsMTM6XCJFTlRFUlwiLDI3OlwiRVNDQVBFXCIsMzI6XCJTUEFDRVwiLDM1OlwiRU5EXCIsMzY6XCJIT01FXCIsMzc6XCJBUlJPV19MRUZUXCIsMzg6XCJBUlJPV19VUFwiLDM5OlwiQVJST1dfUklHSFRcIiw0MDpcIkFSUk9XX0RPV05cIn0sdT17fTtmdW5jdGlvbiBzKHQpe3JldHVybiEhdCYmdC5maW5kKFwiYVtocmVmXSwgYXJlYVtocmVmXSwgaW5wdXQ6bm90KFtkaXNhYmxlZF0pLCBzZWxlY3Q6bm90KFtkaXNhYmxlZF0pLCB0ZXh0YXJlYTpub3QoW2Rpc2FibGVkXSksIGJ1dHRvbjpub3QoW2Rpc2FibGVkXSksIGlmcmFtZSwgb2JqZWN0LCBlbWJlZCwgKlt0YWJpbmRleF0sICpbY29udGVudGVkaXRhYmxlXVwiKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4hKCFyKCkodGhpcykuaXMoXCI6dmlzaWJsZVwiKXx8cigpKHRoaXMpLmF0dHIoXCJ0YWJpbmRleFwiKTwwKX0pfWZ1bmN0aW9uIGEodCl7dmFyIGU9b1t0LndoaWNofHx0LmtleUNvZGVdfHxTdHJpbmcuZnJvbUNoYXJDb2RlKHQud2hpY2gpLnRvVXBwZXJDYXNlKCk7cmV0dXJuIGU9ZS5yZXBsYWNlKC9cXFcrLyxcIlwiKSx0LnNoaWZ0S2V5JiYoZT1cIlNISUZUX1wiLmNvbmNhdChlKSksdC5jdHJsS2V5JiYoZT1cIkNUUkxfXCIuY29uY2F0KGUpKSx0LmFsdEtleSYmKGU9XCJBTFRfXCIuY29uY2F0KGUpKSxlPWUucmVwbGFjZSgvXyQvLFwiXCIpfXZhciBjPXtrZXlzOmZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Zvcih2YXIgbiBpbiB0KWVbdFtuXV09dFtuXTtyZXR1cm4gZX0obykscGFyc2VLZXk6YSxoYW5kbGVLZXk6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG89dVtlXSxzPXRoaXMucGFyc2VLZXkodCk7aWYoIW8pcmV0dXJuIGNvbnNvbGUud2FybihcIkNvbXBvbmVudCBub3QgZGVmaW5lZCFcIik7aWYoKGk9blsodm9pZCAwPT09by5sdHI/bzpPYmplY3QobC5ydGwpKCk/ci5hLmV4dGVuZCh7fSxvLmx0cixvLnJ0bCk6ci5hLmV4dGVuZCh7fSxvLnJ0bCxvLmx0cikpW3NdXSkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGkpe3ZhciBhPWkuYXBwbHkoKTsobi5oYW5kbGVkfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmhhbmRsZWQpJiZuLmhhbmRsZWQoYSl9ZWxzZShuLnVuaGFuZGxlZHx8XCJmdW5jdGlvblwiPT10eXBlb2Ygbi51bmhhbmRsZWQpJiZuLnVuaGFuZGxlZCgpfSxmaW5kRm9jdXNhYmxlOnMscmVnaXN0ZXI6ZnVuY3Rpb24odCxlKXt1W3RdPWV9LHRyYXBGb2N1czpmdW5jdGlvbih0KXt2YXIgZT1zKHQpLG49ZS5lcSgwKSxpPWUuZXEoLTEpO3Qub24oXCJrZXlkb3duLnpmLnRyYXBmb2N1c1wiLGZ1bmN0aW9uKHQpe3QudGFyZ2V0PT09aVswXSYmXCJUQUJcIj09PWEodCk/KHQucHJldmVudERlZmF1bHQoKSxuLmZvY3VzKCkpOnQudGFyZ2V0PT09blswXSYmXCJTSElGVF9UQUJcIj09PWEodCkmJih0LnByZXZlbnREZWZhdWx0KCksaS5mb2N1cygpKX0pfSxyZWxlYXNlRm9jdXM6ZnVuY3Rpb24odCl7dC5vZmYoXCJrZXlkb3duLnpmLnRyYXBmb2N1c1wiKX19fSxcIi4vanMvZm91bmRhdGlvbi51dGlsLm1lZGlhUXVlcnkuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiTWVkaWFRdWVyeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGF9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLHM9bi5uKGkpO2Z1bmN0aW9uIG8odCl7cmV0dXJuKG89XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfXdpbmRvdy5tYXRjaE1lZGlhfHwod2luZG93Lm1hdGNoTWVkaWE9ZnVuY3Rpb24oKXt2YXIgZT13aW5kb3cuc3R5bGVNZWRpYXx8d2luZG93Lm1lZGlhO2lmKCFlKXt2YXIgbixpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSx0PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpWzBdO2kudHlwZT1cInRleHQvY3NzXCIsaS5pZD1cIm1hdGNobWVkaWFqcy10ZXN0XCIsdD90LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGksdCk6ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChpKSxuPVwiZ2V0Q29tcHV0ZWRTdHlsZVwiaW4gd2luZG93JiZ3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShpLG51bGwpfHxpLmN1cnJlbnRTdHlsZSxlPXttYXRjaE1lZGl1bTpmdW5jdGlvbih0KXt2YXIgZT1cIkBtZWRpYSBcIit0K1wieyAjbWF0Y2htZWRpYWpzLXRlc3QgeyB3aWR0aDogMXB4OyB9IH1cIjtyZXR1cm4gaS5zdHlsZVNoZWV0P2kuc3R5bGVTaGVldC5jc3NUZXh0PWU6aS50ZXh0Q29udGVudD1lLFwiMXB4XCI9PT1uLndpZHRofX19cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybnttYXRjaGVzOmUubWF0Y2hNZWRpdW0odHx8XCJhbGxcIiksbWVkaWE6dHx8XCJhbGxcIn19fSgpKTt2YXIgYT17cXVlcmllczpbXSxjdXJyZW50OlwiXCIsX2luaXQ6ZnVuY3Rpb24oKXtzKCkoXCJtZXRhLmZvdW5kYXRpb24tbXFcIikubGVuZ3RofHxzKCkoJzxtZXRhIGNsYXNzPVwiZm91bmRhdGlvbi1tcVwiPicpLmFwcGVuZFRvKGRvY3VtZW50LmhlYWQpO3ZhciB0LGUsbixpPXMoKShcIi5mb3VuZGF0aW9uLW1xXCIpLmNzcyhcImZvbnQtZmFtaWx5XCIpO2Zvcih2YXIgbyBpbiBuPXt9LHQ9XCJzdHJpbmdcIj09dHlwZW9mKGU9aSkmJihlPWUudHJpbSgpLnNsaWNlKDEsLTEpKT9uPWUuc3BsaXQoXCImXCIpLnJlZHVjZShmdW5jdGlvbih0LGUpe3ZhciBuPWUucmVwbGFjZSgvXFwrL2csXCIgXCIpLnNwbGl0KFwiPVwiKSxpPW5bMF0sbz1uWzFdO3JldHVybiBpPWRlY29kZVVSSUNvbXBvbmVudChpKSxvPXZvaWQgMD09PW8/bnVsbDpkZWNvZGVVUklDb21wb25lbnQobyksdC5oYXNPd25Qcm9wZXJ0eShpKT9BcnJheS5pc0FycmF5KHRbaV0pP3RbaV0ucHVzaChvKTp0W2ldPVt0W2ldLG9dOnRbaV09byx0fSx7fSk6bil0Lmhhc093blByb3BlcnR5KG8pJiZ0aGlzLnF1ZXJpZXMucHVzaCh7bmFtZTpvLHZhbHVlOlwib25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IFwiLmNvbmNhdCh0W29dLFwiKVwiKX0pO3RoaXMuY3VycmVudD10aGlzLl9nZXRDdXJyZW50U2l6ZSgpLHRoaXMuX3dhdGNoZXIoKX0sYXRMZWFzdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldCh0KTtyZXR1cm4hIWUmJndpbmRvdy5tYXRjaE1lZGlhKGUpLm1hdGNoZXN9LGlzOmZ1bmN0aW9uKHQpe3JldHVybiAxPCh0PXQudHJpbSgpLnNwbGl0KFwiIFwiKSkubGVuZ3RoJiZcIm9ubHlcIj09PXRbMV0/dFswXT09PXRoaXMuX2dldEN1cnJlbnRTaXplKCk6dGhpcy5hdExlYXN0KHRbMF0pfSxnZXQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIHRoaXMucXVlcmllcylpZih0aGlzLnF1ZXJpZXMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBuPXRoaXMucXVlcmllc1tlXTtpZih0PT09bi5uYW1lKXJldHVybiBuLnZhbHVlfXJldHVybiBudWxsfSxfZ2V0Q3VycmVudFNpemU6ZnVuY3Rpb24oKXtmb3IodmFyIHQsZT0wO2U8dGhpcy5xdWVyaWVzLmxlbmd0aDtlKyspe3ZhciBuPXRoaXMucXVlcmllc1tlXTt3aW5kb3cubWF0Y2hNZWRpYShuLnZhbHVlKS5tYXRjaGVzJiYodD1uKX1yZXR1cm5cIm9iamVjdFwiPT09byh0KT90Lm5hbWU6dH0sX3dhdGNoZXI6ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3MoKSh3aW5kb3cpLm9mZihcInJlc2l6ZS56Zi5tZWRpYXF1ZXJ5XCIpLm9uKFwicmVzaXplLnpmLm1lZGlhcXVlcnlcIixmdW5jdGlvbigpe3ZhciB0PW4uX2dldEN1cnJlbnRTaXplKCksZT1uLmN1cnJlbnQ7dCE9PWUmJihuLmN1cnJlbnQ9dCxzKCkod2luZG93KS50cmlnZ2VyKFwiY2hhbmdlZC56Zi5tZWRpYXF1ZXJ5XCIsW3QsZV0pKX0pfX19LFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwubW90aW9uLmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIk1vdmVcIixmdW5jdGlvbigpe3JldHVybiBzfSksbi5kKGUsXCJNb3Rpb25cIixmdW5jdGlvbigpe3JldHVybiBvfSk7dmFyIGk9bihcImpxdWVyeVwiKSxyPW4ubihpKSxsPW4oXCIuL2pzL2ZvdW5kYXRpb24uY29yZS51dGlscy5qc1wiKSx1PVtcIm11aS1lbnRlclwiLFwibXVpLWxlYXZlXCJdLGM9W1wibXVpLWVudGVyLWFjdGl2ZVwiLFwibXVpLWxlYXZlLWFjdGl2ZVwiXSxvPXthbmltYXRlSW46ZnVuY3Rpb24odCxlLG4pe2EoITAsdCxlLG4pfSxhbmltYXRlT3V0OmZ1bmN0aW9uKHQsZSxuKXthKCExLHQsZSxuKX19O2Z1bmN0aW9uIHMobixpLG8pe3ZhciBzLGEscj1udWxsO2lmKDA9PT1uKXJldHVybiBvLmFwcGx5KGkpLHZvaWQgaS50cmlnZ2VyKFwiZmluaXNoZWQuemYuYW5pbWF0ZVwiLFtpXSkudHJpZ2dlckhhbmRsZXIoXCJmaW5pc2hlZC56Zi5hbmltYXRlXCIsW2ldKTtzPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gdChlKXtyfHwocj1lKSxhPWUtcixvLmFwcGx5KGkpLGE8bj9zPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodCxpKTood2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHMpLGkudHJpZ2dlcihcImZpbmlzaGVkLnpmLmFuaW1hdGVcIixbaV0pLnRyaWdnZXJIYW5kbGVyKFwiZmluaXNoZWQuemYuYW5pbWF0ZVwiLFtpXSkpfSl9ZnVuY3Rpb24gYSh0LGUsbixpKXtpZigoZT1yKCkoZSkuZXEoMCkpLmxlbmd0aCl7dmFyIG89dD91WzBdOnVbMV0scz10P2NbMF06Y1sxXTthKCksZS5hZGRDbGFzcyhuKS5jc3MoXCJ0cmFuc2l0aW9uXCIsXCJub25lXCIpLHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe2UuYWRkQ2xhc3MobyksdCYmZS5zaG93KCl9KSxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtlWzBdLm9mZnNldFdpZHRoLGUuY3NzKFwidHJhbnNpdGlvblwiLFwiXCIpLmFkZENsYXNzKHMpfSksZS5vbmUoT2JqZWN0KGwudHJhbnNpdGlvbmVuZCkoZSksZnVuY3Rpb24oKXt0fHxlLmhpZGUoKTthKCksaSYmaS5hcHBseShlKX0pfWZ1bmN0aW9uIGEoKXtlWzBdLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbj0wLGUucmVtb3ZlQ2xhc3MoXCJcIi5jb25jYXQobyxcIiBcIikuY29uY2F0KHMsXCIgXCIpLmNvbmNhdChuKSl9fX0sXCIuL2pzL2ZvdW5kYXRpb24udXRpbC5uZXN0LmpzXCI6ZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKSxuLmQoZSxcIk5lc3RcIixmdW5jdGlvbigpe3JldHVybiBvfSk7dmFyIGk9bihcImpxdWVyeVwiKSxyPW4ubihpKSxvPXtGZWF0aGVyOmZ1bmN0aW9uKHQpe3ZhciBuPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpcInpmXCI7dC5hdHRyKFwicm9sZVwiLFwibWVudWJhclwiKTt2YXIgZT10LmZpbmQoXCJsaVwiKS5hdHRyKHtyb2xlOlwibWVudWl0ZW1cIn0pLGk9XCJpcy1cIi5jb25jYXQobixcIi1zdWJtZW51XCIpLG89XCJcIi5jb25jYXQoaSxcIi1pdGVtXCIpLHM9XCJpcy1cIi5jb25jYXQobixcIi1zdWJtZW51LXBhcmVudFwiKSxhPVwiYWNjb3JkaW9uXCIhPT1uO2UuZWFjaChmdW5jdGlvbigpe3ZhciB0PXIoKSh0aGlzKSxlPXQuY2hpbGRyZW4oXCJ1bFwiKTtlLmxlbmd0aCYmKHQuYWRkQ2xhc3MocyksZS5hZGRDbGFzcyhcInN1Ym1lbnUgXCIuY29uY2F0KGkpKS5hdHRyKHtcImRhdGEtc3VibWVudVwiOlwiXCJ9KSxhJiYodC5hdHRyKHtcImFyaWEtaGFzcG9wdXBcIjohMCxcImFyaWEtbGFiZWxcIjp0LmNoaWxkcmVuKFwiYTpmaXJzdFwiKS50ZXh0KCl9KSxcImRyaWxsZG93blwiPT09biYmdC5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjohMX0pKSxlLmFkZENsYXNzKFwic3VibWVudSBcIi5jb25jYXQoaSkpLmF0dHIoe1wiZGF0YS1zdWJtZW51XCI6XCJcIixyb2xlOlwibWVudWJhclwifSksXCJkcmlsbGRvd25cIj09PW4mJmUuYXR0cih7XCJhcmlhLWhpZGRlblwiOiEwfSkpLHQucGFyZW50KFwiW2RhdGEtc3VibWVudV1cIikubGVuZ3RoJiZ0LmFkZENsYXNzKFwiaXMtc3VibWVudS1pdGVtIFwiLmNvbmNhdChvKSl9KX0sQnVybjpmdW5jdGlvbih0LGUpe3ZhciBuPVwiaXMtXCIuY29uY2F0KGUsXCItc3VibWVudVwiKSxpPVwiXCIuY29uY2F0KG4sXCItaXRlbVwiKSxvPVwiaXMtXCIuY29uY2F0KGUsXCItc3VibWVudS1wYXJlbnRcIik7dC5maW5kKFwiPmxpLCA+IGxpID4gdWwsIC5tZW51LCAubWVudSA+IGxpLCBbZGF0YS1zdWJtZW51XSA+IGxpXCIpLnJlbW92ZUNsYXNzKFwiXCIuY29uY2F0KG4sXCIgXCIpLmNvbmNhdChpLFwiIFwiKS5jb25jYXQobyxcIiBpcy1zdWJtZW51LWl0ZW0gc3VibWVudSBpcy1hY3RpdmVcIikpLnJlbW92ZUF0dHIoXCJkYXRhLXN1Ym1lbnVcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpfX19LFwiLi9qcy9mb3VuZGF0aW9uLnV0aWwudGltZXIuanNcIjpmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpLG4uZChlLFwiVGltZXJcIixmdW5jdGlvbigpe3JldHVybiBpfSk7bihcImpxdWVyeVwiKTtmdW5jdGlvbiBpKGUsdCxuKXt2YXIgaSxvLHM9dGhpcyxhPXQuZHVyYXRpb24scj1PYmplY3Qua2V5cyhlLmRhdGEoKSlbMF18fFwidGltZXJcIixsPS0xO3RoaXMuaXNQYXVzZWQ9ITEsdGhpcy5yZXN0YXJ0PWZ1bmN0aW9uKCl7bD0tMSxjbGVhclRpbWVvdXQobyksdGhpcy5zdGFydCgpfSx0aGlzLnN0YXJ0PWZ1bmN0aW9uKCl7dGhpcy5pc1BhdXNlZD0hMSxjbGVhclRpbWVvdXQobyksbD1sPD0wP2E6bCxlLmRhdGEoXCJwYXVzZWRcIiwhMSksaT1EYXRlLm5vdygpLG89c2V0VGltZW91dChmdW5jdGlvbigpe3QuaW5maW5pdGUmJnMucmVzdGFydCgpLG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG4mJm4oKX0sbCksZS50cmlnZ2VyKFwidGltZXJzdGFydC56Zi5cIi5jb25jYXQocikpfSx0aGlzLnBhdXNlPWZ1bmN0aW9uKCl7dGhpcy5pc1BhdXNlZD0hMCxjbGVhclRpbWVvdXQobyksZS5kYXRhKFwicGF1c2VkXCIsITApO3ZhciB0PURhdGUubm93KCk7bC09dC1pLGUudHJpZ2dlcihcInRpbWVycGF1c2VkLnpmLlwiLmNvbmNhdChyKSl9fX0sXCIuL2pzL2ZvdW5kYXRpb24udXRpbC50b3VjaC5qc1wiOmZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksbi5kKGUsXCJUb3VjaFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGN9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLG89bi5uKGkpO2Z1bmN0aW9uIHModCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIGk9ZVtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaS5rZXksaSl9fXZhciBhLHIsbCx1LGM9e30sZD0hMSxoPSExO2Z1bmN0aW9uIGYodCl7aWYodGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIscCksdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIixmKSwhaCl7dmFyIGU9by5hLkV2ZW50KFwidGFwXCIsdXx8dCk7bygpKHRoaXMpLnRyaWdnZXIoZSl9dT1udWxsLGg9ZD0hMX1mdW5jdGlvbiBwKHQpe2lmKG8uYS5zcG90U3dpcGUucHJldmVudERlZmF1bHQmJnQucHJldmVudERlZmF1bHQoKSxkKXt2YXIgZSxuPXQudG91Y2hlc1swXS5wYWdlWCxpPSh0LnRvdWNoZXNbMF0ucGFnZVksYS1uKTtoPSEwLGw9KG5ldyBEYXRlKS5nZXRUaW1lKCktcixNYXRoLmFicyhpKT49by5hLnNwb3RTd2lwZS5tb3ZlVGhyZXNob2xkJiZsPD1vLmEuc3BvdFN3aXBlLnRpbWVUaHJlc2hvbGQmJihlPTA8aT9cImxlZnRcIjpcInJpZ2h0XCIpLGUmJih0LnByZXZlbnREZWZhdWx0KCksZi5hcHBseSh0aGlzLGFyZ3VtZW50cyksbygpKHRoaXMpLnRyaWdnZXIoby5hLkV2ZW50KFwic3dpcGVcIix0KSxlKS50cmlnZ2VyKG8uYS5FdmVudChcInN3aXBlXCIuY29uY2F0KGUpLHQpKSl9fWZ1bmN0aW9uIG0odCl7MT09dC50b3VjaGVzLmxlbmd0aCYmKGE9dC50b3VjaGVzWzBdLnBhZ2VYLHQudG91Y2hlc1swXS5wYWdlWSx1PXQsaD0hKGQ9ITApLHI9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIscCwhMSksdGhpcy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIixmLCExKSl9ZnVuY3Rpb24gZygpe3RoaXMuYWRkRXZlbnRMaXN0ZW5lciYmdGhpcy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLG0sITEpfXZhciB2PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLGUpLHRoaXMudmVyc2lvbj1cIjEuMC4wXCIsdGhpcy5lbmFibGVkPVwib250b3VjaHN0YXJ0XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdGhpcy5wcmV2ZW50RGVmYXVsdD0hMSx0aGlzLm1vdmVUaHJlc2hvbGQ9NzUsdGhpcy50aW1lVGhyZXNob2xkPTIwMCx0aGlzLiQ9dCx0aGlzLl9pbml0KCl9dmFyIHQsbixpO3JldHVybiB0PWUsKG49W3trZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy4kO3QuZXZlbnQuc3BlY2lhbC5zd2lwZT17c2V0dXA6Z30sdC5ldmVudC5zcGVjaWFsLnRhcD17c2V0dXA6Z30sdC5lYWNoKFtcImxlZnRcIixcInVwXCIsXCJkb3duXCIsXCJyaWdodFwiXSxmdW5jdGlvbigpe3QuZXZlbnQuc3BlY2lhbFtcInN3aXBlXCIuY29uY2F0KHRoaXMpXT17c2V0dXA6ZnVuY3Rpb24oKXt0KHRoaXMpLm9uKFwic3dpcGVcIix0Lm5vb3ApfX19KX19XSkmJnModC5wcm90b3R5cGUsbiksaSYmcyh0LGkpLGV9KCk7Yy5zZXR1cFNwb3RTd2lwZT1mdW5jdGlvbih0KXt0LnNwb3RTd2lwZT1uZXcgdih0KX0sYy5zZXR1cFRvdWNoSGFuZGxlcj1mdW5jdGlvbihpKXtpLmZuLmFkZFRvdWNoPWZ1bmN0aW9uKCl7dGhpcy5lYWNoKGZ1bmN0aW9uKHQsZSl7aShlKS5iaW5kKFwidG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgdG91Y2hjYW5jZWxcIixmdW5jdGlvbih0KXtuKHQpfSl9KTt2YXIgbj1mdW5jdGlvbih0KXt2YXIgZSxuPXQuY2hhbmdlZFRvdWNoZXNbMF0saT17dG91Y2hzdGFydDpcIm1vdXNlZG93blwiLHRvdWNobW92ZTpcIm1vdXNlbW92ZVwiLHRvdWNoZW5kOlwibW91c2V1cFwifVt0LnR5cGVdO1wiTW91c2VFdmVudFwiaW4gd2luZG93JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB3aW5kb3cuTW91c2VFdmVudD9lPW5ldyB3aW5kb3cuTW91c2VFdmVudChpLHtidWJibGVzOiEwLGNhbmNlbGFibGU6ITAsc2NyZWVuWDpuLnNjcmVlblgsc2NyZWVuWTpuLnNjcmVlblksY2xpZW50WDpuLmNsaWVudFgsY2xpZW50WTpuLmNsaWVudFl9KTooZT1kb2N1bWVudC5jcmVhdGVFdmVudChcIk1vdXNlRXZlbnRcIikpLmluaXRNb3VzZUV2ZW50KGksITAsITAsd2luZG93LDEsbi5zY3JlZW5YLG4uc2NyZWVuWSxuLmNsaWVudFgsbi5jbGllbnRZLCExLCExLCExLCExLDAsbnVsbCksbi50YXJnZXQuZGlzcGF0Y2hFdmVudChlKX19fSxjLmluaXQ9ZnVuY3Rpb24odCl7dm9pZCAwPT09dC5zcG90U3dpcGUmJihjLnNldHVwU3BvdFN3aXBlKHQpLGMuc2V0dXBUb3VjaEhhbmRsZXIodCkpfX0sXCIuL2pzL2ZvdW5kYXRpb24udXRpbC50cmlnZ2Vycy5qc1wiOmZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksbi5kKGUsXCJUcmlnZ2Vyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGN9KTt2YXIgaT1uKFwianF1ZXJ5XCIpLHM9bi5uKGkpLG89bihcIi4vanMvZm91bmRhdGlvbi5jb3JlLnV0aWxzLmpzXCIpLGE9bihcIi4vanMvZm91bmRhdGlvbi51dGlsLm1vdGlvbi5qc1wiKTtmdW5jdGlvbiByKHQpe3JldHVybihyPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9KSh0KX12YXIgbD1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXCJXZWJLaXRcIixcIk1velwiLFwiT1wiLFwiTXNcIixcIlwiXSxlPTA7ZTx0Lmxlbmd0aDtlKyspaWYoXCJcIi5jb25jYXQodFtlXSxcIk11dGF0aW9uT2JzZXJ2ZXJcIilpbiB3aW5kb3cpcmV0dXJuIHdpbmRvd1tcIlwiLmNvbmNhdCh0W2VdLFwiTXV0YXRpb25PYnNlcnZlclwiKV07cmV0dXJuITF9KCksdT1mdW5jdGlvbihlLG4pe2UuZGF0YShuKS5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbih0KXtzKCkoXCIjXCIuY29uY2F0KHQpKVtcImNsb3NlXCI9PT1uP1widHJpZ2dlclwiOlwidHJpZ2dlckhhbmRsZXJcIl0oXCJcIi5jb25jYXQobixcIi56Zi50cmlnZ2VyXCIpLFtlXSl9KX0sYz17TGlzdGVuZXJzOntCYXNpYzp7fSxHbG9iYWw6e319LEluaXRpYWxpemVyczp7fX07ZnVuY3Rpb24gZChlLHQsbil7dmFyIGksbz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7cygpKHdpbmRvdykub2ZmKHQpLm9uKHQsZnVuY3Rpb24odCl7aSYmY2xlYXJUaW1lb3V0KGkpLGk9c2V0VGltZW91dChmdW5jdGlvbigpe24uYXBwbHkobnVsbCxvKX0sZXx8MTApfSl9Yy5MaXN0ZW5lcnMuQmFzaWM9e29wZW5MaXN0ZW5lcjpmdW5jdGlvbigpe3UocygpKHRoaXMpLFwib3BlblwiKX0sY2xvc2VMaXN0ZW5lcjpmdW5jdGlvbigpe3MoKSh0aGlzKS5kYXRhKFwiY2xvc2VcIik/dShzKCkodGhpcyksXCJjbG9zZVwiKTpzKCkodGhpcykudHJpZ2dlcihcImNsb3NlLnpmLnRyaWdnZXJcIil9LHRvZ2dsZUxpc3RlbmVyOmZ1bmN0aW9uKCl7cygpKHRoaXMpLmRhdGEoXCJ0b2dnbGVcIik/dShzKCkodGhpcyksXCJ0b2dnbGVcIik6cygpKHRoaXMpLnRyaWdnZXIoXCJ0b2dnbGUuemYudHJpZ2dlclwiKX0sY2xvc2VhYmxlTGlzdGVuZXI6ZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKTt2YXIgZT1zKCkodGhpcykuZGF0YShcImNsb3NhYmxlXCIpO1wiXCIhPT1lP2EuTW90aW9uLmFuaW1hdGVPdXQocygpKHRoaXMpLGUsZnVuY3Rpb24oKXtzKCkodGhpcykudHJpZ2dlcihcImNsb3NlZC56ZlwiKX0pOnMoKSh0aGlzKS5mYWRlT3V0KCkudHJpZ2dlcihcImNsb3NlZC56ZlwiKX0sdG9nZ2xlRm9jdXNMaXN0ZW5lcjpmdW5jdGlvbigpe3ZhciB0PXMoKSh0aGlzKS5kYXRhKFwidG9nZ2xlLWZvY3VzXCIpO3MoKShcIiNcIi5jb25jYXQodCkpLnRyaWdnZXJIYW5kbGVyKFwidG9nZ2xlLnpmLnRyaWdnZXJcIixbcygpKHRoaXMpXSl9fSxjLkluaXRpYWxpemVycy5hZGRPcGVuTGlzdGVuZXI9ZnVuY3Rpb24odCl7dC5vZmYoXCJjbGljay56Zi50cmlnZ2VyXCIsYy5MaXN0ZW5lcnMuQmFzaWMub3Blbkxpc3RlbmVyKSx0Lm9uKFwiY2xpY2suemYudHJpZ2dlclwiLFwiW2RhdGEtb3Blbl1cIixjLkxpc3RlbmVycy5CYXNpYy5vcGVuTGlzdGVuZXIpfSxjLkluaXRpYWxpemVycy5hZGRDbG9zZUxpc3RlbmVyPWZ1bmN0aW9uKHQpe3Qub2ZmKFwiY2xpY2suemYudHJpZ2dlclwiLGMuTGlzdGVuZXJzLkJhc2ljLmNsb3NlTGlzdGVuZXIpLHQub24oXCJjbGljay56Zi50cmlnZ2VyXCIsXCJbZGF0YS1jbG9zZV1cIixjLkxpc3RlbmVycy5CYXNpYy5jbG9zZUxpc3RlbmVyKX0sYy5Jbml0aWFsaXplcnMuYWRkVG9nZ2xlTGlzdGVuZXI9ZnVuY3Rpb24odCl7dC5vZmYoXCJjbGljay56Zi50cmlnZ2VyXCIsYy5MaXN0ZW5lcnMuQmFzaWMudG9nZ2xlTGlzdGVuZXIpLHQub24oXCJjbGljay56Zi50cmlnZ2VyXCIsXCJbZGF0YS10b2dnbGVdXCIsYy5MaXN0ZW5lcnMuQmFzaWMudG9nZ2xlTGlzdGVuZXIpfSxjLkluaXRpYWxpemVycy5hZGRDbG9zZWFibGVMaXN0ZW5lcj1mdW5jdGlvbih0KXt0Lm9mZihcImNsb3NlLnpmLnRyaWdnZXJcIixjLkxpc3RlbmVycy5CYXNpYy5jbG9zZWFibGVMaXN0ZW5lciksdC5vbihcImNsb3NlLnpmLnRyaWdnZXJcIixcIltkYXRhLWNsb3NlYWJsZV0sIFtkYXRhLWNsb3NhYmxlXVwiLGMuTGlzdGVuZXJzLkJhc2ljLmNsb3NlYWJsZUxpc3RlbmVyKX0sYy5Jbml0aWFsaXplcnMuYWRkVG9nZ2xlRm9jdXNMaXN0ZW5lcj1mdW5jdGlvbih0KXt0Lm9mZihcImZvY3VzLnpmLnRyaWdnZXIgYmx1ci56Zi50cmlnZ2VyXCIsYy5MaXN0ZW5lcnMuQmFzaWMudG9nZ2xlRm9jdXNMaXN0ZW5lciksdC5vbihcImZvY3VzLnpmLnRyaWdnZXIgYmx1ci56Zi50cmlnZ2VyXCIsXCJbZGF0YS10b2dnbGUtZm9jdXNdXCIsYy5MaXN0ZW5lcnMuQmFzaWMudG9nZ2xlRm9jdXNMaXN0ZW5lcil9LGMuTGlzdGVuZXJzLkdsb2JhbD17cmVzaXplTGlzdGVuZXI6ZnVuY3Rpb24odCl7bHx8dC5lYWNoKGZ1bmN0aW9uKCl7cygpKHRoaXMpLnRyaWdnZXJIYW5kbGVyKFwicmVzaXplbWUuemYudHJpZ2dlclwiKX0pLHQuYXR0cihcImRhdGEtZXZlbnRzXCIsXCJyZXNpemVcIil9LHNjcm9sbExpc3RlbmVyOmZ1bmN0aW9uKHQpe2x8fHQuZWFjaChmdW5jdGlvbigpe3MoKSh0aGlzKS50cmlnZ2VySGFuZGxlcihcInNjcm9sbG1lLnpmLnRyaWdnZXJcIil9KSx0LmF0dHIoXCJkYXRhLWV2ZW50c1wiLFwic2Nyb2xsXCIpfSxjbG9zZU1lTGlzdGVuZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj10Lm5hbWVzcGFjZS5zcGxpdChcIi5cIilbMF07cygpKFwiW2RhdGEtXCIuY29uY2F0KG4sXCJdXCIpKS5ub3QoJ1tkYXRhLXlldGktYm94PVwiJy5jb25jYXQoZSwnXCJdJykpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1zKCkodGhpcyk7dC50cmlnZ2VySGFuZGxlcihcImNsb3NlLnpmLnRyaWdnZXJcIixbdF0pfSl9fSxjLkluaXRpYWxpemVycy5hZGRDbG9zZW1lTGlzdGVuZXI9ZnVuY3Rpb24odCl7dmFyIGU9cygpKFwiW2RhdGEteWV0aS1ib3hdXCIpLG49W1wiZHJvcGRvd25cIixcInRvb2x0aXBcIixcInJldmVhbFwiXTtpZih0JiYoXCJzdHJpbmdcIj09dHlwZW9mIHQ/bi5wdXNoKHQpOlwib2JqZWN0XCI9PT1yKHQpJiZcInN0cmluZ1wiPT10eXBlb2YgdFswXT9uLmNvbmNhdCh0KTpjb25zb2xlLmVycm9yKFwiUGx1Z2luIG5hbWVzIG11c3QgYmUgc3RyaW5nc1wiKSksZS5sZW5ndGgpe3ZhciBpPW4ubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwiY2xvc2VtZS56Zi5cIi5jb25jYXQodCl9KS5qb2luKFwiIFwiKTtzKCkod2luZG93KS5vZmYoaSkub24oaSxjLkxpc3RlbmVycy5HbG9iYWwuY2xvc2VNZUxpc3RlbmVyKX19LGMuSW5pdGlhbGl6ZXJzLmFkZFJlc2l6ZUxpc3RlbmVyPWZ1bmN0aW9uKHQpe3ZhciBlPXMoKShcIltkYXRhLXJlc2l6ZV1cIik7ZS5sZW5ndGgmJmQodCxcInJlc2l6ZS56Zi50cmlnZ2VyXCIsYy5MaXN0ZW5lcnMuR2xvYmFsLnJlc2l6ZUxpc3RlbmVyLGUpfSxjLkluaXRpYWxpemVycy5hZGRTY3JvbGxMaXN0ZW5lcj1mdW5jdGlvbih0KXt2YXIgZT1zKCkoXCJbZGF0YS1zY3JvbGxdXCIpO2UubGVuZ3RoJiZkKHQsXCJzY3JvbGwuemYudHJpZ2dlclwiLGMuTGlzdGVuZXJzLkdsb2JhbC5zY3JvbGxMaXN0ZW5lcixlKX0sYy5Jbml0aWFsaXplcnMuYWRkTXV0YXRpb25FdmVudHNMaXN0ZW5lcj1mdW5jdGlvbih0KXtpZighbClyZXR1cm4hMTt2YXIgZT10LmZpbmQoXCJbZGF0YS1yZXNpemVdLCBbZGF0YS1zY3JvbGxdLCBbZGF0YS1tdXRhdGVdXCIpLG49ZnVuY3Rpb24odCl7dmFyIGU9cygpKHRbMF0udGFyZ2V0KTtzd2l0Y2godFswXS50eXBlKXtjYXNlXCJhdHRyaWJ1dGVzXCI6XCJzY3JvbGxcIj09PWUuYXR0cihcImRhdGEtZXZlbnRzXCIpJiZcImRhdGEtZXZlbnRzXCI9PT10WzBdLmF0dHJpYnV0ZU5hbWUmJmUudHJpZ2dlckhhbmRsZXIoXCJzY3JvbGxtZS56Zi50cmlnZ2VyXCIsW2Usd2luZG93LnBhZ2VZT2Zmc2V0XSksXCJyZXNpemVcIj09PWUuYXR0cihcImRhdGEtZXZlbnRzXCIpJiZcImRhdGEtZXZlbnRzXCI9PT10WzBdLmF0dHJpYnV0ZU5hbWUmJmUudHJpZ2dlckhhbmRsZXIoXCJyZXNpemVtZS56Zi50cmlnZ2VyXCIsW2VdKSxcInN0eWxlXCI9PT10WzBdLmF0dHJpYnV0ZU5hbWUmJihlLmNsb3Nlc3QoXCJbZGF0YS1tdXRhdGVdXCIpLmF0dHIoXCJkYXRhLWV2ZW50c1wiLFwibXV0YXRlXCIpLGUuY2xvc2VzdChcIltkYXRhLW11dGF0ZV1cIikudHJpZ2dlckhhbmRsZXIoXCJtdXRhdGVtZS56Zi50cmlnZ2VyXCIsW2UuY2xvc2VzdChcIltkYXRhLW11dGF0ZV1cIildKSk7YnJlYWs7Y2FzZVwiY2hpbGRMaXN0XCI6ZS5jbG9zZXN0KFwiW2RhdGEtbXV0YXRlXVwiKS5hdHRyKFwiZGF0YS1ldmVudHNcIixcIm11dGF0ZVwiKSxlLmNsb3Nlc3QoXCJbZGF0YS1tdXRhdGVdXCIpLnRyaWdnZXJIYW5kbGVyKFwibXV0YXRlbWUuemYudHJpZ2dlclwiLFtlLmNsb3Nlc3QoXCJbZGF0YS1tdXRhdGVdXCIpXSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm4hMX19O2lmKGUubGVuZ3RoKWZvcih2YXIgaT0wO2k8PWUubGVuZ3RoLTE7aSsrKXtuZXcgbChuKS5vYnNlcnZlKGVbaV0se2F0dHJpYnV0ZXM6ITAsY2hpbGRMaXN0OiEwLGNoYXJhY3RlckRhdGE6ITEsc3VidHJlZTohMCxhdHRyaWJ1dGVGaWx0ZXI6W1wiZGF0YS1ldmVudHNcIixcInN0eWxlXCJdfSl9fSxjLkluaXRpYWxpemVycy5hZGRTaW1wbGVMaXN0ZW5lcnM9ZnVuY3Rpb24oKXt2YXIgdD1zKCkoZG9jdW1lbnQpO2MuSW5pdGlhbGl6ZXJzLmFkZE9wZW5MaXN0ZW5lcih0KSxjLkluaXRpYWxpemVycy5hZGRDbG9zZUxpc3RlbmVyKHQpLGMuSW5pdGlhbGl6ZXJzLmFkZFRvZ2dsZUxpc3RlbmVyKHQpLGMuSW5pdGlhbGl6ZXJzLmFkZENsb3NlYWJsZUxpc3RlbmVyKHQpLGMuSW5pdGlhbGl6ZXJzLmFkZFRvZ2dsZUZvY3VzTGlzdGVuZXIodCl9LGMuSW5pdGlhbGl6ZXJzLmFkZEdsb2JhbExpc3RlbmVycz1mdW5jdGlvbigpe3ZhciB0PXMoKShkb2N1bWVudCk7Yy5Jbml0aWFsaXplcnMuYWRkTXV0YXRpb25FdmVudHNMaXN0ZW5lcih0KSxjLkluaXRpYWxpemVycy5hZGRSZXNpemVMaXN0ZW5lcigpLGMuSW5pdGlhbGl6ZXJzLmFkZFNjcm9sbExpc3RlbmVyKCksYy5Jbml0aWFsaXplcnMuYWRkQ2xvc2VtZUxpc3RlbmVyKCl9LGMuaW5pdD1mdW5jdGlvbih0LGUpe09iamVjdChvLm9uTG9hZCkodCh3aW5kb3cpLGZ1bmN0aW9uKCl7ITAhPT10LnRyaWdnZXJzSW5pdGlhbGl6ZWQmJihjLkluaXRpYWxpemVycy5hZGRTaW1wbGVMaXN0ZW5lcnMoKSxjLkluaXRpYWxpemVycy5hZGRHbG9iYWxMaXN0ZW5lcnMoKSx0LnRyaWdnZXJzSW5pdGlhbGl6ZWQ9ITApfSksZSYmKGUuVHJpZ2dlcnM9YyxlLklIZWFyWW91PWMuSW5pdGlhbGl6ZXJzLmFkZEdsb2JhbExpc3RlbmVycyl9fSwwOmZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9bihcIi4vanMvZW50cmllcy9mb3VuZGF0aW9uLmpzXCIpfSxqcXVlcnk6ZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9bn19KX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm91bmRhdGlvbi5taW4uanMubWFwXG4vKiBcblNtYWxsIGpxdWVyeSBwbHVnaW4gdGhhdCBzZW5kcyBmb3JtIHZpYSBhamF4IHRvIHNwZWNpZmllZCB1cmxcbnNldHRpbmdzOiBcbmFjdGlvbiAtIHVybCB3aGVyZSB0byBzZW5kIGZvcm1cbmRvbWFpbiAtIHNpdGUncyBkb21haW4gbmFtZSBuZWVkZWQgYnkgc2VydmVyIHRvIGlkZW50ZWZ5IGZyb20gd2hpY2ggc2l0ZSBlbWFpbCB3YXMgc2VuZCBieSBkZWZhdWx0IGl0IGdldHMgaXQgZnJvbSB3aW5kb3cubG9jYXRpb24uaG9zdFxubWVzc2FnZUNvbnRhaW5lciAtIERPTSBlbGVtZW50IGluIHdoaWNoIHJlc3BvbnNlIGZyb20gc2VydmVyIHNob3VsZCBiZSBpbnNlcnRlZFxuZXJyb3JDb2xvciAtIGVycm9yIG1lc3NhZ2UgdGV4dCdzIGNvbG9yIGJ5IGRlZmF1bHQgaXQncyByZWRcbnN1Y2Nlc3NDb2xvciAtIHN1Y2Nlc3MgbWVzc2FnZSB0ZXh0J3MgY29sb3IgYnkgZGVmYXVsdCBpdCdzIGdyZWVuXG5zdWJtaXRCdG4gLSBzdWJtaXQgYnV0dG9uXG5ldmVudCAtIGV2ZW50IG9uIHdoaWNoIHBsdWdpbiBzZW5kcyBkYXRhXG5hdXRvcml6YXRpb25Ub2tlbiAtIGdlbmVyYXRlZCB0b2tlbiBmb3Igc2VydmVyIHRoYXQgTVVTVCBiZSBzZW5kXG5zdXBwb3J0RW1haWwgLSBzaXRlJ3Mgc3VwcG9ydCBlbWFpbChlbWFpbCB0byB3aGljaCBmb3JtIHNob3VsZCBiZSBzZW5kKVxuICovXG5cbihmdW5jdGlvbiggJCApIHtcblxuICAgICQuZm4uYWpheEVtYWlsU2VuZGVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICB2YXIgc2V0dGluZ3MgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICAvLyBUaGVzZSBhcmUgdGhlIGRlZmF1bHRzLlxuICAgICAgICAgICAgYWN0aW9uOiBcImh0dHBzOi8vdzU5NjYwbnU2aC5leGVjdXRlLWFwaS51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9wcm9kL2NvcnBFbWFpbFNlbmRlclwiLFxuICAgICAgICAgICAgZG9tYWluOiB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsXG4gICAgICAgICAgICBlcnJvclRleHQ6IFwiRXJyb3IhIFRoZSBlbWFpbCBoYXMgbm90IGJlZW4gc2VudC4gUGxlYXNlIHRyeSBsYXRlci5cIixcbiAgICAgICAgICAgIG1lc3NhZ2VDb250YWluZXI6ICQoXCIjZm9ybU1lc3NhZ2VcIiksXG4gICAgICAgICAgICBlcnJvckNvbG9yOiBcInJlZFwiLFxuICAgICAgICAgICAgc3VjY2VzQ29sb3I6IFwiIzA0NzQ0QlwiLFxuICAgICAgICAgICAgc3VibWl0QnRuOiAkKHRoaXMpLmZpbmQoXCJbdHlwZT0nc3VibWl0J11cIiksXG4gICAgICAgICAgICBldmVudDogXCJzdWJtaXRcIixcbiAgICAgICAgICAgIGF1dG9yaXphdGlvblRva2VuOiBcIlwiLFxuICAgICAgICAgICAgc3VwcG9ydEVtYWlsOiBcIlwiXG4gICAgICAgIH0sIG9wdGlvbnMgKTtcblxuICAgICAgICB0aGlzLm9uKHNldHRpbmdzLmV2ZW50LCBmdW5jdGlvbiAoZXZlbnQpe1xuICAgICAgICAgICAgdmFyIGZvcm0gPSB0aGlzLFxuICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpLFxuICAgICAgICAgICAgICAgIGZvcm1EYXRhSnNvbiA9IHt9O1xuXG4gICAgICAgICAgICBzZXR0aW5ncy5zdWJtaXRCdG4ucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgICAgIGpRdWVyeS5lYWNoKGZvcm1EYXRhLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBmb3JtRGF0YUpzb25bdGhpcy5uYW1lXSA9IHRoaXMudmFsdWUgfHwgXCJcIjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZm9ybURhdGFKc29uLmRvbWFpbk5hbWUgPSBzZXR0aW5ncy5kb21haW47XG4gICAgICAgICAgICBmb3JtRGF0YUpzb24uc3VwcG9ydEVtYWlsID0gc2V0dGluZ3Muc3VwcG9ydEVtYWlsO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6IHNldHRpbmdzLmFjdGlvbixcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoZm9ybURhdGFKc29uKSxcbiAgICAgICAgICAgICAgICBjcm9zc0RvbWFpbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Bvc3QnLFxuICAgICAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCdBdXRob3JpemF0aW9uVG9rZW4nLCBzZXR0aW5ncy5hdXRvcml6YXRpb25Ub2tlbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLnN1Ym1pdEJ0bi5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MubWVzc2FnZUNvbnRhaW5lcikudGV4dChyZXNwb25zZS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MubWVzc2FnZUNvbnRhaW5lcikuYXR0cignZGF0YS1jc3AnLCAnbWFpbi1zdWNjZXNzLW1lc3NhZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MubWVzc2FnZUNvbnRhaW5lcikuY3NzKFwiY29sb3JcIiwgc2V0dGluZ3Muc3VjY2VzQ29sb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJChmb3JtKS5hdHRyKCdpZCcpKS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuZmFpbChmdW5jdGlvbih4aHIpe1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zdWJtaXRCdG4ucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MubWVzc2FnZUNvbnRhaW5lcikudGV4dChzZXR0aW5ncy5lcnJvclRleHQpO1xuICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLm1lc3NhZ2VDb250YWluZXIpLmF0dHIoJ2RhdGEtY3NwJywgJ21haW4tZXJyb3ItbWVzc2FnZScpO1xuICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLm1lc3NhZ2VDb250YWluZXIpLmNzcyhcImNvbG9yXCIsIHNldHRpbmdzLmVycm9yQ29sb3IpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxufSggalF1ZXJ5ICkpO1xuJChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHVybCA9IFwiaHR0cHM6Ly9tZW1iZXJzLlwiICsgZ2V0QWRkcmVzcy5zaXRlICsgXCIvYWpheC9nZXRDb3JwRGF0YT9jb3JwX2lkPVwiICsgZ2V0QWRkcmVzcy5jb3JwX2lkICsgXCImY291bnRyeV9jb2RlPVwiICsgZ2V0QWRkcmVzcy5jb3VudHJ5X2NvZGU7XG4gICAgJC5nZXRKU09OKHVybCwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgaWYgKGRhdGEuYWRkcmVzc1VTICE9PSBudWxsICYmIGRhdGEuY29ycE5hbWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGdldEFkZHJlc3MuYWRkcmVzc0NvbnRhaW5lci5lbXB0eSgpLmh0bWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBjb3JwX25hbWUgPSBkYXRhLmNvcnBOYW1lO1xuICAgICAgICAgICAgICAgIHZhciBhZGRyZXNzID0gZGF0YS5hZGRyZXNzVVMucmVwbGFjZShkYXRhLmNvcnBOYW1lICsgJywnLCAnJykucmVwbGFjZSgvLCAvZywgJzxiciAvPicpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb3JwX25hbWUgKyAnPGJyIC8+JyArIGFkZHJlc3M7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5cbiQoZG9jdW1lbnQpLmZvdW5kYXRpb24oKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciB0b2dnbGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5waG9uZS1idXR0b25cIik7XG5cbiAgZm9yICh2YXIgaSA9IHRvZ2dsZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgdG9nZ2xlID0gdG9nZ2xlc1tpXTtcbiAgICB0b2dnbGVIYW5kbGVyKHRvZ2dsZSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gdG9nZ2xlSGFuZGxlcih0b2dnbGUpIHtcbiAgICB0b2dnbGUuYWRkRXZlbnRMaXN0ZW5lciggXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAodGhpcy5jbGFzc0xpc3QuY29udGFpbnMoXCJpcy1hY3RpdmVcIikgPT09IHRydWUpID8gdGhpcy5jbGFzc0xpc3QucmVtb3ZlKFwiaXMtYWN0aXZlXCIpIDogdGhpcy5jbGFzc0xpc3QuYWRkKFwiaXMtYWN0aXZlXCIpO1xuICAgIH0pO1xuICB9XG5cbn0pKCk7XG4vLyBQaG9uZSBtZW51XG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcblxuICAkKCcubWVudS10cmlnZ2VyJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgJCgnbmF2IHVsJykuc2xpZGVUb2dnbGUoNTAwKTtcbiAgfSk7XG4gICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKSB7XG4gICAgaWYgKCQod2luZG93KS53aWR0aCgpID4gNjM5KSB7XG4gICAgICAkKCduYXYgdWwnKS5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgIH1cbiAgfSk7XG59KTtcblxuZnVuY3Rpb24gbW92ZVRvU2VjdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICB2YXIgdGFyZ2V0ID0gJChldmVudC50YXJnZXQpLmF0dHIoJ2hyZWYnKTtcbiAgICB2YXIgb2Zmc2V0VG9wID0gJCh0YXJnZXQpLm9mZnNldCgpLnRvcDtcblxuICAgIGlmICgkKCcuYnV0dG9uX2hhbWJ1cmdlcicpLmlzKCc6dmlzaWJsZScpKSB7XG4gICAgICAgICQoJy5idXR0b25faGFtYnVyZ2VyICsgLm1lbnUsICNvdmVybGF5JykucmVtb3ZlQ2xhc3MoJ2lzLXZpc2libGUnKTtcbiAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICAgICAgJCgnLmJ1dHRvbl9oYW1idXJnZXInKS5yZW1vdmVDbGFzcygnaXMtYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICBzY3JvbGxUb3A6IG9mZnNldFRvcCxcbiAgICB9LCA1MDApO1xufVxuXG4kKFwiLnNtb290aFNjcm9sbFwiKS5vbignY2xpY2snLCBtb3ZlVG9TZWN0aW9uKTtcblxuJChcIi5zZW5kLWVtYWlsXCIpLmRlbGF5KDIwMDApLmZhZGVPdXQoMTAwMCk7XG5cbiQoXCIjY29udGFjdHNfZm9ybVwiKS5vbihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXYsIGVsZW0pIHtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xufSk7XG4kKFwiI2NvbnRhY3RzX2Zvcm1cIikuYWpheEVtYWlsU2VuZGVyKHtcbiAgICBkb21haW46IFwieWlsdGFkbGltaXRlZC5jb21cIiwgLy8gQ29ycCBHcm91cCBVUkxcbiAgICBhdXRvcml6YXRpb25Ub2tlbjogXCJCZWFyZXIgZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjM01pT2lKNWFXeDBZV1JzYVcxcGRHVmtMbU52YlNJc0ltbGhkQ0k2TVRVME9EZzBOREF5TlRZek55d2laWGh3SWpveE5UZ3dNemd3TURJMU5qTTNMQ0poZFdRaU9pSjVhV3gwWVdSc2FXMXBkR1ZrTG1OdmJTSXNJbk4xWWlJNklubHBiSFJoWkd4cGJXbDBaV1F1WTI5dEluMC5UcHljcUpKZFF6NUJxVWItUFFEOThQQTBpOXN1dXd4b2NhT3BPS1BBbDljXCIsXG4gICAgZXZlbnQ6IFwiZm9ybXZhbGlkLnpmLmFiaWRlXCIsXG4gICAgc3VwcG9ydEVtYWlsOiBcInN1cHBvcnRAeWlsdGFkbGltaXRlZC5jb21cIlxufSk7XG5cbnZhciBnZXRBZGRyZXNzID0gKHtcbiAgICBzaXRlOiBcIm11c2V0aW1lcy5jb21cIiwgLy8gQW55IHNpdGUgZnJvbSB0aGUgQ29tcGFueVxuICAgIGNvcnBfaWQ6IFwiNjM4XCIsIC8vIENvbXBhbnkgSURcbiAgICBjb3VudHJ5X2NvZGU6IFwiQ1lcIixcbiAgICBhZGRyZXNzQ29udGFpbmVyOiAkKCcuYWRkcmVzc0NvbnRhaW5lcicpXG59KTsiXX0=
